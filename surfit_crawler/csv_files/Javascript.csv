url,title,description,category
https://surfit.io/link/9R48B,Recursive setTimeout test with Jest,"간단한 폴링(polling) 기능을 구현하다가 마주친 문제입니다. 
setTimeout API 함수와 재귀적인 호출로 구현했는데 Jest를 사용한 테스트 코드 작성이 쉽지 않았습니다. 
실제 구현 코드는 정상적으로 동작했지만, 테스트를 정상적으로 통과시키지 못 했습니다. 
스택 오버플로우를 뒤적이다 해결 방법을 찾았고 이에 대해 정리하였습니다. 
비슷한 문",Javascript
https://surfit.io/link/zMdWp,이벤트 전파 제어,"웹 서비스를 이용하다가 어떠한 버튼을 클릭했다고 가정해보자. 바닐라 JS로 설계되어 있다면 그 버튼은 기능을 수행하기 위해 document.addEventListener 와 같은 코드를 가지며, 여기서 첫 번째 argument로 'click'과 같은 값이 들어가있을 것이다. 'click'은 이벤트라고 하며 'addEventListener' 은 리스너라고 부",Javascript
https://surfit.io/link/9R4M7,모듈 패턴이란?,"모듈은 하나의 클래스로 구성되거나 특정 목적을 가진 복수의 함수(라이브러리 형태)로 구성된다.
export, import 지시자를 사용해 모듈을 내보내거나 불러올 수 있는데, 아래는 그 예시이다.
print()는 export를 사용해 외부로 내보낼 수 있다.

export function print() {
  console.log('hello!');
}
e",Javascript
https://surfit.io/link/N7L28,"Canvas, Web Audio API를 사용한 오디오 파형 시각화","오디오 파형(waveform)은 오디오, 영상 편집 툴 및 일부 오디오 플레이어에서 접할 수 있다. 업무에서 개발한 앱에서 오디오 재생 기능이 필요하여 wavesurfer.js를 사용하고 있었다. 그런데 Safari 브라우저에서 알 수 없는 버그로 인해 기능을 하지 않았고, 커스터마이징 지원을 위해 플러그인과 API 사용이 다소 복잡하다는 불편함을 느끼고 ",Javascript
https://surfit.io/link/OoZGb,Microtask & Macrotask in Javascript,"Web API 기능이 종료되면 콜백(callback) 함수가 콜백 큐(callback queue)에 순서대로 담깁니다. 
이 때 콜백 함수가 담기는 큐는 두 가지 종류가 있습니다.
매크로태스크 큐 (macrotask queue) - 우선순위가 높습니다.
  마이크로태스크 큐 (microtask queue) - 우선순위가 낮습니다.
매크로태스크와 마이크로태스",Javascript
https://surfit.io/link/BlOQ2,Infinite Scroll(무한 스크롤) with Intersection Observer,"Intersection Observer API는 ""상위 레벨 Document의 Viewport 또는 부모 요소""와 ""타겟 요소"" 간 교차 지점의 변화를 비동기적으로 관찰할 수 있는 방법을 제공한다.

Intersection Observer가 등장하기 전에는 어떤 요소가 화면에 보여지는지 감지하는 것은 매우 복잡한 일이었다. 따라서 요소의 visibility",Javascript
https://surfit.io/link/dP1X7,구글이 나 대신 일하게 하는 법,단순한 복사 붙여넣기의 반복 업무에서 오는 비효율을 개선하고 싶지 않으신가요?저는 단순 반복 업무가 따분하고 지루하게 느껴졌어요. 단순 반복에만 족히 3일 이상 걸리는 일들도 있어 시간이 아깝기도 했죠. 게으른 저는 이런 업무를 하는 시간에 더 의미있는 일을 하고 싶은 욕심이 생겼어요.이런 단순 반복을 가장 잘하는 친구가 누구일까 생각하다 적임자를 찾았습니,Javascript
https://surfit.io/link/GAJyM,테스트 코드에서 내부 구현 검증 피하기,"테스트 코드를 작성하고 운영하다보면 기존 코드가 조금만 변경되어도 테스트를 다 고쳐야하는 경우가 종종 있다. (모든 경우가 그렇진 않겠지만) 기능의 최종 결과를 검증하는게 아니라 내부 구현을 검증하는 경우에 자주 이런일이 있었다.
내부 구현을 검증하는 테스트들은 구현을 조금만 변경해도 테스트가 깨질 가능성이 커진다. 내부 구현은 언제든지 바뀔 수 있기 때문",Javascript
https://surfit.io/link/DAld1,[TypeScript] 타입스크립트 - Installation & Basic Types,"자바스크립트는 느슨한 타입 언어, 혹은 동적 언어라고 불린다. 즉, 변수의 타입을 미리 선언하지 않아도 코드가 해석될때 자동으로 파악이 된다. 그 말은 같은 변수에 여러 타입을 넣을 수 있다는 뜻이다. 그러니까 var a 라고 변수를 선언하면 그 변수에 숫자든 문자든 배열이든 함수든 원하는 타입을 모두 넣을 수 있다는 뜻이다.

var a = 123;	a ",Javascript
https://surfit.io/link/DAlyW,ts-jenum 으로 응집력 있는 TS 코드 작성하기 (feat. EnumClass),"TypeScript의 Enum은 딱 열거형으로서만 사용할 수 있습니다. 다른 언어에서 Enum을 Static 객체로 사용해본 경험이 있는 분들이라면 이 지점이 굉장히 답답하다는 것을 느낄 수 있는데요.

Java에서 Enum을 객체로 활용하면 어떤 큰 장점을 얻게되는지는 배민 기술 블로그 를 참고해보시면 좋습니다.

저와 똑같이 답답함을 느끼신 분이 계시는",Javascript
https://surfit.io/link/bbn4k,프론트엔드에서 MV* 아키텍쳐란 무엇인가요?,아키텍처란 구조화 된 옷장과 비슷한 겁니다. 처음 개발 할 때에는 규칙없이 그냥 코드를 만들다 보면 덩치가 커지는 순간 불편함이 생기고 정리가 안 되는 시점이 생깁니다. 그러니 처음부터 특정한 규칙을 만들어서 개발을 하는게 좋다는 것을 알게 되고 규칙을 하나씩 만들어가며 개발을 하다보면 이것이 반복이 되어 하나의 특정 패턴이 만들어집니다. 이러한 패턴들을 ,Javascript
https://surfit.io/link/AZlnz,Tree Shaking과 Module System,"들어가며
어플리케이션은 개발자가 직접 작성한 코드, 외부 라이브러리 등 다양한 코드조각들로 이루어져 있습니다.  어플리케이션이 복잡해질수록 번들 사이즈에 신경을 쓰게 되는데요, 이때 필요한 코드만 남기기 위한 작업, 흔히 Tree Shaking이라고 불리는 과정이 수반되어야 합니다.
이 글에서는 Tree Shaking에 대한 기본 개념과 Tree Shaki",Javascript
https://surfit.io/link/dPnLE,자바스크립트에서의 JSON 모듈,"애플리케이션의 설정을 JSON 파일에 저장하는 것이 편리할 때가 많고, 결과적으로 JSON 파일을 ES 모듈로 직접 가져오고 싶을 것이다. 
오랫동안 JSON 가져오기는 commonjs 모듈 형식으로 지원되었다.
다행히 현재 TC39 제안 3단계인 JSON 모듈은 JSON을 ES 모듈로 가져오는 방법을 제안한다. JSON 모듈이 어떻게 동작하는지 알아보자.",Javascript
https://surfit.io/link/xr0MP,ESLint 차근차근 이해하기,"개발을 한다보면 어떤 경우에는 세미콜론을 붙이고 또 어떤 경우에는 세미콜론을 빼먹기도 합니다. 때로는 변수를 선언하고 사용하지 않기도 하고 개발 시 디버깅용으로 작성한 console.log가 남아있기도 합니다. 코드가 어지럽고 중구난방입니다.
물론 자바스크립트는 위의 사례에 대해 관대하기 떄문에 프로그램은 잘 실행될 수 있습니다. 하지만 불필요한 것은 없는",Javascript
https://surfit.io/link/7LxGn,"디자인 패턴1, 옵저버란?","감시자 패턴이라고도 부르며, 객체의 상태를 관찰하여 특정 로직을 실행한다.
옵저버 패턴의 예시로 요소의 이벤트를 감지하는 addEventListener가 있다.
const btn = document.querySelector('.btn');


btn.addEventListener(""click"", function() { ... })

2) 옵저버 패턴의 구성",Javascript
https://surfit.io/link/dPnnP,함수형 프로그래밍 - 순수함수의 합성편 |> Pipe,"순수함수는 사이드이펙트가 없기 때문에 테스트 하기 용이하고 코드를 간결하게 만들어준다고 했습니다. 그리고 순수함수와 순수함수의 경우 결합을 하더라도 순수함수가 되기 때문에

값 =&gt; (순수함수 =&gt; 순수 함수 =&gt; 순수 함수 =&gt; 순수 함수) =&gt; 비 순수 함수

와 같은 형태로 코딩을 하여 사이드 이펙트가 날 수 있는 비 순수 ",Javascript
https://surfit.io/link/glXqY,"call, apply, bind의 차이","js에서는 함수 호출 방식과 상관없이 this에 접근할 수 있다.
그렇다면 this를 우리가 원하는 객체로 지정할 수는 없을까?
이번시간에는 커스텀 this를 지정할 수 있는 세 함수에 대해 알아보자!

call()은 모든 함수에서 사용가능하며, this를 특정 객체로 지정할 수 있다.
아래 예시는 printDogAge()에서 dog의 age값을 출력하려고",Javascript
https://surfit.io/link/7LMBO,JavaScript Proxy. 근데 이제 Reflect를 곁들인,"메타프로그래밍이란 하나의 컴퓨터 프로그램이 다른 프로그램을 데이터로 취급하는 것을 말한다. 즉, 어떤 프로그램이 다른 프로그램을 읽고, 분석하거나 변환하도록 설계된 것이다. 메타프로그래밍에 이용되는 언어를 메타 언어라고 하고, 조작 대상이 되는 언어를 대상 언어라고 한다. 메타 언어와 대상 언어는 같을 수도 있고, 다를 수도 있다.
1.1. 메타 언어와 대",Javascript
https://surfit.io/link/qyrp2,Sanitizer API를 이용해 안전하게 DOM 조작하기,"웹 애플리케이션은 사용자로부터 다양한 문자열을 입력받지만, 그 입력을 항상 믿을 수 있는 건 아닙니다. 사용자의 입력을 그대로 HTML에 표현하는 경우를 생각해봅시다. 만약 여러분이 보안에 충분한 주의를 기울이지 않는다면, 악의를 가진 사용자들로부터 교차 사이트 스크립팅(XSS, cross-site scripting) 공격을 쉽게 받을 수 있겠죠.

이러한",Javascript
https://surfit.io/link/Q6lne,테스트 픽스처 올바르게 사용하기,"xUnit에서는 테스트 대상 시스템 (System Under Test, 이하 SUT) 를 실행하기 위해 해줘야 하는 모든 것을 테스트 픽스처라고 부른다. 처음 테스트 코드를 배우게 되면 이 테스트 픽스처 부분에 대해서 완전히 오해하는 경우를 자주 본다. 최근에 팀에 단위 테스트를 전파하고 코드리뷰를 진행하는 과정에서 다들 비슷한 오해를 하고 있는걸 발견하고",Javascript
https://surfit.io/link/kqNoP,promise와 async await의 차이점,"js는 동기적인 언어이지만, 서버에 데이터를 요청하는 등 대기시간 긴 작업의 경우 비동기 작업을 한다.

하지만 이 때문에 발생하는 문제가 있는데, 아래 예시를 살펴보자

getAnimals()는 서버에서 동물의 데이터를 받아오는 함수이다.

그리고 우리는 getAnimals()의 응답값을 받아 출력하고 싶다.

아래와 같이 작성하면 animals()의 값",Javascript
https://surfit.io/link/Jl7WN,이벤트 루프(Event Loop),자바스크립트 엔진 중 구글의 V8 엔진은 크롬과 Node.js에서 사용됩니다. V8 엔진은 크게 메모리 힙(Memory Heap)과 콜 스택(Call Stack)으로 구성되는데 각각 다음과 같습니다.메모리 힙 : 메모리 할당이 이뤄지는 곳콜 스택 : 코드가 실행되면서 스택 프레임이 쌓이는 곳메모리 힙은 간단히 원시 타입이 아닌 타입이 저장되는 공간입니다.브,Javascript
https://surfit.io/link/p14Zd,타입스크립트 꿀팁,"타입스크립트는 여러모로 유용한 도구이지만 가끔은 타입 에러를 해결하느라 진땀을 빼기도 합니다. 그럴 때는 any 를 사용하고 싶은 유혹에 빠지기도 하는데요, 그렇게 하면 타입스크립트를 사용하는 의미가 퇴색됩니다.
나름 초창기부터 타입스크립트를 사용하면서 알게된 내용과 몇 가지 개인적인 의견을 공유해보겠습니다.
1. enum 보다는 union type 을 추",Javascript
https://surfit.io/link/EmAaJ,크롬 퍼포먼스 탭과 debugger 키워드로 효율적인 디버깅하기,"크롬 퍼포먼스 탭과 debugger 키워드를 활용하여 좀 더 효율적으로 디버깅을 하는 방법에 대해 공유해보려고 합니다.미리 짜여진 상황이 아니기 때문에 그동한 접하지 못했던 개념이나 코드를 마주칠 수 있는데, 크게 신경 쓰지 않고 문제를 해결하는 전반적인 과정에 대해 유심히 봐주시면 좋을 것 같습니다.회사 내 프로젝트와 관련되어 있는 이슈이다 보니 자세히 ",Javascript
https://surfit.io/link/AZj6N,type과 interface 비교,"type과 interface는 타입을 확장하는 방법에 차이가 있습니다.
type은 & 연산자, interface는 extends 키워드를 이용합니다.
interface IStudent2 extends IStudent {  age: number;}type TStudent2 = TStudent &amp; {  age: number;};
또한, interface",Javascript
https://surfit.io/link/dPb17,그림판 만들기,"바닐라자바스크립트로 프로젝트를 진행하면서 다양한 메서드들을 익히고 함수 작동 방식을 공부할 수 있다. 또 익숙한 그림판을 구현하면 더 재밌게 코딩할 수 있다고 생각했다!
⚙ 무엇을 구현하였나?
캔버스에 선이 그려지고 전체 채우기를 할 수 있다.
팔레트를 이용하여 다양한 색상을 사용할 수 있다.
brush의 두께를 조절할 수 있다. 
✅ 구현상황
1) ✏️ ",Javascript
https://surfit.io/link/00AyD,Virtual DOM 만들기,"DOM은 HTML을 객체로 표현한 것이며, JavaScript와 연결될 인터페이스입니다. HTML로 작성된 코드는 HTML 파서에 의해 DOM이라는 객체가 모인 트리로 변환되는데, 이를 DOM 트리라 합니다.
Virtual DOM의 이점
Virtual DOM은 DOM이 변경될 때 전체 DOM을 Reflow하는 것이 아닌, 가상의 DOM을 이용해 한 번만 R",Javascript
https://surfit.io/link/Jlm22,Element를 저장 및 불러오기,"Range 값을 저장 후 불러오고 싶은데, Element 값을 저장할 수 없었습니다. JSON.stringify를 사용해서 Element를 문자열 값으로 수정하려 하더라도 빈 객체가 반환되었습니다.
element와 JSON.strinify(element)이를 해결하기 위한 방법을 알아보던 중, 페이지의 Element에 data-key를 모두 설정한 뒤, 해",Javascript
https://surfit.io/link/DAMxl,자바스크립트의 this는 김춘수의 〈꽃〉이다,"this는 선언 시점이 아닌 런타임 시점에 바인딩되며, 함수 호출 당시 상황에 따라 콘텍스트가 결정된다.
즉 함수 선언 위치와 상관없이 this 바인딩은 오로지 어디서 어떻게 함수를 호출하느냐에 따라 결정된다.
함수를 호출하는 방법은 다음과 같이 다양하다.
일반 함수 호출 (기본 바인딩)
메서드 호출 (암시적 바인딩)
Function.prototype.ap",Javascript
https://surfit.io/link/N7abg,프로토타입 (feat. 매운 맛),"자바스크립트는 프로토타입 기반 언어라고 불린다. 그런데 이 프로토타입은 무엇이며 어떻게 생성될까?이 포스팅에서 자세히 알아보자 🙂
1) 프로토타입이란?
(1) 프로토타입은 무엇일까
자바스크립트에서는 객체를 생성할 때, 원형을 복사하는 방식을 취한다. (ex. new Object())
그리고 이 과정에서 객체에 프로토타입이 추가되는데, 우리는 프로토타입을 통",Javascript
https://surfit.io/link/9R96m,Template Literal Types로 타입 안전하게 코딩하기,"2020년 11월 TypeScript 4.1이 출시되면서 “Template Literal Type”을 사용할 수 있게 되었습니다. TypeScript로 JSON Parser를 만들거나, document.querySelector 의 결과 타입을 추론할 수 있게 되어 화제가 되었는데요. 이번 아티클에서는 Template Literal Type이란 무엇인지, 이",Javascript
https://surfit.io/link/9R84N,"setTimeout(foo, 0)에서 foo는 정말 0ms 후에 실행될까?","자바스크립트는 싱글스레드 언어다. 하나의 싱글 콜 스택만을 가지고 있다는 뜻이며, 자바스크립트의 엔진은 한 번에 하나의 태스크만 실행할 수 있다는 뜻이다. 
자바스크립트의 함수를 호출하면 함수 실행 컨택스트가 생성된다. 이때 생성된 함수 실행 컨텍스트는 콜 스택에 푸시되고 함수 코드가 실행된다. 
그리고 함수 코드의 실행이 끝나면 실행 컨텍스트 스택에서 팝",Javascript
https://surfit.io/link/2v8qj,그린랩스에서 리스크립트 시작하기,"리스크립트는 타입스크립트보다 더 강력한 타입 시스템을 제공하는 함수형 언어이며, 타입스크립트와 마찬가지로 자바스크립트 코드로 트랜스파일할 수 있습니다. 리스크립트 리액트는 리액트를 리스크립트에서 사용할 수 있도록 바인딩한 라이브러리입니다.이 포스팅에서 간략한 프론트엔드 부트캠프 소개와 리스크립트를 사용하면서 개인적으로 좋았던 점을 공유합니다.부트캠프 소개그",Javascript
https://surfit.io/link/2vpjp,타입스크립트 안전하게 활용하기,"타입 시스템은 전산학에서 다루는 주요 주제 중 하나입니다. Low-level 프로그래밍 언어부터 high-level 프로그래밍 언어까지, 모든 프로그래밍 언어에는 연산(operator, operation)이라는 개념이 존재합니다. 언어는 특정 타입을 가지는 값 간의 연산을 정의합니다. 가장 우리에게 친숙한 연산인 사칙연산으로 예를 들어보겠습니다. C에서 +",Javascript
https://surfit.io/link/YAAOe,toString() 사용 설명서,"자바스크립트의 Object 타입에는 toString()이라는 메서드가 정의되어 있다. 이름에서 보듯이 어떠한 타입을 문자열로 변환해준다. Object가 자바스크립트에서 모든 타입의 조상이라는 걸 생각하면 자바스크립트의 모든 타입은 어떤 형태로든 toString()이라는 메서드가 있다는 의미가 된다.



이 글에서는 이렇게 널리 퍼져있는 toString()",Javascript
https://surfit.io/link/2vpGj,node_modules로부터 우리를 구원해 줄 Yarn Berry,"Yarn Berry는 Node.js를 위한 새로운 패키지 관리 시스템으로, Yarn v1의 주요 개발자인 Maël Nison 씨가 만들었습니다. 2020년 1월 25일부터 정식 버전(v2)가 출시되어, 현재는 Babel과 같은 큰 오픈소스 레포지토리에서도 채택하고 있습니다. Yarn Berry는 GitHub yarnpkg/berry 레포지토리에서 소스코드가",Javascript
https://surfit.io/link/9RRZN,WeakMap이 알고 싶다,"WeakMap 객체는 키가 약하게 참조되는 키/값 쌍의 컬렉션으로, 키는 반드시 객체여야만 한다. 원시 값은 키가 될 수 없다. 만약 키를 원시 값으로 추가하면 Uncaught TypeError: Invalid value used as weak map key라는 에러가 발생한다.
WeakMap은 특정 키에 대한 값이 있는지 메서드를 통해 확인 가능하지만, ",Javascript
https://surfit.io/link/jlG9q,JSCodeShift로 기술 부채 청산하기,"JSCodeShift는 Facebook이 만든 JavaScript/TypeScript 코드 수정 도구입니다. JSCodeShift를 통해 코드를 수정하는 코드를 작성할 수 있습니다.



찾아 바꾸기와의 비교



JSCodeShift를 도입하기 전, 토스에서는 대량의 코드 수정이 필요할 때면 IDE의 찾아 바꾸기(Find &amp; Replace)를 사용",Javascript
https://surfit.io/link/Z88b9,자바스크립트 성능의 비밀 (V8과 히든 클래스),"V8은 구글이 도입한 오픈소스 자바스크립트 엔진이다. C++로 작성되었으며 구글 크롬, 크로미움 웹 브라우저, NodeJS를 지원한다. 환경과 상호작용하고 프로그램을 실행하기 위한 바이트코드를 생성하는 역할을 담당한다.
처음 V8은 웹 브라우저의 성능 향상 메커니즘으로 도입되었으며 시간이 지나면서 다른 엔진보다 훨씬 향상된 인터프리터가 되었다.

V8과 다",Javascript
https://surfit.io/link/KEQJm,TDD로 개발 진행해보기 (feat. wallaby.js),"TDD는 Test Driven Development 즉, 테스트 주도 개발을 뜻합니다.

매우 짧은 개발 사이클을 반복하는 소프트웨어 개발 방법론입니다.

테스트를 먼저 작성하고 그다음 실제 코드를 구현하는 형태로 개발이 진행하는 형식입니다.

테스트 코드 작성 → 구현 코드 작성 → 리팩토링 이 3가지를 짧은 주기를 반복하며 점증적으로 개발합니다.

일반",Javascript
https://surfit.io/link/ll8dz,null 떠나고 만난 undefined,"결론적으로 앞으로의 프로젝트에서는 코드베이스에서 null은 직접 사용하지 않고 undefined 만을 사용하는 것을 고려해 보려고 합니다. 특히 토이프로젝트에서는 당분간 null을 사용하지 않을려고 합니다. 뭔가 경험에 기반한 저만의 정답이 나올 때까지요.
고정관념
undefined을 생각하면 떠오르는 몇가지 특징 있죠.
객체에 없는 프로퍼티에 접근하면 u",Javascript
https://surfit.io/link/Kr4gk,프론트엔드 개발 ReasonML이라 좋았던 점,"ReasonML은 강력한 정적 타입 시스템을 장착한 함수형 언어인 OCaml에 뿌리를 둔 ReScript 컴파일러에 의해 자바스크립트 코드로 변환되고, 이는 브라우저나 Node.js 기반에서 실행됩니다.이 포스팅에서는 ReasonML 로 프로젝트를 진행하며 느낀 장점을 이야기합니다. 아마 제가 기존까지 사용했던 자바스크립트와 타입스크립트 환경과의 비교 과정",Javascript
https://surfit.io/link/KpQM2,js-joda 로 TypeORM Date 타입 대체하기 (with NestJS),"JavaScript 의 Date Type은 JavaScript의 단점을 이야기할때 항상 거론되는 점인데요.
javascript-date-type-is-horribly-broken
위 글에서 언급한 연산에 관한 문제도 있지만, 단순히 +1 Day를 해야하는데도 아래와 같이 직관적이지 못한 잘못된 인터페이스의 코드를 사용해야하는 것도 문제인데요.

var to",Javascript
https://surfit.io/link/3qpOB,"이벤트 루프, 넌 누구냐","웹 api에서 제공하는 비동기 함수들(ex. fetch, setTimeout)과 워커 종류를 제외한 대부분의 자바스크립트 코드가 메인 스레드라는 곳에서 실행된다. 또한 브라우저 화면을 그리는 렌더링 작업도 이곳에서 실행된다. 이처럼 브라우저의 주요한 동작들이 메인 스레드라는 하나의 싱글 스레드로 동작한다.
여기서 메인 스레드가 싱글 스레드로 동작하는 것이 ",Javascript
https://surfit.io/link/3GPrk,약한 참조와 Finalizer,"WeakMap과 WeakSet은 자바스크립트에서 객체의 약한 참조를 만드는 유일한 방법으로 WeakMap이나 WeakSet에 객체를 키로 추가하면 가비지 컬렉션을 막지 않는다.
const wm = new WeakMap();
{
  const ref = {};
  const metaData = 'foo';
  wm.set(ref, metaData);
  wm",Javascript
https://surfit.io/link/KQXQ0,"JS flat(), flatMap() 함수 톺아보기","flat()과 flatMap()은 둘 다 중첩된 배열 구조를 평탄화하기 위해 사용하는 함수입니다.
두 함수 모두 ECMAScript 2019(ES10)에 새롭게 추가된 함수라 아직은 일상적으로 쓰이진 않지만, 그래도 알고 있으면 아무리 깊고 복잡한 배열 구조여도 간단하게 정리할 수 있다는 장점이 있습니다.

flat()
먼저 flat() 함수부터 알아보도록",Javascript
https://surfit.io/link/KEZx2,WeakRefs와 Finalizers 위주로 정리해본 ES2021,ECMAScript 2021 최종 스펙이 공개되었어요. 바로 쓸만한 것도 있고 언어를 조금 더 깊게 활용할 수 있는 기능들도 생겼습니다. 매해 이렇게 달라지고 개선되는 것을 보면서 좋기도 하지만 점점 이것도 무뎌지는진 건지 아니면 개선점이 와닿지 않는 건지 예전만큼 관심이나 파급효과가 적어진 것 같아요. 스펙을 보자마자 조만간 정리해야지 했지만 많은 시간이,Javascript
https://surfit.io/link/3A9MP,자바스크립트 검색엔진 최적화(SEO) 가이드 총 정리,"자바스크립트 사용으로 인해 사이트의 랭킹이나 사용자 경험이 손상되지 않도록 하기 위해, 필수적으로 알아야 할 모든 것을 다룹니다.

What is Javascript SEO?
'자바스크립트 SEO'는 JS 기반의 웹사이트로 만들어진 테크니컬 SEO의 한 분야입니다.
검색 엔진이 완전히 크롤링, 렌더링하고 인덱싱 하기 쉽습니다.
오래된 브라우저를 포함하여 많",Javascript
https://surfit.io/link/Krb2l,클로져와 가까워지기,"클로져를 이해하는 것이 중요하다고 생각하는 이유는 클로져가 자바스크립트 엔진의 동작과 연관이 있기 때문입니다.
오늘은 클로져에 대해서 알아보도록하겠습니다.
1. 클로져란?
코드를 보면 어떤 상황을 클로져라 부르는지 쉽게 이해할 수 있습니다.
const outer = () =&gt; {
  const outerVariable = 'outer!'; 

  co",Javascript
https://surfit.io/link/KPkm2,Vanilla Javascript로 React UseState Hook 만들기,"React의 useState Hook의 작동방식에 대해 고민해보고, 구현해보고, 최적화하는 내용을 다룹니다.  # 1. React의 useState # (1) 의문을 갖기 필자는 React를 사용할 때 hook api들을 보면서 항상 신기했다. useState로 state와 setState를 만들 수 있다. 500ms(0.5초)마다 setCount를 실행한",Javascript
https://surfit.io/link/3AdlQ,TodoList 작성기,"DOM 에 직접 구현하는 방식의 한계

- DOM에 접근하고 업데이트하는 시점에 명확한 기준점이 없기 때문에 UI 가 많아질수록 DOM 업데이트 구간 추적이 어려워진다.
-  DOM 에 뿌려줄 data가 변경될 때마다 일일히 찾아서 조작해야 한다.
- 중복 코드가 많아지고 DOM 접근이 많아진다.
 
따라서 Data를 관리하는 component와 Data를",Javascript
https://surfit.io/link/KpqJJ,"Electron, 저도 한번 해보겠습니다","Front End(이하 FE) 개발이라고 하면, 보통 웹(Web) 사이트/페이지 또는 앱을 개발한다고만 생각할 수 있는데요, 오래전부터 Node.js등을 활용해 서버 측 백엔드, PC 프로그램, VR/AR  개발까지 영역을 확장해가고 있습니다. 일렉트론(Electron)을 이용해 GUI 구현과 서버 측 연동으로 데스크톱용 앱을 개발하는 이야기를 들려드리고자",Javascript
https://surfit.io/link/wdaLY,밈으로 알아보는 개발: 0 = '0' = [] ?,"JavaScript 언어에 대한 밈 하나를 소개하고, 한 단계씩 해부해보도록 하겠습니다. 오늘의 밈이보다 무해할 수 없는 뚱이와, 이보다 유해할 수 없는 내용의 환장의 콜라보를 들고 왔습니다.짤막한 지식자바스크립트에서 비교하는 연산자는 ==입니다. 그래서 a == b라고 적는다면 a와 b가 동일한 값인지 확인하고 같으면 true, 다르면 false를 반환합",Javascript
https://surfit.io/link/Krb1l,Vanilla Javascript로 가상돔(Virtual DOM) 만들기,Virtual DOM을 이해하기 위해 브라우저의 로딩 과정에 대해 간략하게 알아보자.  브라우저는 파싱 → 스타일 → 레이아웃 → 페인트 → 합성 → 렌더 등의 과정을 거친다. 그 후에 JS나 CSS를 통해 DOM이나 CSS에 변화가 생길 경우 reflow 혹은 repaint 등의 과정을 수행한다. 한 번 차례대로 알아보자. # (1) 파싱 브라우저가 HT,Javascript
https://surfit.io/link/3OdOk,Prototype __proto__ [[Prototype]],"JavaScript를 공부하는 프린이라면 왠지 피하고 싶고 느낌적으로 이해는 되지만 입으로 설명할 수 없는 그런 키워드들이 있다.
그중 하나는 바로 내가만든.
Prototype 삼형제

그 이유는 pro~ 를 남발하는 설명 때문..""생성자 함수의 프로토타입 프로퍼티 [[프로토타입]]내부슬롯의 값을 가리킨다~""
근데 이친구들을 피해다녔더니 점점 나의 앞길이 ",Javascript
https://surfit.io/link/3BQ49,URI 직렬화로 알아보는 문자열 타입 추론하기 (부제: 타입스크립트 실전 7가지 기술),"웹 애플리케이션을 개발하다 보면 수 많은 경로(라우팅)가 생기고, 이에 대한 규칙을 세우고, 해당 경로에 알맞는 경로 매개 변수를 넘겨주어야 합니다. 프론트엔드에서 주로 사용하는 react-router, vue-router등에서 쓰이는 path-to-regexp 패키지가 대표적으로 이러한 경로 생성에 대한 인터페이스를 제공하고, 직렬화를 도와줍니다.저희는 ",Javascript
https://surfit.io/link/wDx1p,Vanilla Javascript로 상태관리 시스템 만들기,"현대적인 프론트엔드 개발에서 제일 중요한 것은 바로 상태관리 라고 해도 무방하다. Vue나 React 같은 프론트엔드 프레임워크의 주된 목적 중 하나가 상태를 기반으로 DOM을 렌더링 하는 것이기 때문이다. 학습을 위해 TodoList를 만드는 수준에서는 사실 상태관리 프레임워크가 필요하진 않다. 다양한 종류의 컴포넌트가 있는 것도 아니고, 컴포넌트의 De",Javascript
https://surfit.io/link/wDLLp,스타트업 서비스 개발에 도움을 줄 수 있는 Javascript 오픈 소스들,서비스 기획물을 직접 디자인을 구현하는 것도 좋지만 인적 자원이 한정되다 보니 모든 것을 디자인화할 수는 없습니다. 그래서 일부는 오픈 소스로 대체하거나 디자인을 변형하는 등의 커스터마이징을 통해 동일한 디자인 Identity를 유지하기도 합니다. 그동안 제가 리서치하거나 사용해본 것들중에 괜찮은 (UI기반의) Javascript 라이브러리들을 공유하면 어,Javascript
https://surfit.io/link/w6jN0,"JS map, filter, reduce 함수 톺아보기","보통 배열 내 인자들을 차례로 순회할 때 for문을 많이 사용합니다. 단순하지만 확실한 방법이죠. 하지만 조금만 JavaScript를 살펴보면 for문보다 더 유용하고 간결하게 코드를 작성하게 해주는 메서드를 만날 수 있습니다.
그래서 오늘은 배열에 사용하는 메서드 중에서도 비슷한 기능을 하는 세 함수. reduce, map, filter에 대해 알아보겠습",Javascript
https://surfit.io/link/wDeDA,프론트엔드 모니터링에서 Script error 만 나올때,"프론트엔드 모니터링을 보다보면 다음과 같이 Script error. 만 나올때가 있습니다.
나머지 에러들은 정확하게 에러가 노출되지만, 특정 케이스에 한해서 Script error. 만 나오게 되는 것인데요.
왜 모니터링에서는 Script error. 만 나오며, 이를 해결하기 위해선 어떻게 해야하는지 알아보겠습니다.
1. 배경 소개
예를 들어 다음과 같은",Javascript
https://surfit.io/link/w4ZBP,웹팩 빌드 속도 개선하기,"얼마전 부쩍 프로덕트에 빌드속도가 느려지는 일이 있었다. 평소 5분정도면 넉넉히 끝나던게 20분 가까이 소요되기 시작했다.
이는 많은 삶의질의 하락을 가져왔고 이를 개선하는 과정을 기록으로 남겨두려 한다.

TL; DR
vue-cli의 report-json 옵션을 활성화 했을때
  webpack-bundle-analyzer의 소요시간이 너무 길다면,
  w",Javascript
https://surfit.io/link/3azjG,JavaScript sort() 함수 톺아보기,"sort() 메서드는 배열의 요소를 정렬하는 데 사용하는 함수입니다. 공식 문서에서는 기본 구문을 아래와 같이 정의합니다.
arr.sort([compareFunction])

대괄호([])는 괄호 안의 매개변수가 필수가 아니라 상황에 따라 생략이 가능하다는 의미입니다.
정렬의 경우 매개변수가 있을 경우와 없을 경우에 값이 달라지는 모습이 종종 보이는데요, ",Javascript
https://surfit.io/link/KRPdl,당신이 모르는 자바스크립트의 메모리 누수의 비밀,"크롬 개발자도구로 하는 디버깅과 해결책을 찾아서!
인터뷰하는 동안 다음과 같은 질문을 받아 본 적이 있는가? 웹 페이지가 멈추는 경우, 원인이 뭐라고 생각하는가? 원인을 찾아서 해결할 방법이 없을까?
이 질문은 난도가 있는 질문으로 페이지 성능 최적화 문제와 많이 연결된다. 필자는 면접 때 이 질문에 어떻게 대답했는지 아직도 기억이 난다.
먼저 네트워크 요",Javascript
https://surfit.io/link/3LBbD,"Webpack 3 에서 Webpack 5 으로, ― 티도리 프레임워크","현재 티도리 프레임워크는 Webpack 3 를 기반으로 동작하고 있다. 최근 Webpack 5 로 업그레이드하는 작업을 진행하고 있는데, 그 와중에 당연히 시행착오도 여럿 발생하고 있어 내가 했던 삽질을 바탕으로 웹팩을 업그레이드하기 위해 겪어야 할 과정을 공유하고자 한다. 본론으로 가기 전에 먼저 이야기 하자면, 꼭 필요한게 아니라면 웹팩 업그레이드는 권",Javascript
https://surfit.io/link/w8E7o,타입스크립트에서 함수 문법,"간단한 예제로 알아보는 타입스크립트에서 다양한 함수와 함수 타입을 위한 문법
자바스크립트에는 함수를 작성하는 방법이 많다. 타입스크립트에서 갑자기 이 모든 것을 섞어 버리면 생각할 것이 많아진다. 그래서 몇몇 친구들의 도움으로, 필자는 여러분이 보통 필요하거나 실행할 다양한 함수의 형태를 간단한 예와 함께 나열해 보았다.
다른 문법의 조합은 매우 많다는 것",Javascript
https://surfit.io/link/59z9r,[Webpack] 웹팩 개념 알아보기,"웹팩에 대해 들어본 적은 있지만 제대로 공부한 적은 없어서 이번에 개념부터 차근차근 공부하며 정리해봤습니다!
웹팩이란 무엇인지, 왜 사용하는지부터 시작해서 어떠한 장점이 있는지 전반적인 개념에 대해 알아보고 정리했습니다 🤔

1. Webpack 등장 배경 ✨
1-1. 페이지 로딩 속도 저하 🚶‍♀️

웹 사이트를 개발할 때 JS, CSS, IMG 등 수많은",Javascript
https://surfit.io/link/w6j9q,"비동기처리, 흐름대로 이해하기","오늘은 Javascript에서 비동기 처리에 대한 방법, 콜백 함수와 Promise 그리고 async/await이 나온 배경까지 흐름대로 알아보겠습니다!
비동기 처리를 이해하기 쉬운 예시
자바스크립트의 특징, 비동기 처리
  C++을 시작으로 프로그래밍을 배운 저는, 당연하게도 코드가 쓰여진 순서대로 동작하는 것에 익숙해 있었습니다. 하지만 자바스크립트에 ",Javascript
https://surfit.io/link/50XWo,JWT 원리와 장단점,"JWT를 이용하여 로그인을 구현하는 것은 부트캠프 1주차에 이미 해 본 경험이 있다. 하지만 흐름을 정확히 이해하지 못한 채 구현했다는 생각이 들었다. 위에서 말한 조건에 부합하지 못했던 것이다. 그래서 나는 공부를 해야만 하는 이유를 만들기로 했다.매주 가지는 지식공유 시간에 JWT를 주제로 발표해보겠다 자원한 것이다.
목차

비교

사용자가 이미 회원가",Javascript
https://surfit.io/link/w6ngl,자바스크립트 시각화 : 이벤트 루프,"이벤트 루프는 자바스크립트 개발자가 어떤 방식으로든 다루게 되지만, 처음 이해하기엔 다소 난해할 수 있습니다. 나는 시각적으로 학습하는 사람이고, gifs를 통한 시각적 설명으로 당신을 돕고자 합니다.
하지만 먼저, 이벤트 루프는 무엇이며, 왜 신경써야할까요? 
자바스크립트는 싱글스레드로, 한 번에 한 가지일만 할 수 있습니다. 이것은 일반적으로 큰 문제 ",Javascript
https://surfit.io/link/Ky7N0,IndexedDB 를 활용한 풀필먼트 시스템 고도화,"현재 브랜디에서 헬피셀러들에게 제공하고 있는 풀필먼트 시스템 내, IndexedDB 가 적용된 부분을 일부 소개하고 추가로 적용하면 좋을 부분이 있는지 검토해봤습니다.


IndexedDB 란
  풀필먼트 시스템에 적용된 IndexedDB
  추가 적용에 대한 검토
  마무리
1. IndexedDB 란

IndexedDB에 대한 소개는 MDN(링크)에 잘 ",Javascript
https://surfit.io/link/50mNn,간단한 예제로 알아보는 자바스크립트 ES2021 기능,"오늘 우리는 2015년부터의 ECMAScript 기능을 살펴볼 것이다.
ES2015 (ES6)
ES2016 (ES7)
ES2017 (ES8)
ES2018 (ES9)
ES2019 (ES10)
ES2020 (ES11)
ES2021 (ES12)
소개
ES2021은 2021년에 해당하는 ECMAScript 버전이다. 이 버전에 ES6(2015년)에 등장한 것만큼 ",Javascript
https://surfit.io/link/3BGB1,requestIdleCallback으로 초기 렌더링 시간 14% 단축하기,"최근 웹 바이탈이 대두되면서 LINE 증권 프런트 엔드에서도 성능 개선에 힘쓰기 시작했습니다. 약 2주 정도 개선 작업을 진행한 뒤 개발 환경에서 계측한 결과, Lighthouse 성능 점수가 기존보다 30점가량 상승했습니다. 성능을 개선하기 위해 다양한 방안을 실시했는데요. 이번 글에서는 그중에서도 흥미로웠던 사례로 requestIdleCallback을 ",Javascript
https://surfit.io/link/KQ9ln,사수에게 칭찬받는 PR 체크리스트,"한번 리뷰 받은 내용은 두번 다시 실수하지 말자!
사수한테 칭찬받고 싶은 신입 ESFJ 개발자의 기록


한줄로 짤 코드를 누가 열줄로 해놨어요...
클래스 구구... 코테에서 한줄로 푼다면 우와~ 하겠지만, 누구나 이해하고 수정해야 하는 코드라면..?
실제 업무에 들어가면 다른 개발자와 함께 파일을 다루게 된다. 때문에 혼자 이해하는 코드를 짜는 것만큼 ",Javascript
https://surfit.io/link/3LgOW,ES6 Module,"require 는 Node JS에서 사용되고 있는 CommonJS 키워드이고, 여기서 배워볼 import 는 ES6에서 새롭게 도입된 키워드입니다. 두 개의 키워드 모두 하나의 파일에서 다른 파일의 코드를 불러온다는 동일한 목적을 가지고 있습니다.
const moment = require(""moment"")
import moment from ""moment""
",Javascript
https://surfit.io/link/3B4yj,유지보수 가능한 코드를 위한 노오오력!🔥,"작동 되는 코드를 만드는 것은 쉽다, 하지만 나중에 작성한 코드를 고치는 것은 어렵다.
내가 작성한 코드를 보면서 '왜 이렇게 만들었지?', '이건 왜 이렇게 했을까?' 란 물음표들이 뜨게 되고 '다음부터는 이러지 말아야지'라고 생각하게 됩니다. 내가 나의 코드를 보는데 다른 사람이 본다면 얼마나 많은 물음표가 뜨게 될까요. 그래서 이번 포스팅에서는 그동안",Javascript
https://surfit.io/link/K2m6l,Jest를 IntelliJ (or Webstorm) Debug 모드로 실행하기,"VS Code에 비해 Javascript 개발 환경에서 IntelliJ (+ WebStorm)이 갖는 가장 큰 장점은 디버깅 기능입니다.  코드의 호출 스택을 쫓아간다거나, 곳곳의 코드에서 브레이크를 걸고 Expression으로 임시코드를 실행해보는 등 다양한 디버깅 기능을 IntelliJ에서는 사용해볼 수 있는데요.  Javascript의 테스트 프레임워",Javascript
https://surfit.io/link/3196W,"Front-End  면접 질문 대비 Part1 (hoisting, closure, this)","이번에 면접 대비를 위해 프론트 엔드 분야에서 알아야 될 내용들을 정리하고자 합니다. 

Hoisting
➡️ 함수 안에 있는 선언들을 모두 끌어올려서 해당 함수 유효 범위의 최상단에 선언하는 것. 끌어올린다고 생각하면 됩니다.
여기서 유효 범위는 함수 블록 {} 안을 뜻합니다.
호이스팅의 대상
✅ var 변수 선언과 함수 선언문(Function Decla",Javascript
https://surfit.io/link/wmEmo,한글도 지원하는 퍼지 문자열 검색,"UI  작업을 하다보면 목록을 검색해야 할 때가 많다. 그런데 사람의 기억이라는 게 정확하지 않아서 혹은 전부 입력하기 귀찮아서 개떡같이 일부만 입력해도 찰떡같이 원하는 결과를 보여주는 UI가 필요하다. 예를 들어, 개발자들이 사용하는 여러 에디터에는 다음과 같이 대충 입력하면 일치하는 경로를 찾아서 보여주는 기능이 있다.



찰떡같은 경로 검색정확히 일",Javascript
https://surfit.io/link/3O9Rk,컴포넌트 성능 향상 시키기 (feat. Lodash throttle & debounce),"KAKAOMAP API를 이용해 프로젝트를 진행 중이다.
지난 프로젝트에서 카카오맵 API를 사용했지만, 좌표를 props로 받아와 띄우는 정적인 지도에 지나지 않았다. 그래서 이번에 동적인 지도를 구현하는 데에 있어서, 렌더링이나 성능 개선에 더욱 신경을 쓰면서 개발하는 데에 초점을 맞췄다.(버벅이는 지도 상상하기도 싫엇 😭..)
특히 지도 API에서 지",Javascript
https://surfit.io/link/3M7YB,자바스크립트 코드 테크닉 모음집,내가 코드스테이츠 Pre Course 진행중 알게된 쓸만한 JS 테크닉들,Javascript
https://surfit.io/link/KYRjA,아주 거대한 (자바스크립트) 어플리케이션을 구축하기,"이 글은 Malte Ubl의 ""Designing very large (JavaScript) applications""의 번역입니다. 이해를 돕기 위해 원문에는 없는 소제목을 붙였으며 가독성을 떨어뜨리던 원문의 이미지들 중 일부를 의도적으로 첨부하지 않았고, 수많은 의역이 들어갔습니다. 이 글의 모든 권리는 원 저작자에게 있습니다만 번역하는 데에도 아주 고생했",Javascript
https://surfit.io/link/w8B41,웹 스토리지 : 무엇을 써야할까요?,"최근에 로컬 스토리지를 사용하려고 찾아봤더니 이제는 로컬 스토리지를 사용하지 않는것이 좋다는 Google Chrome 팀 개발자의 글을 발견했습니다.

요즘 트렌드는 이렇구나 다시 한 번 느끼면서 글을 번역해 봤습니다.




브라우저에 데이터를 저장하는 방법은 많습니다. 이중에 무엇을 사용해야 할까요? 인터넷 연결은 불안정하며 언제든 끊어질 수 있습니다.",Javascript
https://surfit.io/link/3qZEV,불꽃 튀게 빠른 번들러 Parcel 개념잡기!,"불꽃 튀게 빠르고 설정이 필요 없는 zero-configuration이며, 웹 애플리케이션 번들러인 Parcel에 대해 개념을 잡아보자.
Parcel은 2017년에 나온 번들러로 릴리즈 된 지는 별로 되지 않았지만, 설정이 필요 없다는 강력한 장점이 있다. 그렇기 때문에 반대로 설정이 복잡한 Webpack과 비교 대상이 되기도 한다. 우리는 Parcel의 ",Javascript
https://surfit.io/link/3LkWz,Vanilla JS에서 SPA 라우팅 시스템 구현하기,"vanilla js를 제외하고 vue, react, angular와 같은 프레임워크를 사용할 땐 우리는 vue-route, react-router와 같은 Third Party 라이브러리를 많이 사용한다.그렇기 때문에 어떤 프로젝트를 하더라도 SPA (Single Page Application)에서 라우팅을 구현할 일이 없다. 그러므로 인해 라우팅을 구현해 ",Javascript
https://surfit.io/link/wDkal,NPM-SCOPE 패키지 어디까지 알고 있니?,"npm에는 scope라는 개념이 존재한다.npm의 scope 개념은 조직 또는 그룹이다. 우리는 이 scope를 통해서 협업이 가능하며, 여러개의 분산된 패키지를 하나의 조직으로 관리 또는 배포 할 수 있다. 
빠르게 배우는 Node.js와 NPM 설치부터 개념 잡기에서 NPM과 Node.js에 대한 개념을 잡고 빠르게 배우는 NPM 패키지 생성부터 배포까",Javascript
https://surfit.io/link/wkZp7,Chrome V8 엔진에서 자바스크립트 성능 향상 방법,"V8 엔진이 어떻게 JS를 최적화하는지 이해하는 것이 가장 중요하다.
  

Javascript는 컴파일시에 사용하는 타입정보에 대해 제한적이다.
  Javascript는 런타임시에 데이터 타입을 변경할 수 있다.
  
    V8은 런타임시에 객체 처리를 위해 내부적으로 hidden class를 만들어서 사용한다.

    function Point(x,",Javascript
https://surfit.io/link/wkZW8,빠르게 배우는 NPM 패키지 생성부터 배포까지 완벽 가이드,"Last Updated: 
                2020-12-17
            

            
            
            
이번 포스팅에서는 npm 모듈 혹은 npm 패키지를 생성하여 실제로 NPM Registry에 업로드까지 하여 오픈소스로서 NPM 생태계에 기여하는 방법을 배워보자.
해당 섹션을 읽기 전에 ",Javascript
https://surfit.io/link/wJDEL,PixiJS와 Depth map으로 3D 이미지 만들기,"PixiJS 라이브러리와 Depth map(깊이 정보 이미지)을 사용해 3D 이미지를 만들어 봅니다.
이 포스트에서 사용된 이미지 출처는 각 이미지 하단에 표기했으며,
핵심 코드는 Red Stapler의 Create 3D Photo from Image JavaScript Tutorial을 참고했습니다.",Javascript
https://surfit.io/link/5lVW9,TypeScript를 활용한 서비스개발,당근마켓은 중고거래 서비스를 넘어선 동네 기반의 하이퍼 로컬 플랫폼으로 도약하기 위해 다양한 서비스를 준비하고 있어요. 그리고 다양한 서비스들을 TypeScript를 활용하여 만들고 있어요. TypeScript는 JavaScript의 동적 타입(Dynamic Typing)을 정적 타입(Static Typing)으로 활용할 수 있는 superset이에요. T,Javascript
https://surfit.io/link/3jR7Y,JavaScript 번들러로 본 조선시대 붕당의 이해,"며칠 전, 회사 팀원 분을 통해 구글에서 진행한 온라인 컨퍼런스인 web.dev LIVE를 알게 되었습니다. 슬쩍 둘러보니 재밌어 보이는 주제가 몇 개 보여서, 주말에 시간을 내서 세션을 시청했습니다. 저는 특히 그 중에서 Building better in the world of build tools!를 인상 깊게 봤습니다. 웹팩과 같은 JavaScript",Javascript
https://surfit.io/link/KRy76,2020년과 이후 JavaScript의 동향 - JavaScript(ECMAScript),ECMAScript 6 에디터이기도 했던 Allen Wirfs-Brock과 Brendan Eich는 매우 간헐적(13~15년 주기)으로 열리는 The History of Programming Languages Conference에서 지난 20년(1995~2015)간의 JavaScript 역사를 다룬 190페이지 분량의 방대한 내용의 문서 JavaScript,Javascript
https://surfit.io/link/wWoOZ,DOM 101,"DOM은 Document Object Model의 약자로, HTML과 CSS 등을 바탕으로 Node와 Node Tree를 생성하고 Event를 컨트롤하는 등의 작업을 JavaScript 등을 이용해 처리할 수 있게 해줍니다.
DOM은 크게 아래와 같은 부분으로 나눌 수 있습니다.
Events
Nodes
Ranges
Traversal
Sets
이 글은 WHA",Javascript
https://surfit.io/link/KRQ4k,Svelte로 만드는 Todo List - 2,"이전 글 Svelte로 만드는 Todo List - 1에서 내용이 이어집니다.


레이아웃



우선 레이아웃을 위처럼 만드려고 생각하고 있습니다. 간단하긴 하지만, 구현해야 할 스펙을 정리해보고 가도록 하죠.

간단한 네비게이션 바와 반응형 레이아웃
  할 일을 입력받는 인풋 박스
  추가하기 버튼
  남은 일이 몇 개인지 알려주기
  각 아이템은 체크와",Javascript
https://surfit.io/link/3xqyj,Svelte로 만드는 Todo List - 1,"흔히 프론트엔드 프레임워크(+ 라이브러리) 3대장으로 일컫어지는 것들이 있죠. 프론트엔드 생태계에 큰 관심은 없더라도 한 번쯤은 들어봤을 이름들인데요, 바로 Angular, React, 그리고 Vue 입니다. 저는 Vue를 주력으로 사용하고 있고, React와 Angular를 겉핥기 수준으로 하는 정도입니다.

낯선 이름의 등장, Svelte

그러다가 작",Javascript
https://surfit.io/link/5lYzz,prettier 2.0에서 달라진 옵션 살펴보기,"prettier 2.0은 얼마 전(2020.3) 정식 릴리즈되었습니다. 바로 적용을 하려다 조금 기간을 두고 적용하자는 의견이 있어 쪼-금 두고 봤습니다. 두 달 정도 시간이 지나 Chart 4.0 개발에 Prettier2.0을 적용했고, 이전과 달라진 점을 간단하게 달라진 점을 정리해봤습니다.
Prettier는?
Prettier는 코드 포맷팅 도구입니다.",Javascript
https://surfit.io/link/31OEE,[js] 웹워커 입문하기 편,"개요웹워커를 사용하는 기본적인 방법웹워커를 사용하지 않는 이유 3종 특선외부 파일에 코드를 적지 않기worker.js의 내용을 함수로 만들자Promise인터페이스로 연결하기결론개요top
현재 브라우저는 웹워커를 대부분 탑재하기 때문에 멀티코어의 장점을 브라우저에서 최대한 살릴 수 있는 환경입니다.
특히 브라우저 위의 웹워커는 단지 웹워커뿐만 아니라 다양한 ",Javascript
https://surfit.io/link/KYWkM,은닉을 향한 자바스크립트의 여정,"ECMAScript 클래스 필드(class field) 명세중에 Private field 즉 Private Property (이하 Private 속성) 가 있다. 클래스 필드 스펙은 Stage 3(Candidate)까지 올랐으니 아마 곧 Stage 4(Finished)를 거쳐 표준 스펙이 될 것이다. 사실 초기에 명세 문서를 봤을 때는 ""드디어 privat",Javascript
https://surfit.io/link/5zYO1,SPA 스크립트 용량 어디까지 줄일 수 있을까,"똑같은 단일 스크립트 361, 4.44s (!)위 스크린샷은 no throttling 인 경우의 상황이고 아래 상황은 3G Regular (750kb/s ~ 250kb/s) 로 속도 제한을 로딩을 한 것이다. 비교적 극단적으로 상황이 꾸며졌지만 스크립트 로딩 시간 동안에 유저는 빈 화면을 보게 된다. (Server Rendering 에 대한 이야기는 잠시 ",Javascript
https://surfit.io/link/3NLbl,Resize Observer - 요소의 크기 변화 관찰,"Resize Observer는 설정한 요소의 크기 변화를 관찰하며,
크기 변화를 제어할 경우 발생할 수 있는 무한 콜백 루프나 순환 종속성(Circular dependency) 등의 다양한 문제 없이 사용할 수 있습니다.",Javascript
https://surfit.io/link/KQBoo,Don't block the event loop! 매끄러운 경험을 위한 JavaScript 비동기 처리,"본 글은 강재석 님이 JSConf Korea 2019에서 발표한 ‘JavaScript Async for Effortless UX’ 세션 내용을 각색하여 옮긴 글입니다(발표 영상, 발표 자료).







들어가며



웹 서비스를 사용하다 보면 갑자기 화면이 멈추거나, 타이핑한 게 화면에 바로바로 반영되지 않는다거나, 애니메이션이 매끄럽게 동작하지 않는 ",Javascript
https://surfit.io/link/KQBJX,당신의 자바스크립트 API 문서는 안녕하신가요?,"이 글을 읽고 있을 개발자라면 적어도 한 번쯤 API 문서를 작성해 본 경험이 있으리라 생각한다. ""오전까지 100개 함수에 대한 API 문서를 만들어주세요.""라는 업무가 주어졌다고 가정해보자. 이때 어떤 그림이 그려지는가? 워드 또는 엑셀을 실행하고, 테이블을 추가하고, 소스 코드를 들여다보며 열심히 API 정보를 입력하고 있는 모습이 떠올랐는가? 문서화",Javascript
https://surfit.io/link/5ze26,JavaScript Bundle Size 최적화 (2/2),"저번 포스팅에서는 Azar의 웹뷰 환경에서 2가지 방법을 이용하여 JS Bundle Size를 최적화 했던 방법을 소개하였습니다.
이어서 추가적인 최적화 방법을 공유하고 성능 측정 결과를 공유하도록 하겠습니다.

개선 방법 요약

국제화 package react-intl → react-i18next 으로 변경
  Translation 파일 불러오는 방식 변",Javascript
https://surfit.io/link/3Ggpg,JavaScript Bundle Size 최적화 (1/2),"Azar는 기본적으로 앱이지만 일부 화면의 경우 동적 대응을 하기 위해 웹뷰로 구성되어있습니다. 해당 웹뷰는 React로 제작되어있으며 Next.js를 사용하여 SSR을 구현하고 있습니다.
동적 대응 가능한 화면에 대한 중요도가 점점 커지면서 웹뷰의 중요성도 높아지고 있기 때문에 웹뷰의 성능 개선이 주요 KPI로 설정되었습니다. 이를 위해 웹뷰 성능을 높이",Javascript
https://surfit.io/link/wnX8y,TypeScript와 함께하는 Fullstack Development,"몇 년 전만해도 TypeScript는 JavaScript 내에서 부분적으로 사용되며 ‘어떻게 혹은 왜 써야하는지’ 에 대한 논의의 대상이 되곤 했습니다. 하지만 개발 환경은 점점 빠르게 변하고 이제는 ‘TypeScript를 왜 쓰지 않는지?’의 경지가 되었기 때문에 서두에서 그 중요성을 따로 언급하지는 않겠습니다.




What is TypeScript ",Javascript
https://surfit.io/link/3B8g1,0.7KB로 Vue와 같은 반응형 시스템 만들기,"TOAST UI Grid는 현재 새로운 메이저 업데이트인 버전 4를 릴리스하기 위해 열심히 준비중이다. 버전 4는 Backbone과 jQuery를 사용해서 작성했던 기존의 코드를 모두 버리고 처음부터 새로 작성하는 대대적인 개편 작업이다. 이번 업데이트를 통해 불필요한 의존성을 줄이면서, 훨씬 더 가볍고 빠른 그리드가 되기를 기대하고 있다.
버전 4는 Ba",Javascript
https://surfit.io/link/wm76y,전체화면 스크롤 웹 사이트 플러그인 fullPage.js,"제가 블로그를 시작한 이유 중 하나가 바로 개인 포트폴리오를 정리하기 위함입니다. 사실 이 전에도 문서로 만든 개인 포트폴리오가 있긴 했는데, 일단 퀄리티가 허접했고(...) PDF와 같은 문서 파일로 정리하다보니 다른 사람들에게 포트폴리오를 보여주기가 번거로웠습니다. 그래서 예전부터 공개적으로 올릴 수 있을 수준의 개인 포트폴리오를 새로 만들 계획을 어느",Javascript
https://surfit.io/link/w681l,JavaScript와 ECMAScript는 무슨 차이점이 있을까?,"하루는 웹 개발을 하다가 흔히 사용하는 개념인 JavaScript와 ECMAScript가 정확히 무슨 차이가 있는지 궁금해졌습니다. 그래서 구글링을 해보았지만, 이는 오히려 제 혼란을 가중시켰습니다. 검색해 나온 답변들은 너무 모호했고, 심지어 상반된 의견들도 있었습니다.",Javascript
https://surfit.io/link/3xM1G,Typescript의 유틸 타입,"타입스크립트의 Util 함수타입스크립트를 이용해서 개발을 한지 어느덧 1년이 조금 넘은 것 같다. 현재의 직장으로 옮기기 전에는 VueJS와 타입스크립트 조합으로 사용을 하였고, 지금은 ReactJS와 타입스크립틀 조합으로 사용하고 있다.타입스크립트로 프로젝틀를 진행을 하며 처음에는 인터페이스와 모듈에 대한 인풋/아웃풋의 타입에만 신경을 쓰고, 비효율적인 ",Javascript
https://surfit.io/link/50A84,PM2를 활용한 Node.js 무중단 서비스하기,"이 글은 마이크로소프트웨어 393호에 기고된 글입니다.




자바스크립트는 가장 널리 사용되는 클라이언트 측 프로그래밍 언어이자 프론트엔드 웹 개발 언어 중 하나입니다. 그리고 Node.js는 Chrome의 V8 자바스크립트 엔진으로 빌드된 자바스크립트 런타임(runtime)으로 ‘Event Driven’, ‘Non-Blocking I/O’ 모델을 사용해",Javascript
https://surfit.io/link/w8qWz,나의 버건디 팔면체 : Three.js를 사용한 3D 그래픽스 입문기,"자바스크립트를 이용한 손쉬운 3D 그래픽스 프로그래밍 입문을 도와주는 라이브러리 three.js 사용기.
프론트엔드 프로그래머로서 요즘 나의 가장 큰 관심사는 기술적으로도 훌륭한 동시에 보는 사람이 감탄할만한 아름다운 사이트를 만드는 것이다. 그런터라 지난 주에 미국의 Stripe라는 회사의 여러 랜딩 페이지를 보면서 약간의 질투를 동반하는 경이로움을 느꼈",Javascript
https://surfit.io/link/59Ro7,프론트엔드 기술 조감도 : Babel,"자바스크립트 컴파일러 Babel과 관련된 플러그인, 프리셋, 폴리필 등의 개념에 대해 소개합니다.들어가며
오늘날 프론트엔드 생태계에서 Babel은 필수 도구라 부르기에 부족함이 없다. 그런 만큼 튜토리얼과 스타터 킷 등 쉽게 도입할 수 있는 수단도 잘 마련되어 있다. 아이러니하게도, 그런 탓인지 Babel을 쓰면서도 막상 각 구성요소의 역할을 정확히 이해하",Javascript
https://surfit.io/link/gl01M,Javascript Proxy 와 Reflect 간단 정리하기,"Javascript 에서 Proxy 는 객체를 Wrapping 하고 객체의 동작을 가로채 수정하거나, 추가 행동을 할 수 있게 해준다. Proxy 로 생성한 Obj 를 Wrapping 합니다.proxy_object 의 proxy_value 를 호출합니다.이때 Proxy 객체를 생성할때, 선언한 handler 에 get 함수가 있었기 때문에, 해당 proxy",Javascript
https://surfit.io/link/DA1Jp,차세대 빌드 도구 비교,"개발자 도구들은 지난 몇 년 동안 webpack, Babel, Rollup, Parcel, create-react-app을 포함하는 프론트엔드 개발을 지배해 온 도구의 뒤를 따른다. 
여기서 소개할 새로운 도구들은 같은 기능을 하도록 설계되어있지 않으며, 도구마다 목표와 기능이 다르다. 이 도구들은 서로 다르지만 개발자 경험 개선이라는 공통의 목표를 가진다",Javascript
https://surfit.io/link/kqGaa,Immutable js 간단정리,"최근 Immutable js 을 사용할 일이 생겨 이를, 간단하게 정리해 보고자 한다.객체 지향 프로그래밍에 있어서 불변객체 (Immutable Object) 는 생성 후 그 상태를 바꿀 수 없는 객체를 말한다.Immutable js 는 Javascript 의 값을 불변객체 로 만들 수 있게 도와준다.// javascriptimport { Map, List",Javascript
https://surfit.io/link/00nk9,GraphQL Mutation 설계하기,"좋은 GraphQL API를 설계하는 것은 까다롭습니다. API가 미래에 어떻게 발전될지에 대한 고려와 함께 활용성, 편의성의 균형을 맞춰야 하기 때문입니다.
GraphQL mutation을 설계할 때 고려해야 할 주요 사항들은 다음과 같습니다.
작명. mutation 이름에 동사를 먼저 작성한다. 가능하다면 그 뒤에 목적어나 명사를 사용한다. 그리고 ca",Javascript
https://surfit.io/link/EmrpE,TypeScript에서 catch block error message 사용하기,"에러가 발생하는 이유는 우리가 작성한 코드가 분명 에러 이외의 다른 것을 던져줄 수 없도록 보여지지만, JavaScript의 희안한 동작 방식으로 인하여 이상한 방식으로 에러 객체를 몽키패칭한 써드 파티 라이브러리가 완전히 다른 무언가를 던지도록 할 수도 있다:

Error = function () {
  throw ""Flowers"";
} as any;

",Javascript
https://surfit.io/link/3x8vY,Svelte 소개,"Svelte라는 단어는 날씬한, 호리호리한이라는 뜻입니다. 단어의 뜻답게 적은 코드와 작은 용량이 장점입니다. Svelte는 가상돔(Virtual DOM)을 사용하지 않습니다. 가상돔을 사용하지 않기 때문에 돔(DOM)의 변경을 찾기 위한 런타임(Runtime)이 필요하지 않습니다.지금부터 Svelte 공식 문서에서 소개하는 Svelte의 3가지 특징을 이",Javascript
https://surfit.io/link/ozbdj,TypeScript 환경에서 class-transformer 적극적으로 사용하기,"요즘 같이 분산 환경이 적극적으로 도입 되고 있는 시기에는 꼭 프론트엔드가 아니더라도 백엔드 환경에서도 외부의 HTTP API를 호출하는 일은 당연한 일입니다.
그래서 HTTP API (저는 Rest API라는 단어는 선호하진 않습니다. 어차피 규약 지키고 있는 경우가 거의 없거든요) 를 통해 원격 서버에서 JSON 객체를 읽어오는 작업을 자주 하게 되는데",Javascript
https://surfit.io/link/mx7QZ,클래스(class)는 무엇인가,"ES2015 이전, 생성자를 사용했다.
ES2015 이전에는 클래스를 지원하지 않아, 생성자를 이용해 객체를 생성했다.
우리가 이러한 생성자를 사용한 이유는 객체의 형태(속성, 메소드)를 정의하기 위함이었다.

function Animal({type, age}) { 
  
  this.type = type;   
  this.age = age;
}

Ani",Javascript
https://surfit.io/link/5zyED,ES6 이후의 변경점 총정리,"2009년에 ES5가 등장하고 2015년에 ES6가 등장하며 큰 변화를 겪은 이후, ECMA는 매년 새로운 자바스크립트 표준을 발표합니다. ES6 이후 추가된 내용중 일부는 이미 사용하고 있지만, 자세히 알아본 적이 없는 것 같아서 정리하는 시간을 가져봤습니다. ECMAScript에 대한 자세한 설명은 생략하고, ES6(ES2015) 이후에 어떤 것들이 추",Javascript
https://surfit.io/link/3726q,비동기 처리 시 race condition 고려하기,"비동기 처리를 어렵게 하는 요소 중 하나인 race condition과 이에 대한 대안책을 함께 알아보겠습니다.
Race condition
경합 조건이라고도 하며 이것은 꽤 여러 군데에서 통용되는 개념입니다.

경합 조건은 시스템의 실질적인 동작이 다른 통제 불가능한 이벤트의 순서나 타이밍에 따라 달라지는 전자 장치, 소프트웨어 또는 기타 시스템의 조건이다",Javascript
https://surfit.io/link/KpYem,TypeScript에서의 환경 설정 관리,"프로젝트 초기에는 환경 설정을 코드 중간에 넣어서 개발하는 경우가 많을 것으로 생각합니다.
그러다가 규모가 커지면 여러 가지 이유로 코드에서 분리해서 관리할 필요성이 늘어납니다.
첫 번째는 보안 측면의 이슈입니다. 암호나 접근키(access key) 등을 코드에 넣는 것은 보통 좋은 방향이 아닙니다.
이런 값은 보통 환경 변수(environment vari",Javascript
https://surfit.io/link/31D68,자바스크립트 성능 향상 방법,"지난 몇 년 동안, JavaScript는 대부분의 개발자들의 사용하는 스크립트 언어 중 하나가 되었습니다. JavaScript는 클라이언트 측에서는 물론, 서버 측에서도 사용됩니다. 또한 GitHub에서 가장 많이 사용되는 언어 중 하나입니다.





Lighthouse는 웹 페이지에 널리 사용되는 도구입니다. Lighthouse는 접근성, 퍼포먼스, S",Javascript
https://surfit.io/link/KYeYe,"타이머 함수: setTimeout, setInterval","자바스크립트에서 다루는 타이머 함수는 일정 시간이 지난 후 특정 코드 또는 함수가 실행될 수 있도록 해주는 함수와 일정 시간마다 함수가 실행될 수 있도록 해주는 함수를 말합니다.


  타이머 함수
  setTimeout & clearTimeout
    setInterval & clearInterval
  

일반적으로 사용하는 타이머 함수는 위의 두 종",Javascript
https://surfit.io/link/5ljvk,Vue와 Svelte 비교,"Svelte와 Vue의 가장 큰 차이는 반응형 동작 방식이라고 생각합니다.Vue는 array 메서드(push, pop, shift, unshift, splice, sort 등)를 사용하면 반응형으로 화면이 갱신되지만, Svelte는 변수의 데이터 재할당이 일어나야 화면을 갱신합니다. 이런 특징으로 아래와 같이 작성된 Vue 코드는 아래와 같습니다. Code",Javascript
https://surfit.io/link/3N478,JSON과 JavaScript Object의 차이점,"ajax 사용하던 중 한가지 의문이 생겼습니다. 왜 JSON.stringify를 사용하지 않고 데이터를 보내면 왜 스프링 @RequestBody에서 받질 못하는지 말입니다. 

그래서 data : {test : ""test""} 와 data : JSON.stringify의 타입들을 콘솔로 찍어본 결과 전자는 object이고 후자는 string이였습니다. 여기서",Javascript
https://surfit.io/link/KbzGo,자바스크립트 실행 컨텍스트,"실행 컨텍스트는 자바스크립트에서 가장 중요한 핵심 개념 중에 하나다.
이를 정확히 이해하는 것은 자바스크립트 개발자에게 매우 중요하다.  실행 컨텍스트 실행할 코드에 제공할 환경 정보들을 모아놓은 객체 자바스크립트의 동적 언어로서의 성격을 가장 잘 파악할 수 있는 개념 자바스크립트는 실행 컨텍스트가 활성화되는 시점에 다음과 같은 현상이 발생한다. 호이스팅이",Javascript
https://surfit.io/link/wm4GZ,throttle(쓰로틀링) 과 debounce(디바운싱)로 성능 향상 시키기,"스크롤 혹은 인풋 박스에서 너무 많은 이벤트를 호출하여 불필요한 메모리를 소모하여 퍼포먼스를 떨어뜨립니다. 이 문제를 해결하기 위한 방법으로 Throttling(쓰로틀링)과 debouncing(디바운싱)이 있습니다.
기본 개념쓰로틀링은 마지막 함수가 호출된 이후 지정한 시간이 지나기 전에 호출되지 않도록 하는 것입니다.디바운싱은 연속적인 함수호출중 마지막 ",Javascript
https://surfit.io/link/3LXPW,Vanilla Javascript로 웹 컴포넌트 만들기,"Angular가 CSR의 시작이었다면, React는 컴포넌트 기반 개발의 시작이었다.
그리고 Angular와 React의 장점을 모두 수용한 Vue가 나왔다. 어쨌든 중요한 점은 현 시점의 웹 어플리케이션은 컴포넌트 단위로 설계되고 개발된다는 것이다.
그리고 컴포넌트마다 컴포넌트를 렌더링할 때 필요한 상태를 관리하게 되었으며, Proxy 혹은 Observe",Javascript
https://surfit.io/link/3AJg7,Typescript 이해하기 3편,"제네릭 문법은 같은 규칙을 여러 타입에 동일하게 적용할 수 있도록 도와준다. 타입 정보가 동적으로 결정되게 하는 요소이기 때문이다. 고정된 타입을 맞춰서 사용하는 것보다 유연하다. 제네릭 문법을 적용하지 않고, 함수에 입력값과 반환값의 타입을 추정하도록 코드를 작성하면 제네릭이 얼마나 편한지 알 수 있다. (개인적으로 제네릭이 타입스크립트에서 제일 섹시한 ",Javascript
https://surfit.io/link/5e48q,Typescript 이해하기 2편,"이넘은 자바스크립트 개발자에게는 정말 생소한 개념이다. 생긴새와 처음 봤을때의 느낌은 객체와 배열을 섞은 새로운 자료형 타입이라는 것이다. 근데 그 느낌이 얼추 맞다. 

Enum은 특정 값들의 집합을 의미한다. 사용 방식은 인터페이스와 비슷한데, enum 타입 이름 {} 형태로 적용할 수 있다. 타입스크립트에서는 숫자형과 문자형 이넘을 지원한다. 두 형태",Javascript
https://surfit.io/link/37ZPn,Typescript 이해하기 1편,"타입스크립트는 ms가 개발한 자바스크립트의 확장 언어다. 동적 언어인 자바스크립트와 다르게 요소들에 타입을 정의해주는 정적 언어다. 지금까지 알고 있던 모든 자바스크립트의 문법적 요소를 이용할 수 있는건 물론이고, 자바스크립트로 컴파일 되는 환경에서 변수 및 기타 요소들의 타입이 결정된다. 런타임 환경에서 타입이 파악되는 자바스크립트와 가장 차별되는 부분이",Javascript
https://surfit.io/link/3q7XB,자바스크립트 프로토타입,"자바스크립트가 프로토타입 기반의 언어라는 점은 많이 들어서 알고 있을 것이다. 클래스 기반의 언어에 있는 상속과는 다르게 특정한 객체 하나를 원형(prototype)으로 삼고 이를 복제하는 방식으로 상속의 훙내낸다. 프로토타입의 개념을 한 번 이해하는 것이 어렵지만 이번에 해내보자.

기본



위의 이미지의 흐름을 정리하면 다음과 같다.

어떤 생성자 함",Javascript
https://surfit.io/link/5z0qr,올해 버려야 할 타입스크립트 나쁜 버릇 10가지,"타입스크립트와 자바스크립트는 지난 몇 년에 걸쳐 꾸준히 진화했고 우리가 만든 습관 중 일부는 쓸모없어졌다. 어떤 건 애초에 의미가 없었을 수도 있다. 이 글은 꼭 고쳐야 할 나쁜 습관 10가지를 모아봤다.

자 예제로 가보자! ""올바른 코드""는 논의된 이슈만 해결했다는 점을 기억하자. 그래서 다른 종류의 코드 스멜이 포함된 상태일 수 있다.
1. stric",Javascript
https://surfit.io/link/wkkD6,Jest Mock 이해하기,"Mocking, 한글로 ‘속이다’로 번역할 수 있는 본 단어는 의존성 있는 항목들을 개발자가 관리할 수 있는 객체로 바꿈으로써 테스트 대상을 고립시키는 기술을 말한다. (Mocking 단어 자체는 ‘가짜’로 해석 할 수 있으나, 여기서는 Jest 모듈의 함수로도 칭할 수 있으니 mock을 그대로 사용하겠다). 의존성은 테스트 대상이 의존하는 그 무엇이던 될",Javascript
https://surfit.io/link/3GbAn,호이스팅에 대한 오해와 진실,"호이스팅에 대한 오해와 진실
호이스팅이란 뭘까? 솔직히 프로그래밍을 공부한 지 얼마 안 되었을 때는 호이스팅과 호스팅이 똑같은 말인 줄 알았다. 그리고 이 개념에 대한 뜻을 몇 번 훑어보고는 ‘아, 변수나 함수를 스코프 상단으로 끌어올리는 기술이구나’라고만 이해했다. 과연 그럴까? 지금부터 호이스팅에 관한 몇가지 오해와 이것을 가능하게 하는 매커니즘에 대해",Javascript
https://surfit.io/link/3Nb0A,자바스크립트의 메모리 모델,"변수를 선언하고, 초기화하고, 새로운 값을 할당하는 것은 개발자들의 일상적인 업무입니다.



그런데, 이렇게했을 때 실제로 어떤 일이 발생할까요?

자바스크립트는 이러한 기본적인 기능을 내부적으로 어떻게 처리할까요?

그리고 더 중요한 건, 자바스크립트 개발자가 이러한 세세한 내용까지 이해하는게 도움이 될까요?



저는 이번 포스팅에서 다음과 같은 내용",Javascript
https://surfit.io/link/KY4XV,자바스크립트 scope 퀴즈,"자바스크립트의 함수단위 스코프, 동적 this 바인딩, lexical scope 등 자바스크립트에서 scope 에 대한 개념을 정확히 이해하기 위해 알아야 할 사항들은 상당히 많다.
특별히 아래 퀴즈들을 통해 나는 자바스크립트 scope 에 대하 정확한 이해를 하고 있는가 점검해 보도록 하자
var name = 'global'

function fn(){
",Javascript
https://surfit.io/link/KEqa2,"Prototype, 그리고 Class","기본적으로 JS의 모든 객체는 [[Prototype]]이라고 하는 내부 프로퍼티를 가진다. 이 프로퍼티의 역할을 아주 단순하게 표현하자면 자신에게 연결된 프로토타입 객체에 대한 참조이다. 위의 예시에서 anotherObj는 해당 프로퍼티를 통해 연결된 객체인 obj로 접근한 뒤, 일치하는 키 값을 찾은 것이다.
Object.create()를 사용하지 않아도",Javascript
https://surfit.io/link/59b62,자주 발생하는 자바스크립트 에러,자바스크립트를 이용해 개발하다 보면 개발자의 실수로 생긴 코드 상의 문제로 뻘건 에러 메시지를 자주 만나게 됩니다. 개발 중에 버그가 발견된다면 다행이지만 실 서비스에서  에러 메시지가 출력된다면 개발자로써 손발이 오그라들고 식은땀이 솟구칠 겁니다. 자바스크립트는  런타임에서만 에러 메시지를 만날 수 있기 때문에 종종 이렇게 심각한 버그를 놓치기도 합니다.,Javascript
https://surfit.io/link/5z8Rj,"모듈, 모듈로더, 모듈번들러란","모듈이란 구현 세부사항을 캡슐화하고, 공개 API를 노출해 다른 코드에서 쉽게 로드하고 사용할 수 있도록 재사용가능한 코드조각입니다.

과거에는 웹에서 동작하는 로직이 작아서, js파일의 크기도 작았고 때문에 js를 관리해야할 필요성을 못느꼈다고합니다.
비교적 최근에 이르러서야 js가 엄청나게 커졌다고합니다.
ES5 및 이전 버전은 모듈을 염두해두고 디자인",Javascript
https://surfit.io/link/3ajBQ,??연산자 응용,"널병합연산자라고 약간 억지스럽게 번역된 연산자입니다. 이 연산자가 하는 일은 좌항이 null 또는 undefined인 경우 우항을 값으로 반환하고 아니면 좌항을 반환하는 거죠.기존 ||은 falsy에 반응하던 것에 비해 훨씬 좁은 범위인 null, undefined에만 반응하는 연산자입니다. 따라서 좌항이 0, “”, false, Nan 같은 falsy값일",Javascript
https://surfit.io/link/3AbxP,함수형 프로그래밍,"함수

function foo(x, y) {
  return x + y;
}


return 문으로 값을 반환합니다.

return 문이 없는 경우에는 undefined를 반환합니다.

따라서 모든 함수는 값을 반환합니다!

function foo(x, y) {
  return x + y;
}

foo(1,2);
foo(1);
foo();
foo(1,2,3",Javascript
https://surfit.io/link/5zmoD,이벤트 핸들러를 대하는 개발자의 자세,이벤트 핸들러는 UI를 개발할 때면 항상 사용된다. 웹뿐만 아니라 네이티브 어플리케이션에서도 약간의 차이가 있을뿐 거의 동일한 추상이 사용된다. 자주 사용되는 만큼 중요하지만 사실 너무 자주 사용되다 보니 가볍게 생각하며 습관적으로 고민 없이 좋지 않은 코드를 만들곤 한다. 자주 사용된다는 건 코드의 양적인 비중도 크다는 것이고 그만큼 조금만 더 신경 쓴다,Javascript
https://surfit.io/link/wWWlQ,Javascript의 메모리 관리법,"대부분 Javascript 사용자분들은 아마도 메모리 관리에 대해서 아무것도 알지 못해도 괜찮았을겁니다.그건 전부 Javascript 엔진이 이 일을 해주고 있기 때문에 그렇습니다.
하지만 메모리 누수와 같은 문제들이 언제나 발생하는데 이 문제는 메모리 할당이 어떻게 동작하는지 알아야만 해결할 수 있습니다.
이 기사에서는 어떻게 메모리 할당이 이루어지는지,",Javascript
https://surfit.io/link/wZa1D,자바스크립트에서 switch (true) 패턴 사용하기,"잘 알려져 있진 않지만 훌륭한 패턴이 있다. 필자는 Vortexa의 애플리케이션 개발팀(채용 중)에 합류하기 전까지 이 패턴을 전혀 알지 못했지만 지금은 꽤 자주 사용한다. switch true 라고 불리며, 정말 간단하다.
기본적인 switch
자바스크립트 개발자 대부분은 switch 문(MDN 문서)에 익숙할테지만, 자바스크립트 입문자들을 위해 간단히 ",Javascript
https://surfit.io/link/wkk16,Delightful Javascript Testing - Jest,"Jest를 결정한 이유는, React / Typescript integration이 용이하고, 전반적으로 설정이 간편해보여서 결정하였다. 사실 Testing을 하는건 좋지만, 거기에 코드를 작성하는 것보다 많은 시간을 투자하고 싶지는 않았기 때문이다.

처음 시작하는 경우 다음 절차를 따르면 된다: https://jestjs.io/docs/en/gettin",Javascript
https://surfit.io/link/KgAnW,React를 사용하기 위해 알아야 하는 JavaScript,"그 동안 사용했던 다른 프레임워크들과 비교하였을 때 내가 React에 대해 가장 좋아하는 점은 JavaScript에 굉장히 많이 노출되어 있다는 점이다. 해당 프레임워크에 귀속되는 템플릿 작성법이 따로 없고 (JSX가 JavaScript로 컴파일을 해준다), React Hook 등장 이후로 컴포넌트 API는 사용하기 한 단계 더 쉬워졌으며, 프레임워크 자체",Javascript
https://surfit.io/link/wDLbW,자바스크립트 데이터 타입,"자바스크립트의 데이터 타입은 크게 2가지가 있다. 기본형(primitive)과 참조형(reference) 타입이다. 타입을 구분하는 기준에 대해서 명확하게 아는 것이 중요하다. 두 타입 모두 무언가를 ‘복제’하긴 한다.

기본형 타입은 값이 담긴 주소의 값을 바로 복제한다. 그리고 기본형은 불변성(immutability)을 띈다. 기본형에는 Number, ",Javascript
https://surfit.io/link/KRPRb,TypeORM에서 페이징 API 만들기 - 기본페이징 기능,"웹 서비스를 구현하는 과정에서 페이징 API는 가장 기본적인 기능인데요. Java 기반의 페이징 구현 코드는 많은데, Typescript 와 TypeORM 의 구현 코드가 많지 않아 작성하게 되었습니다.
현재 Typescript 와 TypeORM 스펙으로 웹 서비스를 구현하신다면 한번쯤 참고해보셔도 좋을것 같습니다.

전체 코드는 Github에 있습니다.
",Javascript
https://surfit.io/link/wmmGL,삽질하기 싫으면 꼭 읽어봐야 할 Canvas 트러블 슈팅,"이 글에서는 Canvas 프로젝트에서 흔히 겪을 수 있는 문제들에 관해 설명한다.
안티 앨리어싱(Anti-Aliasing)
  앨리어싱은 컴퓨터 그래픽에서 해상도의 한계로 선 등이 우둘투둘하게 되는 현상을 의미하는 것으로, 위 그림처럼 결과물이 깨져 보이며 '계단 현상'이라 부르기도 한다.
안티 앨리어싱은 앨리어싱에 방지하는 뜻의 안티(Anti-)가 붙여져",Javascript
https://surfit.io/link/5zDrp,Github packages 로 npm 패키지 배포,"여러 프로젝트에서 반복적으로 사용되는 공통모듈이 있다면 Don’t repeat your code 원칙에 따라 npm 모듈로 배포해서 사용하고 싶어진다. npmjs 를 통해 패키지를 만들고 배포할 수 있지만 npmjs 는 비공개 레포의 패키지 지원에 대해서는 유료 플랜을 사용해야 하는 아쉬움이 있다.
이에 따른 대안으로 Github pagkages 는 좋은 ",Javascript
https://surfit.io/link/KEnjo,JWT는 어디에 저장해야할까? - localStorage vs cookie,"이번에 지하철 미션을 만들면서 JWT를 클래스 property에 저장했었는데
(지금 돌이켜보니... 왜 그랬을까... ㅋㅋㅋㅋ)
리뷰어 분께 해당 부분을 피드백 받으면서 어디에 JWT를 저장하는 것이 좋을까
에 대해 고민해보게 되었다.
🍙 기본 지식
1. JWT
Json Web Token의 약자로 모바일이나 웹의 사용자 인증을 위해 사용하는
암호화된 토큰을",Javascript
https://surfit.io/link/Ky7YW,JavaScript Proxy. 근데 이제 Reflect를 곁들인,"Vue 3 Reactivity Proxy의 트랩 내에서 Reflect가 사용된 이유가 궁금했었다. 구글링을 해봐도 Proxy의 핸들러나 여러 사용법 외엔 쉽게 찾기가 어려워 이번 기회에 알아보았다. 본 글에서는 Proxy와 Reflect의 간단한 개념과 함께 Proxy와 Reflect를 함께 사용하게 된 이유가 무엇인지 정리하고자 한다.  
1. 메타프로그",Javascript
https://surfit.io/link/3jjxl,AJAX 요청에 대한 CORS 허용하기,"Origin이란?
Origin은 아래와 같이 protocol, host, port 3개 부분으로 구성된다.2개의 Origin을 비교시 3개 부분 중 단 1개만 일치하지 않아도 서로 다른 Origin이 된다. 즉, http, https의 차이, 80, 8080의 차이만 나도 서로 다른 Origin이 된다.
브라우저에서 현재 페이지의 Origin 알아내기
브라",Javascript
https://surfit.io/link/KPMLB,JavaScript 함수형 프로그래밍 3단계로 설명하기,"순수 함수, 불변성 그리고 선언전 패턴… 분명 이것들이 좋아지실 겁니다

함수형 프로그래밍은 1930년대로 거슬러 올라간 수학 개념 인 람다lambda 미적 분학에 그 뿌리를 두고 있습니다. 수학과 친숙하지 않은 분들은 기겁하실 수도 있지만, 그러지 않으셔도 됩니다. 수학 이론 없이도 몇 가지 원칙들을 통해 함수형 프로그래밍의 놀라운 점과 그 소프트웨어가 ",Javascript
https://surfit.io/link/KQ9DY,유용한 JavaScript 코딩 기법들,"개발자 웹에는 코딩 트릭을 소개하는 글들이 자주 포스팅 됩니다. 특히 자바스크립트 처럼 명세가 빠르게 바뀌는 언어는 더 짧고 간결한 코딩 기법들이 계속 나타납니다. 뉴스를 읽다가 이런 기술을 소개하는 페이지를 만나면 알고 있는 기술인지 한번쯤 훑어보게 되는데요. 이 글은 그렇게 한번 훑어보며 제가 알고 있는 사실과 비교하고 쓸만한지 따져보는 글입니다.


",Javascript
https://surfit.io/link/3qjap,Javascript 프로젝트를 시작하기에 앞서 - package 설정,"새로운 미션이 주어지면, 제일 처음하는 일은 repository를 로컬에 clone한 후, 이것 저것 환경설정을 하는 일입니다. 뭐든지 초반세팅을 잘해놔야 문제없이 할 수 있는 법이죠ㅎㅎ.
왜 이렇게 세팅을 하는지 한 줄 한 줄의 의미를 추가하여 여기에 기록해둡니다.
나중에 나를 위하여. 나중에 나와 함께할 페어를 위하여. 환경 설정으로 헤매는 누군가를 위",Javascript
https://surfit.io/link/KExM2,슈퍼 빠른 'super' 속성 접근,"super 키워드는 부모 객체의 함수나 속성에 접근하는 데
사용된다. 이전에는, 상위 속성으로 접근하는 것(super.x와 같은)은 런타임 실행으로 구현되어있었다. V8 v9.0부터는 최적화되지 않은
코드에 인라인 캐시(IC) 시스템을 재사용하여, 상위 속성에 접근하는 코드를 적절히 최적화된 코드를 생성한다. 이제 런타임 실행을 하지
않는다.
아래 그래프를",Javascript
https://surfit.io/link/5z0Lp,"자바스크립트 번들링의 핵(♚), Webpack","웹팩의 등장 배경. 모듈과 브라우져. IE는 잘가요~✋

포스트 모듈 시스템 시절

모듈 시스템이 없던 시절에서는 HTML 파일에 로직을 담당하는 함수가 담긴 스크립트 파일을 불러와서 사용해야 했다. 전역 공간에서 모든 함수가 노출될 수 있었다. 함수의 이름이 동일하다면 충돌이 이는 것은 당연했다. (브라우져의 콘솔에서도 함수를 사용할 수 있을정도로) 그래",Javascript
https://surfit.io/link/3Ngxz,스크립트의 실행 시점을 조절하는 Async와 Defer 속성 - 재그지그의 개발 블로그,"동적인 웹 어플리케이션을 만들기 위해서는 JavaScript 파일을 불러오는 것이 필수적입니다. 하지만 복잡한 비즈니스 로직이 포함된 JavaScript 파일이라면 그 용량이 매우 클 것입니다. 따라서 스크립트 파일을 비동기 방식으로 불러오는 방식을 통해 로드 시간을 줄일 수 있습니다.

오늘은 이를 가능하게 만들어주는 &lt;script&gt; 태그의 속",Javascript
https://surfit.io/link/5z8qD,JWT 개념 이해하기,"JWT(JSON Web Token)는 인증 토큰을 정의하는 방법에 대한 표준(RFC 7519)이다.(여러 서버 간에) 안전하게 인증 정보를 주고 받을 수 있도록, 인증 토큰을 생성하고 해석하는 방법을 규정한다.토큰은 JSON 포맷의 정보와 이 정보의 위변조를 막기 위해 서명한 값으로 구성돼있다.처음이라면 익숙하지 않아서 JWT를 사용하는 용도가 헷갈릴 수 ",Javascript
https://surfit.io/link/KRbvJ,자바스크립트의 this,"자바스크립트를 공부할 때 this는 참 헷갈립니다.

자바스크립트의 this는 “나”와 비슷합니다.

문맥에 따라서 가리키는 대상이 다르죠.

헷갈리는 this를 좀 더 쉽게 이해하기위해서

this를 파악하기위한 5가지 공식을 정리해봤습니다.

암시적 바인딩
  명시적 바인딩
  new 바인딩
  윈도우 바인딩
  strict모드


1.암시적바인딩

첫",Javascript
https://surfit.io/link/KQb66,CORS,"Ajax에는 Same Origin Policy라는 원칙이 있습니다.

비단 Ajax뿐만 아니라, XMLHttpRequest객체는 기본적으로 동일 출처 정책(SOP, Same Origin Policy)의 제약을 받는다고 말하는게 더 정확한듯 합니다.

현재 브라우저에 보여지고 있는 HTML을 내려준 웹서버에게만 Ajax요청을 보낼 수 있습니다.

한 도메인의",Javascript
https://surfit.io/link/w4W6b,"fetch, setTimeout은 표준 API일까?","얼마전 VanillaJS로 IE10까지 지원하는 작은 프로젝트를 진행했었다.
처음에는 웹팩과 바벨이 IE 지원에 대한 모든것을 해결해 줄것이라고 생각했다.
그래서 마음 편하게 코드를 짜고 있었는데...
작업 중간에 IE 테스트를 해보니 fetch가 동작하지 않았다.
분명 babel로 처리 했는데 왜안되지 싶은 마음에 https://babeljs.io/ 에서",Javascript
https://surfit.io/link/wd9dA,browserslist 쾌속 가이드,언젠가부터 브라우저스리스트(browserslist)라는 것이 자주 눈에 띄더니 지금은 FE 개발 환경에서 뺄 수 없는 도구가 되었어요. 아마도 바벨(Babel)이라는 FE 계의 걸출한 스타 프로젝트에서 도입했기 때문일 거라고 생각합니다. 바벨을 사용하는 프로젝트들이 많다 보니 간접적으로 혹은 직접적으로 브라우저스리스트까지 사용하게 되는 것이죠. 사실 좋아요,Javascript
https://surfit.io/link/K29rD,npm 모듈 배포,"처음으로 npm 모듈 배포를 실습해 보았다. 몰라서 고생했던 내용들만 내 맘대로(내가 이해한 만큼만) 축약해 정리해 본다.
배포명령
프로젝트 루트 경로에서

모듈 배포는 언제나 패키지명&amp;버젼명이 유일해야 한다.
인증
npm 모듈을 배포하려면 우선 npm 저장소에게 내가 누구인지 알려줘야 한다. npm 은 기본적으로 .npmrc 파일을 이용해 사용자정",Javascript
https://surfit.io/link/3A4vP,2020년과 이후 JavaScript의 동향 - 라이브러리와 프레임워크 2,"이 글에서는 지난 2020년과 이후 JavaScript의 동향 - 라이브러리와 프레임워크 1에 이어 Vue.js와 Svelte, 그리고 그 밖의 프레임워크의 최근 동향을 살펴보겠습니다.


  이 글의 내용은 2020년 11월을 기준으로 작성되었습니다. 글을 읽는 시점에 따라 글의 내용과 사실이 다를 수 있습니다.


Vue.js

2018년부터 개발이 시",Javascript
https://surfit.io/link/w4EJO,2020년과 이후 JavaScript의 동향 - WebAssembly,"2020년과 이후 JavaScript의 동향 시리즈의 두 번째 글인 WebAssembly 동향을 공유합니다.

1편: JavaScript(ECMAScript)
2편: WebAssembly

  2019년의 WebAssembly 동향은 2019년과 이후 JavaScript의 동향 - WebAssembly에서 확인하실 수 있습니다.


들어가며

구글의 NaC",Javascript
https://surfit.io/link/37XN6,WebRTC Library 다루기,"WebRTC는 웹 브라우저 상에서 실시간 커뮤니케이션을 가능하도록 설계된 API 및 스펙입니다.

구현체로는 Google Chrome 에 들어가는 libwebrtc가 있으며, 이 라이브러리에서 C++ 기반 API 및 모바일 (Android / iOS 등)에서 사용 가능한 API를 제공합니다.

libwebrtc는 Chrome 내의 다른 컴포넌트와 마찬가지로",Javascript
https://surfit.io/link/woLPV,개선된 페이지 스택으로 LINE 증권의 웹 페이지 전환 처리하기,"들어가며



안녕하세요! sunderls입니다. 저는 2년 전에 페이지 스택을 주제로 ‘LINE MANGA: Page Stack을 이용해서 페이지 전환 처리하기‘라는 글을 썼고, 현재 LINE 증권에서도 같은 방식으로 프로젝트를 진행하고 있습니다. 그래서 이번 글에서는 페이지 스택이 어떻게 진화했는지, 어떤 과제를 안고 있는지 함께 알아보겠습니다. 


",Javascript
https://surfit.io/link/3NYO8,코틀린 delegated Property 흉내내기,"속성이란 무엇일까?코틀린의 방식defineProperty를 이용해 흉내내기by 함수의 일반화프로토타입레벨에 적용하기클래스 내부에서 정의하기타입계층을 인터페이스로 바꾸기결론개요top
코틀린에서는 위임된 속성(delegated property)이란게 있습니다. 이는 getter와 setter를 가진 객체에게 속성을 대신해서 작동하도록 연결해주는 일종의 매크로 ",Javascript
https://surfit.io/link/50z4o,"[js] alert, confirm, prompt의 특성","개요동기명령의 일시정지?webview구현 시의 어려운 점더욱 강력한 일시정지 기능결론개요top
오늘은 window.alert에 대해 잠시 설명드릴까합니다.
alert, prompt, confirm 등이 다 비슷한 동작을 하는데, 이 함수 3종은 매우 특수한 능력이 있습니다.
이 능력은 과거 ES3.1부터 부여된 예외적인 능력인데 바로 브라우저 전체를 올스탑",Javascript
https://surfit.io/link/KEonE,Typescript 유틸리티 클래스 파헤치기,"Utility Types Docs를 중점으로









Typescript에서 타입에 대한 유틸리티 클래스를 정리한 내용으로 라이브러리 코드에 대한 설명도 포함하고 있기 때문에 간단히 어떤 역할을 하는지와 예시만 보아도 무방합니다. this타입과 관련한 유틸리티 클래스는 apply를 통한 재정의이기 때문에 생략하였습니다.

유니온(Union)타입
유니",Javascript
https://surfit.io/link/3OlRa,자바스크립트 OOP로 클래스모듈화 하기,"필자는 WEB UI 개발 및 간단한 서버, 내부 개발테스트 등을 할때는 자바스크립트(JavaScript)를 사용합니다.
기본적으로 자바스크립트는 정적 웹페이지에서 다양한 동적 이벤트나 UI 변경 등 정적 리소스에서 제공하지 못한 많은 것들을 가능하게 해줍니다.

예) A 태그에 시스템 알럿창으로 띄우는 코드

&lt;a href=""#"" onclick=""al",Javascript
https://surfit.io/link/KEoLN,SPA 초기 로딩 속도 개선하기,스크립트 용량을 많이 줄였더라도 직접 작성한 코드 용량은 운영하면서 날로 커져만 갈 것이다. 그와 함께 초기 로딩 시간 역시 점점 길어질 것이다. 그렇다면 초기 로딩 시간을 줄이기 위해서는 화면 별로 필요한 모듈만 담아서 서빙하는 것은 어떨까 하는 생각에 도달하게 된다. 이 방법은 어찌보면 최종 스크립트 용량은 커질 수 있다. 왜냐하면 나눠진 모듈끼리 서로,Javascript
https://surfit.io/link/37Erm,내가 fetch API를 쓰지 못했던 이유,SPA 형태의 앱은 주로 서버와 API 로 데이터를 주고 받으면서 화면을 그리게 된다. 한 페이지에서 API 요청이 끝나지 않았는데 페이지를 떠나는 경우를 생각해보자. 당신이 지금 만들고 있는 앱은 기존 요청을 취소하는가? 한 페이지에서 많은 수의 요청을 부르거나 적은 수의 요청을 하더라도 응답 속도가 느린 경우에 이는 문제가 될 수 있다. MPA (Mul,Javascript
https://surfit.io/link/KpDNL,왜 JSON.parse로 객체를 선언하는 방법이 더 빠를까?,"이 글은 Google Chrome Developer의 영상 『Faster apps with JSON.parse』를 번역 및 의역한 것임을 밝힙니다.


오늘은 여러분이 기존에 알고 있던 상식과는 다른, JavaScript의 성능과 관련된 신비로운 트릭을 하나 소개하고자 합니다.

const data = {
  foo: 42,
  bar: 1337,
  ..",Javascript
https://surfit.io/link/31oGr,GitHub Action을 사용해 새로 올라온 전월세 방 목록 받아보기,"매일 아침 11시,  피터팬의 좋은방 구하기라는 부동산 거래 사이트에 새로 올라온 특정 조건(가격대, 지역 등)을 만족하는 매물을 아래와 같이 정리해서 보내주는 프로그램을 만들었다. (저장소) 요새 블로깅이 너무 뜸하기도 했고, 재밌는 작업이라 과정을 기록으로 남겨보았다.

2019-11-12 수정: 양성민 님께서 GitHub Action의 타임존 관련 수",Javascript
https://surfit.io/link/K2RzV,JavaScript SDK 성능개선 방법 - 압축과 최적화로 실행시간 단축하기,"들어가며



안녕하세요. 저는 QUICK Game Platform Dev 팀에서 게임에서 필요한 여러 기능을 제공하는 QUICK Game SDK를 개발하고 있는 이재호입니다. QUICK Game Platform이란 HTML5 기반의 게임을 서비스하기 위해 LINE에서 제공하는 플랫폼입니다. 저는 이번 글에서 QUICK Game SDK를 개발하고 개선하면서",Javascript
https://surfit.io/link/Kbb2e,ECMAScript와 TC39,"자바스크립트 언어의 표준인 ECMAScript와 TC39에 대해 소개합니다.
수 년 전까지만 해도 자바스크립트는 기껏해야 브라우저 위에 경고 대화창을 띄우거나 웹 페이지의 사이드바를 열고 닫는 용도로만 사용되던, 장난감 같은 언어에 불과했다. 오늘날, 자바스크립트는 프론트엔드는 물론이거니와 서버, 모바일 어플리케이션, 심지어는 데스크톱 앱까지 모든 분야에서",Javascript
