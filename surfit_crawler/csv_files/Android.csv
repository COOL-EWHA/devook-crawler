url,title,description,category
https://surfit.io/link/Q64D4,Android Dev Summit 2021의 Wear OS의 주요 업데이트를 확인해보세요!,"Wear OS 플랫폼에 대한 몇 가지 주요 업데이트를 포함하여, Android 개발자를 위한 흥미로운 사항이 많이 발표되었습니다. 새 Wear OS 출시를 Google I/O에서 발표한 이후에 Galaxy Watch4 시리즈에서 Wear OS Powered by Samsung이 첫선을 보였죠. Strava, Spotify, Calm 등 많은 개발사가 최신 ",Android
https://surfit.io/link/6Q7rv,Android WebView를 사용한 효과적인 대용량 이미지 로딩,Android 개발자에게 대용량의 이미지를 효율적으로 다루는 일은 항상 흥미로운 주제입니다. 일반적으로 앱 메모리를 가장 많이 차지하는 데이터가 이미지이고 Android는 앱에 제한적인 메모리만 할당하기 때문에 예로부터 Android 개발자는 세심하게 이미지를 다루는 것을 중요한 덕목으로 평가받았습니다. Glide와 같이 훌륭한 이미지 로딩 라이브러리가 보,Android
https://surfit.io/link/xrbEG,12L과 대화면을 위한 새로운 Android API 및 도구,"태블릿, 폴더블, ChromeOS 기기를 통틀어 Android를 실행하는 대화면 기기의 수는 2억 5천만 개가 넘습니다. 지난 12개월 동안에만 거의 1억 건의 새로운 Android 태블릿 활성화 건수를 확인했는데, 이는 전년 대비 20% 성장한 수치입니다. 현재 가장 빠르게 성장하는 데스크톱 플랫폼인 ChromeOS는 92%나 성장했죠. 또한, 폴더블 기",Android
https://surfit.io/link/mxj8e,누구나 확인 할 수 있는 안드로이드 Log,"어떤 화면이든 항상 떠 있어야 앱 인터렉션에 따라 로그를 확인할 수 있습니다. 화면 어느 곳을 누를지 모르니 당연히 움직일 수 있어야겠죠?
실시간으로 앱에서 발생하는 로그를 보여줘야 합니다.
앱에서 발생하는 로그는 아주 많습니다.(시스템, 개발용도) 조금이라도 편리하게 사용하기 위해선 검색이 필요합니다.
특정 플랫폼 및 팀에서 원하는 로그에 대한 패턴이 있",Android
https://surfit.io/link/Rvaxl,Android MVI,"Android 에서 앱을 개발하는 일은 그 자체로 하나의 패턴을 적용하기 매우 까다로운 구조로 구성되어 있기 때문입니다. 그건 모바일 앱의 실행 환경과 무관하지 않은데요. PC의 프로그램이 단일 진입점을 갖는 하나의 모놀리식 프로세스로 실행되는 반면 Android 앱은 다양한 프로세스가 서로 Task를 섞어가며 실행됩니다. 여기에 사용자의 입력 처리, 데이",Android
https://surfit.io/link/9RVv7,12L 기능 출시를 위한 베타 1 업데이트!,"대화면용으로 특별히 제작된 Android 12의 12L 개발자 프리뷰도 선보였습니다.12L을 통해 대화면 시스템 UI를 최적화하고 정교하게 다듬고, 멀티태스킹을 더욱 강력하고 직관적으로 만들었으며, 별도 작업 없이도 기본적으로 앱이 더 자연스럽게 구현되도록 앱 호환성 지원을 개선했습니다. 12L에는 공간 오디오 및 접근성을 위해 향상된 드래그 앤 드롭과 같",Android
https://surfit.io/link/AZv8X,안드로이드 런처와 위젯 톺아보기 (4) - 페이코 앱 위젯/숏컷 이슈 일대기 (완),"위젯이 초기화되었어요
런처가 업데이트될 때 위젯 대응을 잘못한 경우
때는 바야흐로 작년, 안드로이드의 페이코 결제 위젯에 이슈가 발생했습니다.

당시 페이코 결제 위젯은 설치 시 런처에서 위와 같은 형태로 동작을 하게 되는데요,각 영역을 클릭 시 결제 / 카드 변경 / 앱 실행 이 되는 이벤트를 가지고 있습니다.

그런데 어느 날 위와 같이 결제 영역의 카",Android
https://surfit.io/link/rMlq6,"안드로이드 런처와 위젯 톺아보기 (3) - 위젯과 숏컷, 런처와의 상관관계","위젯이란 홈 화면에서 앱 아이콘을 통해 앱을 실행하는 것이 아니라, 특정 기능을 곧바로 실행할 수 있는 기능입니다.
(예: 페이코 삼성 페이 위젯 설치 시 설치된 위젯을 클릭하면 곧바로 페이코 삼성 페이 결제 화면으로 이동할 수 있음)
Q. 위의 위젯 정의에서 이상한 점은 무엇일까요?.......위젯의 기능 자체는 맞을 수 있지만, 개발자의 관점에서 위 정",Android
https://surfit.io/link/VDkjp,안드로이드 런처와 위젯 톺아보기 (2) - 설치된 앱들은 어디에?,"안드로이드 폰은 수많은 종류가 있지만, 가장 대중적인 갤럭시 시리즈를 기준으로 위와 같이 설치된 앱들이 좌라락 노출됩니다.더불어 각 아이콘을 클릭하면 해당 앱이 실행되는데, 어떻게 이것이 가능한 것인지 궁금하지 않으신가요?

(ㅠㅠ)
... 앞서 1편에서 런처 역시 하나의 앱이라고 말씀드렸는데요,이러한 서드파티 앱 입장에서 기기에 설치된 앱 정보들을 얻으려",Android
https://surfit.io/link/bbRex,안드로이드 모듈을 Maven 배포(sonatype을 이용) 방법을 알아보자.,"지라 승인이 나야 sonatype의 Nexus repository에 접근할 수 있습니다.
  배포를 위한 maven-publish, signing 라이브러리를 활용해, 배포 스크립트를 작성합니다.
  배포를 위한 GPG 발행 및 서버로의 등록이 필요합니다.
  지라 계정과 GPG 정보를 활용해 스크립트에 계정 정보를 추가로 작성합니다.
  배포를 위한 gr",Android
https://surfit.io/link/rMOzl,안드로이드 런처와 위젯 톺아보기 (1) - 홈 화면도 앱이었다?,"홈 화면도 하나의 앱이라는 사실을 알고 계셨나요?
통상적으로 홈 화면(또는 배경화면, 잠금화면) 이라 불리우는 이 앱의 공식적 명칭은 런처(Launcher) 로, 런처 중에서도 전원을 켰을 때 처음으로 실행되는 런처를 Default Launcher 라고 부른다고 합니다.
해당 연재에서는 UX상으로 모든 안드로이드 앱 사용의 근간이 되는 이 Default L",Android
https://surfit.io/link/Q6aM0,[Flutter] 그라데이션으로 만들어보는 광원 효과,"BoxDecoration 위젯 안에는 gradient라는 파라미터가 있고, 조명의 효과를 내기 위해서는 원형 그라데이션인 RadialGradient를 사용한다.
RadialGradient
다른 gradient와 마찬가지로 그라데이션 색상을 선언해야 한다. 
RadialGradient(
  colors: gradientColors,
  stops: color",Android
https://surfit.io/link/jlMv9,Android Multi module(멀티 모듈)의 dependency는 어떻게 하는 게 좋을까?,"아키텍쳐가 잘 적용되어 있다면 모듈 나누는 고민도 한 번쯤 해보았을 겁니다. 모듈을 나누는 건 어렵지 않습니다.

모듈을 어떤 식으로 나눌지가 어려운 고민이지만, 단순히 클래스의 기능별로 모듈을 나눌 수 있습니다.

Base 모듈 : BaseActivity, BaseViewModel, BaseFragment를 포함하는 모듈
  Network 모듈 : 네트워",Android
https://surfit.io/link/BlRro,Server Driven UI 설계를 통한 UI 유연화,"웹과 달리 네이티브 모바일 앱은 빌드, 배포 후에는 수정이 불가능합니다.
만약 잘못된 위치에 버튼을 배치한 채로 스토어에 앱을 배포했다면,
그리고 사용자가 잘못된 버전의 앱을 설치했다면 버튼의 위치를 수정할 방법이 없습니다.
유일한 방법은 사용자가 스스로 스토어에 들어가 수정된 버전의 앱으로 업데이트하는 것 뿐입니다.
배포 후 수정이 불가능하다는 특성이 부",Android
https://surfit.io/link/GAZZn,Note from Google Play 첫번째 에디션  | 새로운 혁신의 해,"Play 미디어 경험 프로그램(Play Media Experience Program)을 제공하여 비디오 및 오디오, 도서 개발자가 다양한 디바이스에 걸쳐 훌륭한 경험을 제공하게 하는 한편, 서비스 수수료를 10% 까지 할인하여 저자와 뮤지션을 지원할 수 있는 앱을 출시할 수 있도록 도왔습니다. 그리고 몇 개월 전, 정기 결제 비즈니스 모델을 발전시키는 새로",Android
https://surfit.io/link/Z8baD,지식iN 앱을 Flutter로 개발하는 이유,"모바일 앱의 플랫폼이 iOS와 Android 두 개로 나누어져 있어 기획 단계에서는 스펙 논의가 같이 진행되어도 디자인 단계 이후부터는 다음 그림처럼 진행 과정이 나누어지게 된다.



그림 1 모바일 플랫폼에 따라 나누어지는 앱 개발 과정

디자인 단계에서는 플랫폼에 맞춰 UI와 UX가 수정되기도 한다. 동일한 UI를 제공하려 해도 iOS와 Android",Android
https://surfit.io/link/4bbP9,Functional Thinking in Kotlin,"우리가 프론트엔드를 개발할 때 사용하는 JavaScript는 대표적인 함수형 프로그래밍 언어입니다. 이외에도 함수형 언어는 많습니다. 모던 언어중에는 가장 사용처가 많다고 할 수 있는 Kotlin 또한 함수형 패러다임을 차용하고 있는데요, 이번 발표는 Kotlin의 함수형 방법론과 언어 디자인에 대해 살펴본 후, JavaScript와는 어떤 차이가 있는지 ",Android
https://surfit.io/link/Oo48k,KMM(Kotlin Multiplatform Mobile),"Kotlin Multiplatform Mobile(KMM)은 JetBrains가 제공하는 크로스 플랫폼 모바일 개발용 SDK입니다. Kotlin의 멀티플랫폼 기능을 사용하며, 모바일 크로스 플랫폼 애플리케이션을 최대한 즐겁고 효율적으로 빌드할 수 있도록 종합 환경을 제공하기 위해 설계된 다양한 도구와 기능을 포함합니다. KMM은 2020년 8월에 알파로 출",Android
https://surfit.io/link/zMp66,테스트 코드 한 줄을 작성하기까지의 고난,"나름 잘 구성된 아키텍처이지만, 테스트 코드가 없었습니다.



저희 팀은 테스트 도입과 무엇을 얼마나 테스트했는지 파악하는 것을 올해의 목표로 잡았습니다.















테스트를 하기 위한 준비















테스트 코드 한 줄 작성을 하기 위해서 제가 겪었던 에러들과 미리 만들어야 했던 것들에 대해서 이야기해 보겠습니다. 


",Android
https://surfit.io/link/P1lV6,대한민국 이용자를 위해 개발자 제공 결제 시스템 적용이 가능해집니다,"최근 대한민국 정부는 한국 이용자에 대한 앱 마켓 및 결제 시스템에 대한 법을 개정하였습니다. 이에 대한 국회의 결정을 존중하여, 새로운 법률에 대한 방안으로 마련한 몇 가지 정책 변경 내용을 공유드립니다. 이제 한국 이용자에게 앱 내에서 디지털 상품 및 서비스를 판매하는 개발자는 Google Play의 결제 시스템과 함께 개발자가 제공하는 인앱 결제 시스",Android
https://surfit.io/link/llPY2,날씨 API 요청 응답에 ‘캡슐화-위임 숨기기’ 리팩토링 적용하기,계층적 Key-Value 형태의 JSON 포맷의 데이터를 처리하기 위해 Kotlin 에서 각각의 JsonObject 에 대응되는 계층적으로 구성된 다음 형태의 Data Class 들이 필요하다. 리팩토링 적용 전 후 비교를 위해 캡슐화를 적용하기 전의 Data Class 형태로 구성했다.data class Weather(	val geo: WeatherGeo,Android
https://surfit.io/link/AZjyj,Wear OS용 Compose를 개발자 프리뷰로 제공합니다!,"Compose는 UI 개발을 간소화하고 가속화합니다. 더 적은 코드로도 멋진 앱을 만들 수 있도록 Material You 지원이 기본으로 제공되는 Wear OS용 Compose도 마찬가지입니다. 또한, Jetpack Compose로 모바일 앱을 빌드하면서 터득한 사항을 Wear OS 버전에도 그대로 적용할 수 있습니다. 모바일과 마찬가지로, 언제든 즉시 테",Android
https://surfit.io/link/mxyqy,수많은 기기에 권한 자동 초기화 기능이 제공됩니다,"Android 11에서는 권한 자동 초기화 기능을 도입했습니다. 이 기능은 앱을 몇 달간 사용하지 않을 경우, 요청 시 사용자에게 프롬프트를 표시하는 권한인 앱의 런타임 권한을 자동으로 초기화하여 사용자의 개인정보를 보호합니다. 2021년 12월부터 이 기능을 더욱 많은 기기로 확장할 예정입니다. 이 기능은 Android 6.0(API 레벨 23) 이상을 ",Android
https://surfit.io/link/Z88Rk,CustomView 이해하기,"커스텀 뷰의 핵심은 onMeasure, onDraw, onLayout 입니다. 도화지 크기를 선택하고(onMeasure), 어느 위치에(onLayout) 어떤 그림을 그릴지(onDraw) 설정해주면 커스텀 뷰는 완성됩니다.

뷰는 포커스를 얻게 되면 레이아웃의 루트 노드에서 시작하여 전위 순회로 그려집니다. 따라서 부모가 자식들보다 먼저 그려지고, 형제들은",Android
https://surfit.io/link/yRRom,MAD Skills 시리즈 - Hilt를 소개합니다,"Hilt는 Android에서 DI를 구현하기 위한 Jetpack의 권장 솔루션입니다. Android 앱에서 종속성 주입 원칙을 따르면 좋은 앱 아키텍처에 필요한 기초를 마련할 수 있습니다. 코드 재사용성과 리팩터링 용이성, 테스트 용이성에 도움이 되죠! 여기에서 DI의 이점에 대해 자세히 알아보세요.프로젝트에서 클래스의 인스턴스를 만들 때, 클래스에 필요한",Android
https://surfit.io/link/YAAxZ,AOSP에서 Android 12 출시되었습니다!,Android용 새로운 UIMaterial You - Android 12에는 Material You라는 새로운 디자인 언어가 도입돼 더욱 고도로 맞춤화되고 멋진 앱을 빌드하는 데 도움이 될 것입니다. 최신 머티리얼 디자인 3 업데이트를 앱에 적용하려면 머티리얼 디자인 구성 요소의 알파 버전을 사용해보고 곧 제공해드릴 Jetpack Compose에 대한 지원,Android
https://surfit.io/link/3G48W,ML Kit를 사용하여 포즈 인식 기능 개발하기,"포즈 인식 API를 사용하여 사진 또는 비디오를 분석하고, 사람이 취하고 있는 포즈를 실시간으로 판별할 수 있습니다.아무것도 없이 처음부터 포즈를 인식하는 기술을 개발하려면 엄청난 시간과 노력이 필요겠지만, ML Kit의 포즈 인식 API를 사용하면 코드 몇 줄만으로 포즈 인식을 구현할 수 있습니다. (구글 고마워!)그래서 이 포즈 인식을 어디다 쓰냐면…출",Android
https://surfit.io/link/3A9Wp,Navigation Component에 대해 알아보기,"Fragment Manager는 프래그먼트를 추가, 삭제, 교체하고 백스택에 추가하는 작업을 실행하는 클래스입니다. 이 과정에서 개발자는 Fragment Manager를 통해 트랜잭션 관리를 하게 되는데, commit과 commitAllowingStateLoss()의 차이와 supportFragmentManager와 childFragmentManager에 ",Android
https://surfit.io/link/LLO4W,Android 12 Beta 5 최종 베타 업데이트를 확인하세요,"Android 12의 공식 출시까지 몇 주밖에 남지 않았습니다! Android의 새 버전에 대한 마무리 작업이 진행되는 가운데, 오늘은 테스트 및 개발에 도움이 되는 최종 베타 업데이트를 소개합니다. 개발자 여러분은 이제 앱이 준비되었는지 확인할 때입니다!여기에서 무선 업데이트에 등록하면 5G를 지원하는 Pixel 5a 등의 Pixel 기기에서 베타 5를 ",Android
https://surfit.io/link/rM0Y0,더 우수한 앱을 위한 앱 성능에 대해 알아보세요,"앱 성능이라는 개념에 집중해 봅시다. 고성능 앱의 특징이 무엇이고, 어떻게 해야 강력한 성능을 통해 앱 우수성을 달성할 수 있을까요?사용자의 관점에서, 고성능 앱은 '그냥 잘 작동하는 앱'입니다. 하지만 고성능 앱을 만드는 과정이 항상 간단한 건 아닙니다. 자세히 보자면 '고성능'에는 다음과 같은 주요 특성이 있습니다.안정성앱은 안정적이며 신뢰할 수 있어야",Android
https://surfit.io/link/KvBx2,큰 화면에 맞게 앱을 최적화하세요: 작업 관리앱 Trackr의 개발 모범 사례,"머티리얼 디자인과 반응형 패턴을 적용하여, 어떻게 큰 화면에서 더욱 세련되고 직관적인 사용자 환경을 구현했는지 살펴보겠습니다. 탐색구현 전: Tasks 화면 하단 앱 바의 메뉴에서 Archive와 Settings에 액세스할 수 있었습니다. 큰 화면에서는 메뉴 컨트롤이 불편한 위치에 매우 작게 배치되고, 하단 앱 바는 지나치게 늘어납니다.왼쪽: 스마트폰에서 ",Android
https://surfit.io/link/KQdqz,Android 12 베타 3 및 최종 API를 확인하세요,"Android 12는 혁신적인 기능, 사용자에 맞춰 조정되는 새로운 UI, 성능 개선, 개인정보 보호 강화, 보안 혜택 등을 통해 최종 버전에 나날이 가까워지고 있습니다. 많은 개발자 분들께서 이미 베타 프로그램으로 Android 12에서 개발 및 테스트를 진행해주시고 다양한 의견을 전달해 주신 것에 감사드립니다. 이번 릴리스를 출시하려면 아직 해야 할작업",Android
https://surfit.io/link/KrJVG,스마트한 개발을 위한 Android Studio 플러그인 템플릿,"Android Studio에서 제공되는 템플릿은 Activity, Fragment, 기타 등을 생성할 때 기본적인 세팅을 해주는 템플릿이기 때문에, 이것만으로는 프로젝트를 진행하는데 있어 상당히 불편합니다. 이는 많은 보일러 플레이트 코드들이 존재하기 때문인데, 예를 들면 RecyclerView를 사용하게 되는 화면이나 MVVM, MVP 등의 디자인 패턴을",Android
https://surfit.io/link/w8D8z,올리브영 안드로이드 테스트앱 자동배포하기,"개발이 완료되면 앱을 빌드한뒤 업로드해야합니다.
우선 PlayStore에 2차 인증을 거친 로그인을 해야하고 (제일 귀찮아요), 적당한 릴리즈노트와 함께 앱을 업로드하면, 앱파일을 첨부하는데 일정 시간을 소요한뒤에 앱을 제출할 수 있습니다. 
업로드가 완료되면 바로 제공되는 것도 아닙니다.
약 30분의 ‘출시준비중’ 단계를 대기한 후에 테스터들에게 앱이 제",Android
https://surfit.io/link/KbEDq,나와라 APK(feat. Jenkins),"“반복되는 일을 반복하지 않도록 하는 것”이 스마트하게 일하는 방법이라고 생각합니다.그럼 이제 Android 개발을 하면서 반복되는 일에 대해서 생각해봅시다. 어떤게 있을까요?앱은 배포되기까지는 해당 프로젝트에 속하는 많은 작업자 분들이 확인하는 단계가 필요합니다. 앱의 품질을 담당하는 QA분들은 물론, 해당 프로젝트의 기획자가 될 수도 있고 디자이너가 될",Android
https://surfit.io/link/5z7gN,Jetpack Compose 1.0,"Google은 네이티브 Android 앱을 더 빠르고 쉽게 빌드할 수 있도록 Compose를 설계했습니다. 완전한 선언적 접근 방식을 채택할 경우 UI를 설명하기만 하면 나머지는 Compose가 알아서 처리합니다. 앱 상태가 바뀌면 UI가 자동으로 업데이트되므로, 훨씬 더 간단하게 UI를 빨리 만들 수 있습니다. 직관적인 Kotlin API는 훨씬 더 적은",Android
https://surfit.io/link/wJ6qE,"RxJava to Coroutine, 네트워크 처리에 코루틴을 적용했더니?!","안녕하세요 강남언니에서 안드로이드 개발하는 Dalton 입니다.
강남언니 안드로이드 프로젝트에 Kotlin Coroutine 을 1주일이라는 시간동안 앱내의 모든 백엔드 서버연동시에 사용될 수 있게 적용했던 내용을 공유하고자 합니다.
(본문에서는 간단하게 Coroutine 으로 표기하겠습니다)
왜 Coroutine 을 적용하려고 했나?
저희가 Corouti",Android
https://surfit.io/link/w8EL4,[요약] What's new in Jetpack Compose (Google I/O '21),"Compose는 Android의 최신 네이티브 UI 도구 키트이다

현재 베타버전이며 곧 1.0이 출시된다


처음부터 개발을 빠르게 하도록 설계되었다
  훨씬 적은 코드로 UI를 구현할 수 있다


View 기반의 기존 Toolkit은 10년 넘게 사용했다
  기기 성능도 향상되었고 앱에 대한 기대감도 커졌다
  UI는 훨씬 동적이고 다양하게 표현한다
 ",Android
https://surfit.io/link/3qRGv,접근성 지원 != 시각장애인 대응,"모바일 앱에서 접근성을 지원한다고 했을 때, 많은 분들이 시각장애인 지원을 가장 먼저 떠올립니다. 이는 자연스러운 일이라고 생각해요. 하지만 주의를 기울이지 않으면 아주 쉽게 “접근성 지원 == 시각 장애인 지원”이라는 등식이 머리에 새겨지는 경우도 있는 것 같습니다. 하지만 사실은 결코 그렇지 않습니다. 접근성을 고려해 앱을 만드는 일은 시각장애인 뿐만이",Android
https://surfit.io/link/KP7xj,Android 호환성 유지에 대한 고찰 ~ 언어편,"안드로이드 개발자가 작성한 코드의 결과물은 다양한 디바이스에서 설치됩니다. 현재 약 25억 개의 활성화된 디바이스를 비롯하여 스마트폰/태블릿/Wear/Auto/TV 등 다양한 디바이스에서 실행되는 OS입니다. 다양하게 쓰일 수 있다는 점이야말로 안드로이드의 장점 중 하나입니다.

다만 다른 시각으로 봤을 때는 우리 손을 떠나면 어떤 디바이스에 설치될지 모른",Android
https://surfit.io/link/3B4Nj,"쉽지만 어려운 WebView! 이젠 그만, 쉽기로 하자!","Unity 개발자들의 한줄기 빛이 되리라!
Unity 개발자들은 일이 너무 많습니다. 게임만 잘 만들면 될 줄 알았는데.플랫폼 연동(인증, 결제, 푸시), 다양한 언어 학습, 그리고 WebView 연동 등. 게임 개발 외에 해야 할 일이 너무 많습니다.

사례를 하나 들어 보겠습니다.게임을 좋아해서 게임 개발사에 입사한 김모씨.
대박 게임을 만들겠다는 마음",Android
https://surfit.io/link/Kp0EL,코로나 시대 원격 QA! 오픈소스 디바이스팜 STF 도입기,"QA(Quality Assurance) 단계에서 특정 단말기에서만 문제가 발생하는 경우가 종종 있습니다. 하지만 코로나19로 인해 해외 출장은 물론 출근조차 어려워지면서 원격지의 단말기를 입수해 테스트하는 일이 불가능한 경우가 많아졌습니다. 이를 해결하기 위해 디바이스팜을 구축하고 테스트 자동화에 활용한 사례를 여러분께 공유하려고 합니다.







디바",Android
https://surfit.io/link/3NE9o,Flutter vs Native vs React 성능,"오늘날 모바일 앱을 구축하는 가장 인기있는 솔루션은 React Native 또는 Flutter를 사용하는 네이티브 또는 크로스 플랫폼 방식입니다. 

 네이티브 개발은 AAA 기술 솔루션으로 자리 잡고 있지만, 크로스 플랫폼 앱이 출시 될 시장 공간을 창출하는 데는 몇 가지 단점이 있습니다. 일반적으로 네이티브 개발에는 프로젝트를 완수하기 위해 개발 팀의 ",Android
https://surfit.io/link/KYRzM,혼자서 Android App 개발하기,"저는 2019년 3월에 입사하여 지금까지 만화경 안드로이드를 혼자 개발하고 있는데요

이 글은 저처럼 혼자 혹은 앱을 처음부터 개발하시는 분들을 위해 제가 어떤 부분을 고민하고 신경 써서 앱을 개발했는지를 공유하고자 합니다.

기술 블로그이긴 하나 심도 있는 기술보다는 제가 처음부터 안드로이드 앱을 만들면서 생각했던 것들을 경험 위주로 글을 풀어나가겠습니다",Android
https://surfit.io/link/w80bv,시작하는 안드로이드 개발자를 위해,"본 글은 안드로이드 개발을 시작하는 사람을 위해서 작성해본 개인적인 생각을 정리한 글입니다.
먼저 이 글의 주인공이 될 사람은 안드로이드 개발을 시작한 기간이 없거나 얼마 되지 않은 사람입니다. 안드로이드 개발 시작 시에 작게나마 도움이 되었으면 합니다.

우리 모두 안드로이드 개발을 시작하게 된 이유는 다양할 것입니다. 안드로이드가 궁금해서… 과제 때문에",Android
https://surfit.io/link/KgWeo,Android Studio 4.2에서 제거된 Kotlin Android Extensions을 알아보자.,"개인 광고 영역


                    안드로이드 4.2 버전에서 새로운 프로젝트 생성 시 기본 플러그인으로 제공하던 apply plugin: ‘kotlin-android-extensions’이 제거되고, 기본 ‘com.android.application’과 ‘kotlin-android’ 만 남게 되었다.

더 이상 ‘kotlin-andro",Android
https://surfit.io/link/KpJj0,App Bundle의 Dynamic Delivery로 국가별 모듈 제공하기,App Bundle의 여러 특징 중 하나를 꼽자면 단연 Dynamic Delivery가 아닐까 싶습니다. App Bundle 게시 모델이 존재하기 이전에는 이런 게 가능하리라는 상상을 해본적이 없었기 때문에 이 기능이 소개되었을 때 ‘와! 멋지다. 그런데 내가 이걸 써볼 일은 없을거야’ 정도의 감상이었습니다. 왜냐하면 정말 이런 게 필요하다.라고 느껴본적이,Android
https://surfit.io/link/3M0Oz,유니티와 함께하는 안드로이드,"안드로이드 : 유니티님~ 함께 하실…?
띠잉이라는 안드로이드 프로젝트에서는 디바이스의 카메라를 통해 얻은 프레임 데이터에서 얼굴과, 얼굴 요소를 트래킹하여 좌표를 얻고, 해당 좌표에 각 시나리오별로 선별된 각종 3D 효과를 입힌 프레임을 사용자에게 영상화 해서 보여주는 기능이 구현되어야 했습니다.

해당 기능을 구현하기 위해서 여러 방법이 있지만, 기회비용",Android
https://surfit.io/link/KQPD4,[android] canvas기반의 Drawable 활용,"개요기본 골격뷰모델의 골격뷰모델과 연동뷰모델의 속성을 이용해 실제 그림그리기캔버스 속성 처리기rotate와 centerX, centerYrect중간 정리간단한 예제결론개요top
안드로이드 공식문서에는 Drawable을 상속하여 canvas에 직접 그리는 예제가 나옵니다.
맞춤 드로어블
결국 이 방법을 이용하면 draw메소드에서 받아온 canvas에 Canv",Android
https://surfit.io/link/310V8,Android 다크 모드 적용하기,"출시 이전 가칭 Android Q 버전이 2019년 9월 3일 Android 10 이란 네이밍으로 출시되었습니다.

Android 10 의 업데이트 중 저의 가장 큰 관심사는 바로 다크 모드입니다.

다크 모드를 활성화했을 때, 기존에는 일부 시스템에서만 테마가 변경되었는데, Android 10 으로 업데이트되며 애플리케이션에서도 다크 모드를 적용할 수 있",Android
https://surfit.io/link/K2n06,Android 앱 빌드 속도를 높이는 10가지 방법,"참고. 이번 블로그는 LINE DEVELOPER DAY 2018에서 Jirawat Karanwittayakarn 님이 발표한 ‘Build your Android app Faster and Smaller than ever’ 세션을 기록한 내용을 각색하여 옮긴 글입니다(원문 기록 및 제공: logmi).







들어가며



이번 글에서는 Android ",Android
https://surfit.io/link/KR8Ob,Android 앱의 크기를 줄이는 10가지 방법,"참고. 이번 블로그는 LINE DEVELOPER DAY 2018에서 Jirawat Karanwittayakarn 님이 발표한 ‘Build your Android app Faster and Smaller than ever’ 세션을 기록한 내용을 각색하여 옮긴 글입니다(원문 기록 및 제공: logmi).







들어가며



안녕하세요. LINE Thai",Android
https://surfit.io/link/KP8Zv,[RxJava] 네트워크 요청 Retry 전략,요즘 대부분의 회사에서 안드로이드 앱 개발 시 국민 조합인 RxJava + Retrofit + OkHttp 조합으로 네트워크 요청을 처리하고 있는 것으로 알고 있다. 물론 코루틴을 사용하고 있는 곳들도 있지만 Kotlin의 고차 함수와 RxJava의 compose 연산자 등을 활용하여 다양한 Retry 전략을 설정하는 방법에 대해서 알아보자. 물론 많은 분,Android
https://surfit.io/link/5z4B1,더 작은 APK를 위한 Android App Bundle에 대해서 🐷,2018년 구글 IO The future of apps on Android and Google Play 세션에서 앱 사이즈와 설치율에 대한 상관관계가 눈길을 끌었습니다. 이 세션은 앱의 사이즈가 커질수록 플레이스토어의 앱 설치 전환율이 낮아진다는 이야기로 시작을 했는데요. APK 크기가 6MB씩 증가할 때마다 사용자가 앱을 설치하는 비율(방문자 대비 설치율,Android
https://surfit.io/link/3aWMG,[요약] What's New in Android Development Tools (Google I/O '19),"올해는 새로운 기능 대신, 다른 것을 소개한다. 작년 11월에 Project Marble 을 발표했고, 주요 문제를 해결하는데 주력했다.",Android
https://surfit.io/link/aW21Q,Android view에서 ViewModel을 어떻게 호출해 사용해 볼 수 있을까?,"이 글에서는 View에서 ViewModel을 어떻게 호출하고 접근하는 게 좋은지를 다루기 위한 글입니다.

RxJava 또는 Flow를 활용해 Click event 처리를 stream으로 받아 처리하도록 만들어 줄 수 있습니다. 대표적인 예는 JakeWharton/RxBinding의 예가 됩니다.

RxBinding처럼 Rx 스트림을 활용하는 방법을 사용하",Android
https://surfit.io/link/Q6V00,"Android DataBinding에서 활용하는 LiveData, Observable, StateFlow를 알아본다.","LiveData에 대해서 생각하는 부분을 나열하고, DataBinding 시 사용할 수 있는 또 다른 Observable, StateFlow를 간단하게 알아본다.

RxJava는 직접적이지는 않지만 간접적으로 활용해야 한다.

DataBinding을 활용하거나, observe를 할 때 어떤 도구를 활용하는 게 좋을지 가이드를 해보려고 한다.

이 글에서 도",Android
https://surfit.io/link/KQWy0,LINE Android CI에 App Bundle 적용기,"LINE Android 팀에서는 작년 7월부터 Android App Bundle을 도입해서 앱 개발을 진행하고 있습니다. 이제 1년 조금 넘게 사용했는데요. LINE Android CI에 App Bundle을 적용하면서 겪었던 여러 가지 어려움을 공유하려고 합니다.



먼저 App Bundle과 유니버설 APK에 대해 간단히 소개하고 LINE Androi",Android
https://surfit.io/link/5epzn,HiltViewModel 이해하고 쓰기,"안드로이드 앱 개발시 뷰모델을 구현할 때, 액티비티 또는 프래그먼트의 구성 변경에도 데이터가 유지되는 AAC-ViewModel 클래스를 상속하는 것을 권장합니다. AAC-ViewModel 을 사용한다면 뷰모델 객체를 생성할 때 생명주기에 맞춰 데이터를 보존하기 위해 프로그래머는 ViewModelProvider.Factory 만 구현하고 ViewModelPr",Android
https://surfit.io/link/wkYb6,"Kotlin CoroutineScope을 알아보고, cancel 처리에 대해서 알아보자.","Kotlin Coroutines의 GlobalScope을 어떻게 사용할 수 있을까? - 사실 추천하지 않는다.
이 두 가지의 코루틴은 이유 없이 사용해서는 안 되는 것들이다. 그럼 사용할 수 있는 건 가장 기본적인 CoroutineScope이 남는다.

필자가 한참 코루틴을 학습할 때 적었던 내용에 CoroutineScope의 활용 방법은 이미 다양하게 나",Android
https://surfit.io/link/Kprva,Kotlin Coroutines의 GlobalScope을 어떻게 사용할 수 있을까? - 사실 추천하지 않는다.,"코루틴의 runBlocking에 대해서 이야기했다. Kotlin Coroutines의 runBlocking은 언제 써야 할까? 잘 알고 활용하자! 결국 잘 알고 사용하는 건 문제가 없다. 역시나 잘 못 알고 사용하는 경우라면 사실 사용치 않는 게 맞는다고 생각한다.

이번 글은 코루틴 관련 2 번째 글로 GlobalScope에 대해서 알아보려고 한다.

이",Android
https://surfit.io/link/KQkQp,AndroidX Lifecycle ~ ViewTreeLifecycleOwner,"본 글은 Jetpack AndroidX Lifecycle에 추가된 ViewTreeLifecycleOwner, ViewTreeViewModelStoreOwner 를 다루는 글입니다.
AndroidX Lifecycle은 Activity/Fragment의 컴포넌트 생명 주기와 상태 변경에 필요한 작업을 도와주는 Artifact입니다. 내부에는 ViewModel과",Android
https://surfit.io/link/KgVpy,안드로이드 Hilt 알아보기,많은 개발자들이 지금까지 구글에서 Jetpack을 통해 제공하고 있는 의존성 주입 라이브러리 Dagger2를 사용해 왔습니다. 여러 장점에도 불구하고 높은 학습비용과 많은 보일러 플레이트 코드를 생성해야 하는 단점으로 적용하기에 불편했던 것이 사실입니다. 이에 대해 구글에서는 최근 Hilt라는 라이브러리를 공개했습니다. 간단한 예제를 통해 기존 Dagger,Android
https://surfit.io/link/Kvazl,안드로이드 앱에 Koin으로 DI 적용하기,"최근 매장 점주분들을 위한 식자재 비용 관리와 분석을 제공하는 도도 카트 안드로이드 앱에 DI(Dependency Injection; 의존성 주입)를 적용하게 되었습니다. 안드로이드에 DI를 적용하면 훌륭한 앱 아키텍처를 위한 토대를 마련할 수 있고 많은 이점을 누릴 수 있습니다.

이 글을 통해 DI가 무엇인지, 왜 적용해야 하는지 간단하게 알아보고 Ko",Android
https://surfit.io/link/31QD8,Dagger Hilt로 안드로이드 의존성 주입 시작하기,"안녕하세요,
하이퍼커넥트 하쿠나 팀에서 하쿠나 라이브(Hakuna Live)를 개발하고 있는 Dove입니다!
이번 포스팅에서는 안드로이드 프로젝트에서 Dagger-Hilt를 사용하여 DI 환경을 구축하는 방법을 소개하고자 합니다.

Dependency Injection in Andorid

의존성 주입(Dependency Injection)은 최근 Andr",Android
https://surfit.io/link/Kr9Oo,안드로이드에 React Native 임베딩 후기,"아자르에는 젬이라는 화폐가 있고, 이 젬을 판매하는 젬샵 화면이 있습니다. 이 젬샵 화면은 여느 화면과 다를 바 없이 정해진 디자인의 네이티브 화면으로 구성되어 있었는데요. 어느 날 젬샵에 다음과 같은 요구사항이 생겼습니다.


  젬샵의 디자인을 수시로 변경해가며 사용자 A/B 테스트를 하고 싶다!


하지만 이를 네이티브 코드로 구현하여 실험해 보기에는",Android
https://surfit.io/link/50GAd,Android Fragment 간의 ViewModel 공유하기,"개인 광고 영역


                    안드로이드는 AAC-ViewModel을 제공하는데 기본 3가지를 제공한다.

Activity에서 만 사용하는 경우
  Fragment에서 만 사용하는 경우
  Activity를 기준으로 Fragment에서 공유해서 사용해야 할 경우
1번과 2번 케이스는 그냥 자기 자신만 사용하는 경우에 흔하게 사용한다",Android
https://surfit.io/link/59GP7,Android RecyclerView Adapter에 DataBinding 활용하기,"이번 글에서는 아래 내용을 토대로 작성하지만, 이미 DataBinding 활용을 잘 하고 있는 사용자는 불필요한 내용일 수 있다.

Base로 DataBinding을 활용하는 Adapter를 활용하는 방법을 소개한다.
  1개 이상의 ViewHolder를 사용하고, DataBinding을 활용하려는 경우
  Jetpack Android ViewModel 사",Android
https://surfit.io/link/3Oxdr,Android Transition + SharedElement,"안녕하세요. 언제나 늦지만 새로움을 추구하는 브랜디 MA팀에서 작년까지는 개발적인 관점에서 접근하였다면 올해는 사용자 중심적인 방향으로 브랜디의 접근성을 높이기 위해 노력하기로 마음을 먹었습니다. 물론 저만의 생각은 아닐 것이라 생각합니다. 디자인팀과의 협업을 통해 다양한 테스트와 사전 기술을 습득하였고, 디자인팀 또한 처음 시도해 보는 길을 가기 위해 늦",Android
https://surfit.io/link/KgNXL,Android 취약점 탐색 자동화를 위한 Jandroid 적용기,"안녕하세요. LINE에서 보안 업무를 담당하고 있는 박선주입니다. LINE 보안 팀에서는 릴리스될 서비스와 애플리케이션의 보안 위협을 사전에 발견하여 제품을 더 안전하게 만들기 위해 노력하고 있습니다. 서비스나 애플리케이션을 대상으로 보안 검수를 진행하다 보면, 기존에 보안 이슈가 발생했던 코드와 유사한 패턴을 사용하거나 취약한 패턴의 코드를 재사용하여 취",Android
https://surfit.io/link/wDg2j,Android MVVM + Koin,"2014년부터 브랜디와 하이버를 홀로 개발하기 시작하여, Android 브랜디 소스를 개발한지 5년이 지나고 있습니다. 2018년에 드디어 Android 개발 인원이 충원되었고, 현재는 Android 개발 파트 3명이서 협업으로 개발하고 있습니다.

지난 시간 동안 브랜디는 빠른 속도의 개발이 최우선이었고, 기존 아키텍처의 변경을 최소한의 선에서 변경을 해",Android
https://surfit.io/link/50V9d,Cucumber + Appium을 통해 Android 앱 테스트,"안녕하세요!



  Android 앱이 UI 자동화 테스트되는 과정의 일부에 대한 동영상입니다 :)


저는 앱서비스팀에서 Android/iOS의 배달의민족 앱 QA를 담당하고 있는 최윤주입니다.

배달의 민족 앱은 2주 단위로 정기 업데이트를 합니다. 정기 업데이트에는 사용자가 인지할 수 있을 만큼 큰 기능 변화가 있기도 하고, 왜 업데이트를 받았는지 ",Android
https://surfit.io/link/3GZB8,안드로이드 Gradle dependecies 관리하기,"안드로이드 팀 단위로 개발함에 있어 다양한 프로젝트에서 다양한 플러그인을 사용하다 보면 동일한 버전을 맞추는 것이 상당히 중요해집니다.
def room_version = ""2.2.0-rc01""  implementation ""androidx.room:room-runtime:$room_version"" 
위와같이 build.gradle 파일 내에 선언할 수 도 ",Android
https://surfit.io/link/3BRG9,모바일 UI 테스트 자동화 구축하기,"안녕하세요. 드라마앤컴퍼니의 곽수민입니다.
지난 포스팅에 이어서 모바일에서 UI 테스트 자동화를 실행하기 위한 Setting 방법과 실제 디바이스에 설치되어 있는 제품과의 연결을 시도해보려고 합니다.

개발환경 Setting
기본적으로 자동화 시스템을 구축하는 것도 실제 개발하는 것과 환경이 크게 차이가 없습니다. 제가 사용하고 있는 MAC OS 기준으로 ",Android
https://surfit.io/link/wVMDY,Android에서 사용하는 CoroutineScope을 알아보자,"Kotlin coroutines은 기존 Java Thread, 안드로이드에서 제공하는 AsyncTask, ReactiveX 패러다임을 일부 구현한 RxJava를 대신할 수 있는 Asynchronous/Non-blocking programming을 제공한다.

참고로 기존에 작성하였던 글에서 Kotlin Coroutines을 알아보고, 안드로이드에 libra",Android
https://surfit.io/link/37xWQ,모바일 UI 테스트 자동화 구축하기 – DRAMA&COMPANY,"안녕하세요. 드라마앤컴퍼니의 곽수민입니다.
지난 포스팅에 이어서 모바일에서 UI 테스트 자동화를 실행하기 위한 Setting 방법과 실제 디바이스에 설치되어 있는 제품과의 연결을 시도해보려고 합니다.
개발환경 Setting
기본적으로 자동화 시스템을 구축하는 것도 실제 개발하는 것과 환경이 크게 차이가 없습니다. 제가 사용하고 있는 MAC OS 기준으로 환",Android
https://surfit.io/link/3qVDp,[Android] Unit Testing Framework - Robolectric,"안녕하세요. 이번 시간에는 Android Test Framework 인 Robolectric 에 대해서 다뤄보도록 하겠습니다.Robolectric을 설명하기전, 간략하게 Android 테스트 종류를 살펴보고, 왜 Robolectric 을 사용해야하는지이 좋은지에 대해서 살펴보도록 합시다.
(중간중간, 자바와 코틀린을 섞어서 예제를 구성했습니다. 직접해보시기",Android
https://surfit.io/link/wnEn7,RxJava2 함수 파헤치기!,"Overview
지난 글 Rxjava를 이용한 안드로이드 개발에서는 RxJava의 Android 연결 방법과 기본적인 사용법을 다뤘습니다. 이번 글에서는 RxJava의 강력하고 다양한 함수들을 살펴보고자 합니다. Android에서 복잡하게 구현되는 내용들을 단 몇 개의 함수로 처리할 수 있는 RxJava를 꼭 사용해보길 권합니다.  

1.  just2. ",Android
