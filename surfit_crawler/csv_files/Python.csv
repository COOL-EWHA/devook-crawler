url,title,description,category
https://surfit.io/link/5lxj6,CacheOps — ORM에 Redis Cache 쉽게 적용하기,"29CM 백엔드 서버는 Django으로 구성되어있습니다. 이 글에서는 Django ORM Cache인 Cacheops를 도입하면서 분석한 자료를 공유드리고자 합니다.Django ORM Redis Cache 도입이 용이하고, 쉽게 데이터를 동기화할 수 있도록 도와주는 파이썬 라이브러리입니다.cacheops 패키지를 설치한 후, 자신의 환경에 맞는 설정을 Dj",Python
https://surfit.io/link/Q6lan,시간복잡도와 빅오 (Big-O) 표기법,"공간 복잡도는 프로그램이 실행되고 완료되기까지 사용하는 총 저장 공간량을 의미한다. 저장 공간에는 '고정 공간' 과 '가변 공간' 으로 나뉜다.
고정 공간 : 알고리즘과는 관련 없는 공간으로 코드와 단순 변수, 상수가 해당된다.
가변 공간 : 알고리즘이 수행되며 동적으로 할당되는 공간이 해당된다. 알고리즘과 밀접한 관련이 있다.
이를 함수로 나타내면 아래와",Python
https://surfit.io/link/mxdnO,Django DB Transaction 2편 - 명시적으로 transaction 활용하기. (feat. savepoint),"Django 에서 DB Transaction을 명시적으로 시작하고, 트랜잭션 안에서 savepoint를 사용해서 좀 더 작은 작업 단위로 묶어서 처리하는 방법에 대해서 살펴볼 예정입니다. 특히, savepoint과 관련된 부분은 예제코드와 실제 Raw SQL이 어떻게 실행되는지 까지 살펴보도록 하겠습니다.주의! 이 글에서 DB는 MySQL 5.7 기준입니다",Python
https://surfit.io/link/Q6Z1Y,Django 4.0 릴리스와 주요 변경 사항,"Django는 3년 마다 LTS를 위해 메이저 버전을 하나씩 올리고, 8개월마다 마이너 버전을 올립니다. 현재 LTS 버전은 3.2.x입니다. 이번에 출시한 4.0은 LTS 버전은 아닙니다.
출처: Django 공식 웹 사이트 - 다운로드 페이지파이썬 호환성
Django 4.0은 파이썬 3.8과 3.9, 3.10을 지원합니다. 파이썬 3.6과 3.7을 지원",Python
https://surfit.io/link/vRj16,Django Transaction(트랜잭션) 1편 - Request와 DB Transaction 묶기(Feat. ATOMIC_REQUESTS),"Django에서는 데이테베이스의 트랜잭션을 control할 수 있는 몇 가지 방법을 제공합니다.
트랜잭션을 따로 control하는 설정이나 기능을 사용하지 않으면 기본적으로 autocommit mode로 동작합니다.
autocommit이 True인 경우는 각 쿼리에서 명시적으로 transaction을 시작하고 commit하지 않아도 됨을 의미합니다.


d",Python
https://surfit.io/link/P1pY6,이진 탐색 (Binary Search),"이진 탐색 (Binary Search) 은 정렬 되어 있는 리스트 에서 특정 값을 찾아내는 알고리즘이다. 오름차순, 내림차순의 여부는 크게 상관없으나 보통의 경우 '오름차순으로 정렬된 데이터' 를 사용한다. (정렬의 방향에 따라 탐색 범위를 좁혀가는 방향이 다르다)
탐색할 리스트의 중앙에 위치한 임의의 값을 선택하고 목표 값 (Target) 과 비교하여 탐",Python
https://surfit.io/link/xrPNj,DFS/BFS (깊이/너비 우선탐색),"DFS/BFS 는 그래프 자료구조에 기반한 대표적인 '탐색' 알고리즘이다. 그래프 탐색 순서에 따라 DFS 와 BFS 가 구분된다. DFS 와 BFS 를 이해하고 활용하기 위해서는 우선적으로 큐 (Queue), 스택 (Stack) 그리고 그래프 (Graph) 자료구조에 대한 이해가 선행되어야 한다.
큐와 스택에 대한 글은 필자가 이미 블로그에 작성한 바 있",Python
https://surfit.io/link/exnYy,파이썬 소켓으로 직접 구현하는 SMTP 프로토콜,"SMTP은 메일 서버 간 메일을 전송할 때 사용되는 프로토콜로 OSI 모델의 7계층에 해당한다. TCP 위에서 구현되었으며, 25번 포트를 사용한다. 본래 1982년 IETF의 RFC 821 로 공개되었으나, 이후 2001년에 RFC 2821 로 개정되었다.
아마 이 글을 읽는 독자라면, 메일과 관련된 다른 두 프로토콜 POP3 와 IMAP 또한 알고 있을",Python
https://surfit.io/link/EmAVm,링크드 리스트 (Linked List),"파이썬에서 기본 제공되는 리스트는 실제 메모리 공간에 모든 원소를 연속적으로 배치하는 '배열' 로서 구현되어 있다. 따라서 인덱스로 원소에 접근이 가능하다.
단, 실제 배열과 다르게 길이가 고정되어 있지 않아 데이터의 추가/삭제가 편리하다. 이는 파이썬이 리스트에서 실제 필요한 메모리 보다 조금 더 여유 있게 메모리를 마련해놓기 때문이다. 개념상 C++ 의",Python
https://surfit.io/link/zM9Lp,"스택 (Stack), 큐 (Queue)","스택 (Stack) 과 큐 (Queue) 는 모두 데이터를 임시 저장하기 위해 사용하는 자료구조이며, 데이터를 입력하고 출력하는 방향이 정해져있다. 스택, 큐는 서로 비슷한 점을 많이 가지고 있는 자료구조이다. 따라서 스택, 큐는 한 포스트내에서 동시에 다루기로 한다.
2. 스택 (Stack)
스택은 데이터의 입력과 출력이 후입 선출 (FILO) 방식을 따",Python
https://surfit.io/link/VDGkG,해시테이블 (Hash Table),"해시 테이블 (또는 해시 맵 이라고도 한다) 은 1950년대에 등장했지만, 아직도 많은 곳에서 유용하게 사용되는 자료구조이다. 해시테이블은 데이터를 Key-Value 쌍으로 저장하는 자료구조이다. 대표적으로 Python 의 딕셔너리가 해시 테이블로 구현되어 있다.
해시 테이블은 Key 를 받아 임의의 해시 함수를 통해 도출된 해시 값을 배열의 Index 로",Python
https://surfit.io/link/oz40R,Python3.6 부터는 Dict가 순서를 기억한다,"딕셔너리는 사전이라는 의미가 있는 단어로 Python에서는 사전형 데이터를 담는 자료형을 뜻합니다.
 
사전형 데이터란 다른 말로 연관 배열이라고도 할 수 있습니다. 연관 배열은 키 하나와 값 하나가 연관되어 키를 통해 연관된 값을 얻을 수 있습니다. 국어사전에서 원하는 단어를 찾아 그에 연관된 단어의 뜻을 찾아보는 것을 생각해 보면 쉽게 이해할 수 있습니",Python
https://surfit.io/link/7LnV6,Python Style Guide in 29CM,"동일 모듈에서 import 하는 경우 컴마(,)를 사용하여 나열하는 것이 가능합니다. 두 줄의 이상으로 넘어가는 경우 소괄호를 이용하여 줄을 나누고, 다음 줄의 내용은 여는 괄호 “(“ 의 시작 부분에 맞추도록 합니다모듈 이름이 동일할 경우, alias를 추가하여 구분을 하는 것이 좋습니다상수(const.py)의 경우 alias를 사용하지만, django_",Python
https://surfit.io/link/VD8Jy,Django에서는 QuerySet이 당신을 만듭니다 (2),이 이야기는 역설적으로 SQL을 대신 생성해주는 ORM이SQL을 개발자 대신 짜주는 도구가 아님을 반증하는 동시에 ORM은 그저 SQL 작성으로 인한 보일러 플레이트 코드를 줄여주기만 할 뿐성능을 고려한 SQL은 ORM을 사용한다 하더라도여전히 개발자(인간)의 영역이라는 것을 의미한다ORM 사용해도 SQL을 알고 공부해야 하는 것은 변하지 않았다.다만 이제,Python
https://surfit.io/link/Q6Vx6,Django에서는 QuerySet이 당신을 만듭니다,select_related()로 명시하지 않아도 JOIN하는 경우select_related()를 써야만 join하는 것은 아니다. 위에서 100% 매칭되지 않다고 했던 것처럼 select_related()를 사용하지 않더라도 필요하다 판단되면 JOIN한다.하지만 이 경우 아래 주석처리한.select_related(‘related_order’) 구문을 같이 ,Python
https://surfit.io/link/wk746,웹크롤러 scrapy를 소개합니다,"scrapy는 웹사이트에서 필요한 데이터를 추출하는 오픈소스 프레임워크입니다. 네, 많고 많은 crawler 중에 하나입니다. 혹시 듣보잡 아니냐고요? 네, 뭐 구글 트렌드로 다른 크롤러와 비교해보면 크게 뒤떨어지는 건 사실입니다. (지난 5년간 대한민국 기준 트렌드 자료입니다. 파란색이 selenium, 노란색이 beautifulsoup, 빨간색이 scr",Python
https://surfit.io/link/KbNoA,Python 3.9에 등장한 상큼한 8가지 Features,"파이썬에는 Node나 리눅스 처럼 딱히 LTS(Long Term Support) 버전이 이라 명명하는 버전이 없지만, RC(Release Candidate)에서 정식 버전 채택 후 18개월간의 수명을 가지며, 이 후 3년 6개월간 보안관련 업데이트를 지원합니다.

이 18개월의 시간을 Full Bugfix Support 기간이라 하며, 보통 동시에 2개 버",Python
https://surfit.io/link/wo1rn,테스트 자동화 도입 여정기,"테스트 코드를 도입할 때, 가장 먼저 필요했던 것은 “테스트 코드""의 의미와 필요성을 동료들이 이해하고 공감하는 것이었습니다.테스트 코드를 작성하고, 유지보수한다는 것은 개발 프로세스의 변화를 의미합니다. 그리고 이는 개발자의 학습량, 업무량, 개발 패턴에 영향을 미칩니다.변화의 예로는 새로운 기술 학습, 테스트 코드 작성 업무, 테스트 프로세스로 인한 개",Python
https://surfit.io/link/w8g1z,Redis를 활용하여 Request 5배 더 받기,"Redis의 자료구조중 Sequantial한 데이터는 List, Set, Hash가 있습니다. 하지만 모두 각각의 element에 TTL을 줄 수 없습니다. TTL이 중요한 이유는 고객이 주문도중 이탈시 일정 시간이 지난 이후 자동으로 주문중 수량에서 제외가 되야하기 때문입니다.주문(결제)도중 이탈율이 낮을 것으로 판단했지만, 실제로 서비스 지표추출시 두자",Python
https://surfit.io/link/3GPQg,VSCode의 Jupyter Extension을 사용하여 간단하게 Python으로 데이터 시각화하기,"간단하게 로컬에서 VSCode 내 Jupyter Extension으로 코드를 작성하고 바로 실행해 볼 수 있습니다.
여기서는 붓꽃 예제 데이터를 이용해서 Pandas로 데이터를 로딩하고 간단한 통계를 확인한 후 Seaborn으로 시각화해보도록 하겠습니다.
준비하기
Python 설치
Python을 설치하는 방법은 여러 가지가 있지만 전 데이터 분석을 위한 다",Python
https://surfit.io/link/31kkr,Django 3.2 릴리스와 주요 변경 사항,"이 글에서는 Django 3.2에 추가된 기능과 바뀐 점을 알아보려 합니다. Django 3.2 release notes를 참고하였습니다.
Django는 3년 마다 LTS를 위해 메이저 버전을 하나씩 올리고, 8개월마다 마이너 버전을 올립니다. 이번에 출시한 3.2는 3년간 지원되는 LTS 업데이트입니다.
Django 릴리스 사이클, 출처: https://",Python
https://surfit.io/link/5e4ZB,Django 3.2에 추가될 몇가지 기능,"Django(이하, 장고)가 3.2 버전으로 업데이트가 예정되어 있습니다. ORM에 적용될 몇가지 사항을 정리 하였습니다.

Covering Indexes(이하, 커버링 인덱스)를 사용할 수 있습니다. 커버링 인덱스의 주요 이점은 쿼리가 인덱스에 있는 필드만 사용할 때, 실제 테이블에 전혀 액세스하지 않아도 된다는 점 입니다. 당연히 데이터를 더 빨리 가져",Python
https://surfit.io/link/3jW1Y,파이썬은 얼마나 똑똑한가?,"제목만 보면 먼가 AI와 관련된 글 같지만 사실 이 글은 파이썬의 데이터 모델에 대한 철학에 대한 이야기입니다... (여기까지 속아서 들어왔으니 끝까지 읽어보시는 게 어떠실까요?..)
이 글에서 2개의 class를 정의하고 이를 통해서 파이썬이 얼마나 똑똑한지 증명해보려고 합니다.

아래와 같이 Foo 라는 class가 있고, 이 Foo라는 clsss는 _",Python
https://surfit.io/link/50MOo,"Python Ray 사용법 - Python 병렬처리, 분산처리",해당 글은 병렬처리에 초점을 맞춰 작성했습니다. 쿠버네티스를 활용한 Ray 분산처리 글은 추후에 업로드할 예정입니다 혹시 글에 이상한 부분이 있으면 언제든 말씀해주세요 :)Ray Github목차RayRay의 장점Ray 구성 요소Ray 사용법자주 사용하는 API 정리Ray Dashboard처음 사용하는 사람들을 위한 Tip딥러닝 프레임워크에서 활용하는 Ray,Python
https://surfit.io/link/w86R1,앱 내 Webview 개발기,"아자르에서는 빠르고 유연한 배포가 필요한 일부 기능에 대해 웹뷰를 활용하고 있습니다. 현재 서버는 Django Rest Framework, 프론트는 Next.js를 사용하여 개발하고 있습니다. 지금의 아키텍쳐로 정착하기 전까지 크게 3번의 변화를 거쳤는데요, 아키텍쳐를 변경하면서 배우고 느낀 점을 공유하고자 합니다.

1. Django + React (As",Python
https://surfit.io/link/p1Wxm,제목은 메리 크리스마스로 하겠습니다. 그런데 이제 프로그래밍을 곁들인,"가장 기억에 남은 것은 이전에 문제해결을 할 때와 회사에서 일을 시작하고 나서 문제 해결을 할 때 다른 시각을 가지게 되었다는 것인데요. 일반적으로 대회나 경시대회에서 문제해결에 사용된 코드들은 일회성 코드이고, 재사용되지 않는 경우가 많습니다. 그렇기 때문에 기존에 문제해결을 할 때에는 ‘좋은 코드’에 대한 생각을 거의 하지 않았습니다. 게다가 문제를 해",Python
https://surfit.io/link/Rvolk,Django Rest Framework API Document Generator (feat. drf-spectacular),"drf-yasg는 django rest framework API 문서 자동화 라이브러리로 가장 많은 선택을 받고 있지만 안타깝게도 OpenAPI 3.0을 지원하지 않으며, 이를 지원하려는 개선 작업또한 2018년 02월에 시작되었지만, 현재까지도 작업 진전이 미비하다. drf-yasg의 공식문서에서도 OpenAPI 3.0을 원한다면 drf-yasg가 아닌 ",Python
https://surfit.io/link/vRjb8,산전수전 10년차 개발자의 파이썬 입문 썰,"파이쏘닉 (Pythonic)“pythonic하지 않습니다.”위 문장은 막 링크드인에 파이썬 개발자라는 타이틀을 넣은 뒤, 코드를 짜고 받은 코드 리뷰입니다. 이렇게 철학적인 문장으로 지적을 받은 것은 “좀 더 OOP 스럽게 만들어주세요."" 이후로 처음입니다. “정선생님 아.. 이건 좀.. C스럽지 않네요."" 라던가 “우왓! 이 부분은 정말 Java스러운 게",Python
https://surfit.io/link/N76Lg,기획자가 파이썬 개발자가 된다면?,"""게을러서 파이썬을 배웠습니다.”이전 회사에서 기획 업무를 하면서 여러가지 데이터를 참고하고 수집해야 했는데 엑셀에 웹에 있는 데이터를 하나하나 복붙하다보니, 문득 ‘21세기에 사람이 이렇게 한땀 한땀 복사 붙여넣기를 해야 한다고? 말도 안돼!’ 라는 생각이 들었거든요. 처음에는 그 작업을 구글스프레드 시트의 importHtml 함수를 써서 했습니다. (그",Python
https://surfit.io/link/Q6ZBz,DB Concurrency 어디까지 알고 있니,"DB에 다수의 사용자가 동시에 접근하는 일은 비일비재하게 일어납니다. 동시성은 이런 상황에서 transaction이 순차적으로 실행되는 것이 아니라, 순서에 상관없이 동시에 실행되는 것을 의미합니다.이 동시성이 문제가 되는 상황을 봅시다.비행기 티켓팅을 한다고 생각해 봅시다.비행기에 자리가 하나 남은 상황.A와 B는 같은 비행기를 예매하려고 합니다.A, B",Python
https://surfit.io/link/Jlmn2,Django ORM only 기능,"django orm 은 디폴트로 해당 모델의 모든 컬럼을 불러옵니다.

하지만 only 기능을 사용한다면 필요한 항목만 불러올 수 있게 됩니다.

이는 불필요한 데이터를 불러오지 않게하여 컴퓨터 자원을 보다 효율적으로 사용할수 있습니다.

하지만 잘못 사용하면 lazy lading 에 의해 불필요한 쿼리를 발생시킵니다.

자세히 알아보겠습니다.

.


예",Python
https://surfit.io/link/zMRbj,Django Rest Framework API Document Generator (feat. drf-spectacular),"drf-yasg는 django rest framework API 문서 자동화 라이브러리로 가장 많은 선택을 받고 있지만 안타깝게도 OpenAPI 3.0을 지원하지 않으며, 이를 지원하려는 개선 작업또한 2018년 02월에 시작되었지만, 현재까지도 작업 진전이 미비하다. drf-yasg의 공식문서에서도 OpenAPI 3.0을 원한다면 drf-yasg가 아닌 ",Python
https://surfit.io/link/YAlPe,자바 개발자의 파이썬 적응기,"코드는 문법만 자바였고, 코딩 스타일과 관점은 모두 C와 유사했습니다. 자바의 특징은 어디에서도 찾아 볼 수 없었고, 안티 패턴들만 눈에 띠었습니다. (물론 안티 패턴 여부는 자바를 어느 정도 학습한 이후에 알 수 있었습니다.)언어 자체뿐만 아니라 자바의 생태계는 경이로웠습니다. socket 통신으로 end to end 통신만을 해왔던 저에게는 public",Python
https://surfit.io/link/3qv9V,AWS Elasticsearch + Python을  활용한 '검색' 도전기,"상품관리를 하는데 점점 상품수가 증가함에 따라 RDBMS + DynamoDB + Cache 만으론 상품검색시 성능 이슈가 있어 관계형 데이터베이스(RDBMS: mysql, oracle, mariadb)를 대신하여 검색엔진 Elasticsearch를 이용하면 좋을 것 같아 이번 글에서 상품관리 개선을 위한 AWS Elasticsearch Service 설정 ",Python
https://surfit.io/link/KyVWk,"Flask, marshmallow, apispec으로 API 문서화 자동화하기","스포카는 프론트엔드 프로그래머와 백엔드 프로그래머를 나누어 각자 전문화된
분야에서 개발할 수 있도록 바꾸어나가는 추세입니다. 이러한 변화를 바탕으로, 프론트엔드와
백엔드 프로그래머가 더 잘 소통할 수 있도록 좀 더 고도화된 API 문서가 필요하다고
생각하게 되었습니다.

저는 최근 웹 서버의 API 문서를 작성하는 작업을 하고 있습니다. 어떻게 하면 API",Python
https://surfit.io/link/wDjbA,"파이썬+AWS Lambda+AWS API Gateway 텔레그램 봇 개발, 배포까지",와이프가 운영하는 카카오톡 오픈톡방이 있었는데 1500명 정원이 모두 차버렸습니다. 그래서 방법이 없을까 고민하던 중 텔레그램 그룹에서는 20만명 까지 참여가 가능하다는 정보를 알게 되었습니다. 카톡에는 팬더Jr가 있어서 어느정도 공지사항 안내가 가능했는데 텔레그램에서는 더욱 커스터마이징이 가능한 API를 제공한다고 하여 직접 챗봇을 만들어보기로 했습니다.,Python
https://surfit.io/link/3XGab,같은 Django model class에서 다른 schema가?(feat. Django는 이중인격?),"Django Migration파일으로 table schema를 변경할 때 Default Value와 관련해서 주의 해야 할 사항이 있다
똑같은 Django model class의 정의지만 create table로 적용하냐 alter table로 적용하냐에 따라서 차이가 난다.
 이 부분을 정확히 이해를 못하고 column을 변경하거나 delete하면 큰 i",Python
https://surfit.io/link/3GGg8,TDD: 파이썬으로 AWS Mock 클래스 구현하기,"지난 글(파이썬 프로젝트에 AOP 도입하기)에서 소개했듯, 저희 브랜디 랩스(Brandi LABs)에서는 사내에서 사용할 파이썬 프레임워크의 개발이 한창 진행중입니다. 그동안 여러 번의 업데이트를 통해 많은 변화가 있었습니다.
이번 글에서는 그중 AWS Mock 클래스를 구현하게 된 과정을 공유하고자 합니다.





Mock?

모의 객체를 의미합니다. ",Python
https://surfit.io/link/3OlVn,파이썬 프로젝트에 AOP 도입하기,"브랜디 개발팀에서는 현재 운영 중인 여러 파이썬 프로젝트에 도입하게 될 사내 프레임워크의 개발을 진행하고 있습니다. 그리고 그 개선 업무를 저도 함께 담당하게 되었습니다. 프레임워크 개발이라니, 개발자로서 이보다 더 흥미로운 일이 있을까요! 여기서는 그 과정 중 일부인 ‘AOP를 제 입맛대로 도입하게 된’ 이야기를 공유하고자 합니다.

프레임워크는 AWS ",Python
https://surfit.io/link/w8vaN,실전! Python 실행 환경 설정하기,"이 글은 Linux 환경에서 Python으로 안정적인 서비스 애플리케이션을 제공하기 위해 사용할 환경을 마련하는 방안에 대해서 다룹니다. 
Python 런타임은 각 OS에서 사용되는 패키지 관리자나 인스톨러를 이용하여 잘 설치되어 있다고 가정하겠습니다. 그러나 실제로 Python을 이용한 서비스 환경을 구축하기 위해서는 좀 더 정교한 설정이 필요합니다. 
",Python
https://surfit.io/link/3N80z,파이썬 의존성 관리자 Poetry 사용기,"안녕하세요! 스포카 풀 스택 프로그래머 이강욱입니다.

여러분은 의존성 관리를 좋아하시나요? 의존성 관리자, Dependency Manager란
무엇일까요? 의존성 관리자 라는 단어가 생소하게 들리실 수 있지만, 여러분은
아마 이미 의존성 관리자를 사용하고 계실 겁니다. 패키지 관리자라는 단어가
더 익숙하실 수도 있습니다. pip, Yarn, npm, Ca",Python
