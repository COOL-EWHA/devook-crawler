url,title,description,category
https://surfit.io/link/KEPN9,당근마켓 iOS 프로젝트에 XcodeGen 도입하기,XcodeGen 은 Project Spec 에 따라 Xcode 프로젝트를 생성해주는 툴입니다. iOS 개발을 하게 되면 필연적으로 만나게 되는 문제가 있습니다. 바로 프로젝트 파일 충돌 문제입니다. Xcode 는 프로젝트 정보를 xcodeproj 라는 파일을 통해 관리합니다. xcodeproj 에서는 파일을 프로젝트에 넣을 때마다 파일의 UUID 가 달라지,iOS
https://surfit.io/link/LLPOq,React Native에서 iOS 빌드 퍼포먼스 최적화,"Android가 빌드 시간이 약 1분 30초인데 반해, iOS는 약 7분 정도 소요됐습니다. 이에 따라 iOS 빌드 개선이 필요했고, 결론적으로 일부 iOS 빌드 캐시를 이용하여 빌드 속도를 약 4.5배 개선했습니다. 저희가 어떻게 문제를 해결했는지 소개해보겠습니다.



기존 빌드 시스템의 가장 큰 문제는 cocoapods라고 하는 iOS 의존성 매니저의",iOS
https://surfit.io/link/6QelN,iOS 디바이스에서 body의 scroll을 막는 방법 (How to prevent body scrolling on iOS?),"보통 팝업창 내에 컨텐츠가 길어서 스크롤이 있는 경우에는
팝업 내부에만 스크롤이 잘 되게 하기 위해서 Dim 영역 뒤에 있는 body의 scroll은 막는 경우가 많다.

그리고 웹에서는 scroll 막는 것도 쉽게 처리할 수 있다.
바로 팝업이 떴을 때 body 태그에 overflow: hidden을 걸어줘서 scroll을 못하게끔 막아버리는 방법이다.
",iOS
https://surfit.io/link/Q6aM0,[Flutter] 그라데이션으로 만들어보는 광원 효과,"BoxDecoration 위젯 안에는 gradient라는 파라미터가 있고, 조명의 효과를 내기 위해서는 원형 그라데이션인 RadialGradient를 사용한다.
RadialGradient
다른 gradient와 마찬가지로 그라데이션 색상을 선언해야 한다. 
RadialGradient(
  colors: gradientColors,
  stops: color",iOS
https://surfit.io/link/JlGvV,How to use FlexLayout effectively & Sunsetting Texture(AsyncDisplayKit),SwiftUI/Jetpack compose/Flutter 와 같이 선언형으로 UI를 개발하고 Flex에 대한 개념이 어느정도 네이티브 생태계에 퍼진거 같아 매우 기쁘지 않을 수가 없다.초창기 Frame계산을 해서 Layout을 배치하기 시작해서 constraints와 layout margin을 활용하거나 Storyboard/Xib상에서 UI를 배치하는 것에,iOS
https://surfit.io/link/ML8xz,RxSwift를 이용한 공통 UITextField 리팩토링,"RxSwift에서 제공하는 UITextField.rx.text는

controlPropertyWithDefaultEvents 이벤트가 발생할 때 방출되기 때문에

.editingChanged 이벤트 + 최초 초기화 1회 + 포커싱 + 언포커싱 될 때 모두 방출됩니다.

이는 우리의 CMTextField에 맞지 않기 때문에 controlPropertyWith",iOS
https://surfit.io/link/KEdZm,모듈화하고 Needle 적용해보기,"소프트웨어 엔지니어링에서 의존성 주입은 하나의 객체가 다른 객체의 의존성을 제공하는 테크닉이다. “의존성”은 예를 들어 서비스로 사용할 수 있는 객체이다. 클라이언트가 어떤 서비스를 사용할 것인지 지정하는 대신, 클라이언트에게 무슨 서비스를 사용할 것인지를 말해주는 것이다뭔가 굉장히 정직하게 꼬아서 교과서적으로 적어봤는데, 쉽게 비유하자면 자전거가 있는데 ",iOS
https://surfit.io/link/Z8baD,지식iN 앱을 Flutter로 개발하는 이유,"모바일 앱의 플랫폼이 iOS와 Android 두 개로 나누어져 있어 기획 단계에서는 스펙 논의가 같이 진행되어도 디자인 단계 이후부터는 다음 그림처럼 진행 과정이 나누어지게 된다.



그림 1 모바일 플랫폼에 따라 나누어지는 앱 개발 과정

디자인 단계에서는 플랫폼에 맞춰 UI와 UX가 수정되기도 한다. 동일한 UI를 제공하려 해도 iOS와 Android",iOS
https://surfit.io/link/p11Od,Swift Concurrency에 대해서,"동시성 프로그래밍은 많은 수의 코어를 효율적으로 활용하는 데 도움을 줍니다. 해당 시점에서 사용 가능한 코어를 하나 이상 사용해서 처리 속도를 높이거나, 중요하지 않은 작업을 중요도가 낮은 스레드에서 실행시키는 이점을 얻습니다. iPhone 12의 경우 6개의 코어를 가지고 있는데요. 이와 같이 코어 수가 늘어남에 따라 동시성 프로그래밍을 잘 이해하고 그 ",iOS
https://surfit.io/link/Jll9L,iOS15 대응기(feat. 크로스 브라우징),"2021년 9월 20일에 iOS15가 업데이트 되었습니다. 이번 릴리즈에는 Safari 브라우저에서 아주 큰 변화가 있었어요. 바로 브라우저 내의 주소창이 아래로 이동이 되었다는점!

채널톡은 위처럼 고객이 메시지를 입력할 수 있는 입력란이 하단에 있어요. 항상 고객에게 최고의 채팅경험을 제공하기 위해 끊임없이 고민하는 채널팀에게는 키보드를 열었을때 입력창",iOS
https://surfit.io/link/WkkEy,비주얼 타이머 앱 개발하며 배운 것들,초기에 고려하지 않은 탓에 큰 작업이 되었던 분할 화면처음에는 공통으로 사용하는 컴포넌트를 만들어서 다른 프로젝트를 하게 되더라도 활용할 수 있도록 계획을 세웠다. 설정 저장/불러오기나 국제화 지원과 같이 전역에서 사용되는 라이브러리는 큰 문제 없이 계획한 방식대로 만들 수 있었다. 다만 생각처럼 되지 않은 부분은 표현 컴포넌트였다. RN에서 기본적인 컴포,iOS
https://surfit.io/link/zMRmr,Cocoapods-Binary-Cache 와 함께 버저닝된 Prebuilt Pod 캐시 운영하기,캐싱을 할 때 각 개발자 머신/빌드 머신 환경에 맞춰 잘 분리된 캐시를 효율적으로 관리하는 방법을 소개하려고 합니다.Cocoapods-Binary-Cache 에 대해선 레포 README 도 잘 되어 있고 이미 여러 글이 있어서 이번 글에서는 캐시 운영 부분에 조금 더 집중하려고 합니다.프로젝트 규모가 커져갈수록 빌드 속도는 느려져만 갑니다. 일정 규모를 넘,iOS
https://surfit.io/link/8qmJN,Swift 타입 시스템 탐험기,"Swift에서는 제네릭스(generics)를 이용해서 유연하게 재사용 가능한 코드를 작성할 수 있습니다. 제네릭스는 Swift를 사용하다 보면 끊임없이 만나게 되는데요. Array, Dictionary를 포함해 표준 라이브러리의 수많은 API가 제네릭스로 구현되어 있기 때문입니다. Swift 제네릭스는 널리 쓰이면서 해마다 진화해 왔습니다. 또한 앞으로도 ",iOS
https://surfit.io/link/3A0Xg,SwiftUI에서 Lottie 사용하기,"Lottie처럼 기존에 UIKit에서 사용했던 뷰를 Swift UI에서 사용하기 위해서는 UIViewRepresentable 가 필요합니다. UIViewRepresentable를 구현하는 과정은 크게 4가지로 이루어져 있습니다.
UIViewRepresentable를 상속하는 구조체 만들기
전달받을 데이터 구성하기
뷰가 맨 처음 생성될 때의 뷰를 정의하기 =",iOS
https://surfit.io/link/wV09p,RIBs에 ReactorKit 도입하기,"기존 사용하고 있는 RIBs 아키텍처에 ReactorKit를 도입하게 된 이야기를 해보려고 합니다. RIBs X ReactorKitReactorKit를 도입을 검토할 당시 iOS팀의 구성원은 5명으로 각자 다른 TF에 소속되어 TF내에서 진행하는 iOS 개발 업무를 담당하고 있었습니다. RIBs를 기반으로 앱을 개발하면서 전체적인 구조는 통일되어 있었지만,",iOS
https://surfit.io/link/50dyW,Clean Swift Scaffold,"화면에 필요한 객체준비하는게 몹시 귀찮았던 iOS개발자의 go활용기. 비록 iOS개발자이지만 파도가 밀려오면 이 때 파도를 타고 노를 저어야겠다는?직감을 가지고 당근에 있는 고퍼분들이 작성한 코드를 흩어보면서 수 개월동안 golang을 기반으로 이런저런것들을 만들어 보기 시작했고, 결국 주로 다루던 Swift몹지 않게 나름? 생각한 것들을 뚝딱뚝딱만들어 내",iOS
https://surfit.io/link/KQdXo,왜 Vim이 Xcode 에 들어왔을까?,"옛날 옛적 CLI환경에서 쓰이던 편집기를 왜 이제와서 다시 Xcode에 집어넣게 된 것일까요? 그 이유를 알려면 VI의 이름을 다시 한 번 뜯어봐야 합니다. VI는 엄밀히 말하면 Interface 입니다. 즉 구체적인 편집기를 말한다기 보다는, 그 편집기가 지원해야 할 기능의 명세라고도 할 수 있습니다. 즉 어떤 편집기도 VI를 지원 할 수 있으며, 실제로",iOS
https://surfit.io/link/w6l6E,네이티브 개발자와 함께하는 피드 서비스 설계하기,"피드는 UITableView기반으로 cell size를 계산해서 캐싱 및 Kingfisher를 이용하여 이미지를 fetching해오는 방식으로 구성되어있었고, cell size 계산처리나 UI복잡도가 높은 편은 아니라서 유저들이 사용하는데는 불편함은 없었을거에요.하지만, 당근마켓에서의 피드는 중고거래 뿐만 아니라 다양한 서비스들을 제공하고 담아가야하는게 목",iOS
https://surfit.io/link/5lXaW,[Mastering SwiftUI] 단축키 정리,"Preview 에서 cmd 를 누른채로 View를 터치: Action Menu가 나옴


shift + cmd + L: show library


Cmd 누른 채로 View 클릭: Action Menu가 뜸
View에 커서를 둔 채로 shift + cmd + A: Action Menu가 뜸


option + cmd + P: Preview Resume
  ",iOS
https://surfit.io/link/5zZ81,iOS 지원 디바이스 모델 별 상세 해상도 및 관련 정보 확인이 가능한 : Screen Sizes,"화면 해상도는 서비스를 만들고 디자인하는데 중요한 기준이 됩니다. 최소, 최대 해상도를 결정하는 정보가 되기도 하고, 가로/세로 모드를 고려할 때 필요하기도 하고요. 문제는 이런 정보를 같은 OS 활용하는 디바이스 별 확인하고 정리하는게 어렵다는 점인데요. 제조사나 OS 개발사에서 상세 정보를 주지만 날 것(?)에 가까워 저도 해외 블로그 등을 통해 추가된",iOS
https://surfit.io/link/wZolk,iOS Sign In with Apple 적용하기,"애플은 2019년 애플 로그인 기능을 발표했습니다. 동시에 앱 내에 다른 소셜 로그인 서비스를 사용하고 있다면 반드시! 애플 로그인을 제공해야 한다는 심사지침도 함께 내놓았습니다.

브랜디는 당시 이미 구글과 페이스북 로그인을 제공하고 있어서 애플 로그인을 필수로 적용해야 하는 상황에 마주했고, 20년 4월에 애플 로그인을 적용한 후 출시하였습니다.

이번",iOS
https://surfit.io/link/3qjEj,Swift 기본 문법 정리(1) 🧾 - Swift를 알아보자,"Swift 기본 문법 정리(1) 🧾

전수열님의 GitBook을 기반으로 정리합니다.

변수와 상수
Swift에서는 변수(variable)를 var, 상수(constant)를 let로 사용하고 있습니다.
Swift는 언제 어디서 값이 바뀔지 모르는 변수보다는 상수를 사용하는 것을 권장합니다.
var name = ""Hwang Hyun""
let birthyea",iOS
https://surfit.io/link/5z0oO,싱글톤(Singleton) 패턴을 알아보자!,"iOS 공부를 시작하며 싱글톤(singleton) 패턴이라는 단어를 자주 지나쳤던 것 같습니다. 꼭 알아야하는 개념이라고 생각되어 정리합니다. 😇
 
 
 
 
 
 
  싱글톤 패턴이란?
 
  생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나라는 의미입니다. 이게 어떻게 가능하냐면 최초에 객체를 고정된 메모리 영역에 할당(Static)하고 그",iOS
https://surfit.io/link/3qRGv,접근성 지원 != 시각장애인 대응,"모바일 앱에서 접근성을 지원한다고 했을 때, 많은 분들이 시각장애인 지원을 가장 먼저 떠올립니다. 이는 자연스러운 일이라고 생각해요. 하지만 주의를 기울이지 않으면 아주 쉽게 “접근성 지원 == 시각 장애인 지원”이라는 등식이 머리에 새겨지는 경우도 있는 것 같습니다. 하지만 사실은 결코 그렇지 않습니다. 접근성을 고려해 앱을 만드는 일은 시각장애인 뿐만이",iOS
https://surfit.io/link/3B4Nj,"쉽지만 어려운 WebView! 이젠 그만, 쉽기로 하자!","Unity 개발자들의 한줄기 빛이 되리라!
Unity 개발자들은 일이 너무 많습니다. 게임만 잘 만들면 될 줄 알았는데.플랫폼 연동(인증, 결제, 푸시), 다양한 언어 학습, 그리고 WebView 연동 등. 게임 개발 외에 해야 할 일이 너무 많습니다.

사례를 하나 들어 보겠습니다.게임을 좋아해서 게임 개발사에 입사한 김모씨.
대박 게임을 만들겠다는 마음",iOS
https://surfit.io/link/3NE9o,Flutter vs Native vs React 성능,"오늘날 모바일 앱을 구축하는 가장 인기있는 솔루션은 React Native 또는 Flutter를 사용하는 네이티브 또는 크로스 플랫폼 방식입니다. 

 네이티브 개발은 AAA 기술 솔루션으로 자리 잡고 있지만, 크로스 플랫폼 앱이 출시 될 시장 공간을 창출하는 데는 몇 가지 단점이 있습니다. 일반적으로 네이티브 개발에는 프로젝트를 완수하기 위해 개발 팀의 ",iOS
https://surfit.io/link/KPOnB,Xcode에서 Build Setting 제대로 관리하기,"Build Setting은 아주 중요하고 민감한 값입니다. 이 값들을 어떻게 설정하느냐에 따라 생산성에 큰 차이가 생길 수도 있고, 심지어는 알 수 없는 런타임 오류가 발생 할 수도 있습니다.



따라서 프로젝트에서 Build Setting을 변경 할 때에는, 그럴만한 충분한 이유가 있어야 하고, 그 이유와 맥락이 팀 전체에 공유가 잘 되어야 합니다.

",iOS
https://surfit.io/link/KEk4q,iOS Networking and Testing,"Why Networking?

Networking은 요즘 앱에서 거의 필수적인 요소입니다.
설치되어 있는 앱들 중에 네트워킹을 사용하지 않는 앱은 거의 없을 겁니다.
API 추가가 쉽고 변경이 용이한 네트워킹 모듈을 개발하는것이 중요한 이유죠.

Why Testing?

미드 &lt;빅뱅이론&gt; 보셨나요?  
쉘든 쿠퍼 라는 주인공은 16살에 박사학위를",iOS
https://surfit.io/link/wkZQX,iOS App with Kotlin Native,"지원 목록 중에 눈에 띄는 iOS에 대하여 Kotlin으로 어느 정도까지 iOS App 개발이 가능하며, 어떤 방식으로 개발이 가능 한지 알아보기 위해, 아래 공식 문서에서 제공하는 샘플을 먼저 살펴 보았습니다.



Kotlin Native

멀티 플랫폼은 아직은  Alpha 버전이어서 자주 바뀔 수 있음을 경고하고 있습니다.",iOS
https://surfit.io/link/w4Jpv,iOS 13에서 다크 모드 적용하기,"올해 WWDC19 이벤트에 흥미진진한 발표 중의 하나가 iOS 13을 사용하는 기기에서 다크 모드를 사용할 수 있다는 내용이었습니다. 시스템 전체적으로 다크 모드를 사용할 수 있으며, 앱에서 해당 모드를 지원하게 되면 앱에서 어두운 테마의 모습으로 나타납니다.

[그림1] iOS 13에서의 일반 모드와 다크 모드의 설정 앱 화면

iOS 13에서 다크 모드",iOS
https://surfit.io/link/KQvre,Swift enum을 이용해서 사소하게 코드를 개선해보자,"1~2명에서 운영하던 프로젝트가 시간이 지날수록 점점 커지고, 3명 이상 같이 협업하게 되면서 방대한 양의 코드가 계속 쌓이게 됩니다. 빠른 개발로 인해 각 기능을 각자 구현하다 보면 다른 개발자가 코드를 바로 이해하기에 시간이 걸릴 수 있고, 때로는 레거시 코드로 인해 구현하다가 발목이 잡히게 될 수도 있습니다.

이런 문제를 해결하고자 작년부터 레거시 ",iOS
https://surfit.io/link/3L079,SwiftGen으로 알아보는 선언형 프로그래밍,"Swift의 Image Literal이나 Color Literal에 대해 아시나요?

지금 다니고 있는 회사는 리소스(이미지, 컬러)를 에셋 카탈로그(xcasset)로 관리하고 Image Literal나 Color Literal을 통해 리소스를 간접적으로 접근해서 사용하고 있습니다.

그런데 얼마 전부터 알 수 없는 이유로 리터럴이 제대로 작동하지 않는 것",iOS
https://surfit.io/link/wkeP1,우리가 모노레포 대신 서브모듈을 선택한 이유,"저희는 의존성 관리를 위해 Carthage(+Rome+Carting)을 사용하고 있습니다. 물론 새로운 모듈도 예외없이 Carthage로 관리하고 있었습니다.

그러나 프로젝트와 모듈이 점점 늘어나다보니 문제가 생겼습니다.

프로젝트 A에서 새로운 버튼인 AButton을 만들었다고 해보겠습니다.
AButton을 너무 잘 만들어서 프로젝트 B에서도 사용하고 ",iOS
https://surfit.io/link/w8AZn,알아두면 쓸모 있는 Swift의 기능들,"Swift는 C와 Objective-C와의 연동은 뛰어나지만 JS, Python 과 같은 dynamic 언어들과는 상대적으로 떨어집니다. 그 이유들로 추가되고 있는 기능들이 있습니다. KeyPath, dynamicMemberLookup 등 Swift의 dynamic 한 기능들을 살펴보고 언제 사용할 수 있을지 고찰해 보려고 합니다. 추가로 property ",iOS
https://surfit.io/link/KRkn7,SwiftUI의 방식으로 UIKit코드를 짜는 방법: Layout Driven UI,"UI개발에서 가장 어려운 부분: 데이터 의존성 관리
가장 빈번하면서도 크리티컬한 UI버그는, UI가 “최신 상태”의 데이터를 제대로 표현하지 못하는 현상일 것입니다. 네트워크에서 로딩이 끝난 후에도 로딩인디케이터가 계속 돌아가고 있다던지, 좋아요를 눌렀는데 좋아요 숫자가 올라가지 않는다던지, 메시지를 다 읽었는데도 “메시지 안 읽음” 표시가 남아있다던지… ",iOS
https://surfit.io/link/3XjPA,Bazel로 LINE의 iOS 앱 빌드 속도를 2배 빠르게! - LINE ENGINEERING,"최근 몇 년 동안 LINE 앱의 iOS 소스 트리는 지속적으로 성장해 수백 개의 모듈로 늘어났습니다. iOS 버전의 소스 코드는 2019년 말 기준으로 140만 줄을 넘어섰으며, 이러한 증가세는 멈출 기미가 보이지 않습니다. 그 결과 LINE iOS 버전의 빌드 시간이 크게 증가했습니다. 또한 프로젝트의 규모가 커지면서 로컬 환경에서는 문제 없이 실행되는 ",iOS
https://surfit.io/link/w88No,Thiiing(띠잉) iOS 앱 개발기,"안녕하세요. 저는 영상 기반 소셜 서비스인 Thiiing(띠잉) iOS 앱을 개발하고 있는 박태현입니다.
2019년 12월 띠잉셀에 합류하여 약 3개월 동안 개발하여 신규 서비스 Thiiing(띠잉) 앱을 출시하였는데요,
프로젝트 세팅부터 출시까지 앱 출시에 필요한 모든 것을 간략하게 공유하려고 합니다.

앱 출시를 하기 위해서는 다음과 같은 항목들을 고려",iOS
https://surfit.io/link/3BRG9,모바일 UI 테스트 자동화 구축하기,"안녕하세요. 드라마앤컴퍼니의 곽수민입니다.
지난 포스팅에 이어서 모바일에서 UI 테스트 자동화를 실행하기 위한 Setting 방법과 실제 디바이스에 설치되어 있는 제품과의 연결을 시도해보려고 합니다.

개발환경 Setting
기본적으로 자동화 시스템을 구축하는 것도 실제 개발하는 것과 환경이 크게 차이가 없습니다. 제가 사용하고 있는 MAC OS 기준으로 ",iOS
https://surfit.io/link/3GZXP,Swift 초보자를 위한 15가지패턴,"스위프트나 IOS에 익숙하지 않으신분들이라면 조금 도움이될만한 내용같아 원작자의 허락을맡고 내용을 번역하였습니다. 다소 의역이 섞여있어도 양해부탁드립니다.😓😓😓


현재 제가 IOS 애플리케이션을 개발하며 사용하는 몇몇 팁과 요령을 정리하였습니다. 여러분도 아래 내용에서 유용한 내용들을 찾아가셨으면 좋겠습니다.


아래 2번은 옵셔널을 언래핑하고 nil값일",iOS
https://surfit.io/link/37xWQ,모바일 UI 테스트 자동화 구축하기 – DRAMA&COMPANY,"안녕하세요. 드라마앤컴퍼니의 곽수민입니다.
지난 포스팅에 이어서 모바일에서 UI 테스트 자동화를 실행하기 위한 Setting 방법과 실제 디바이스에 설치되어 있는 제품과의 연결을 시도해보려고 합니다.
개발환경 Setting
기본적으로 자동화 시스템을 구축하는 것도 실제 개발하는 것과 환경이 크게 차이가 없습니다. 제가 사용하고 있는 MAC OS 기준으로 환",iOS
https://surfit.io/link/3BzP0,SwiftLint와 Git Hook을 이용해서 코딩 스타일 관리하기,"안녕하세요. 우아한형제들 앱서비스팀에서 iOS 앱을 만들고 있는 김민호입니다. 이번에 저희 팀에서 코딩 스타일을 맞추기 위해 Git Hook을 적용한 경험을 공유드리려고 합니다.


iOS 앱을 만들고 있는 많은 팀에서 코딩 스타일을 관리하기 위해 SwiftLint를 도입해서 사용하고 있는데요. 저희 팀 역시 SwiftLint를 이용하고 있지만 엄격하게 적",iOS
