url,title,description,category
https://surfit.io/link/LLj2W,REST Client - VS Code 에서 경험하는 가벼운 REST API 문서화와 테스트,"REST Client 는 VS Code 의 확장 프로그램으로 Postman 과 같은 외부 API 테스팅 프로그램을 사용하지 않고도, 간단한 파일을 작성하여 VS Code 내부에서 API 테스트를 할 수 있는 기능을 제공한다. 또한 Swagger 와 같은 복잡한 API 문서화 프레임워크를 사용하지 않고도, 쉽게 API를 문서화할 수 있다.
Swagger 등으",웹 개발
https://surfit.io/link/DAXzv,멈춰! 버그 멈춰! E2E 테스트로 버그 멈추기 Feat. Playwright,"변경한 코드가 예상치 못한 부분에서 문제를 일으킬 수 있는데, 코드베이스가 커지면 이런 문제는 더 자주 발생하고, 예측하기도 더 어렵습니다. 때문에 QA에서는, “기존 기능들이 문제없이 동작하는지”, “예전에 있었던 이슈가 다시 발생하지는 않는지”를 확인하는 회귀 테스트(Regression Test)를 주기적으로 진행하게 됩니다.
이 단계에서 발견된 버그는",웹 개발
https://surfit.io/link/N7Agv,검색 엔진 최적화(SEO) 개념적 이해,"검색 엔진 최적화는 프로덕트에서 굉장히 큰 역할을 한다고 생각합니다.
마케팅을 통해 사용자들을 유입시킬 수도 있지만, SEO를 잘 해놓으면 값을 지불하지 않고도 사용자들을 유입시킬 수 있습니다. 공짜 마케팅 역할을 할 수 있으니, 우리의 타켓 사용자들의 키워드들을 잘 파악하여 해당 키워드를 검색했을 때 우리의 프로덕트가 노출될 수 있도록 하는 것이 좋습니다",웹 개발
https://surfit.io/link/EmLmm,브라우저싱크 Error: ENOSPC: System limit for number of file watchers reached 에러 대처,"브라우저싱크는 파일이 변경되는지를 감시하고 있다가 파일 변경이 감지되면 브라우저를 새로고침하는 역할을 하는데, 감시할 파일이 너무 많아서 뻗어 버린 것이다.

단순한 해결책

이 에러로 검색을 해 보면 아래 명령으로 파일 감시 숫자를 최대치까지 키워 해결하라고 한다.

echo fs.inotify.max_user_watches=524288 | sudo te",웹 개발
https://surfit.io/link/rMqz0,DOM은 다들 어떤식으로 공부하셨나요?,"웹 개발 초창기에는 DOM은 그렇게 썩 훌륭하지 않았습니다. 그러기에 javascript를 사용하다보면 자연스럽게(?) DOM에게 불만을 토하며 이걸 어떻게 쓰라는 거지? 하며 씩씩거리며 찾아 보게 되면서 이론보다는 몸으로(?) 익히게 되는 그러한 개념이었습니다. 
이러한 불편함을 여러 개발자들이 개선을 해오며 jQuery가 나오고 또 React가 나오면서",웹 개발
https://surfit.io/link/JlPMX,그림으로 쉽게 보는 HTTP 변천사,"WWW, 웹이 탄생한 1989년부터 시작해 오늘날에 이르기까지 많은 시도와 변화가 있었죠.그래서 이번 포스팅에선 이런 HTTP에 대해 한 단계 더 깊게 들어가 초창기엔 어떤 모습이었고, 어떤 단계를 거쳐 지금에 이르렀는지 그 일대기를 간략하고 실속 있게 담아봤습니다.태초에 HTTP가 있었으니가장 초기, 그러니까 WWW(World Wide Web)이 만들어지",웹 개발
https://surfit.io/link/rMq1b,사용자 경험과 성능 개선 방법 in 카카오웹툰,"서비스의 사용자 경험은 매우 중요합니다. 사용자 경험은 전환율이나 서비스의 지속적인 사용과도 밀접하게 관련이 있고, 나아가서는 매출에도 영향을 미치기 때문입니다. 그리고 사용자 경험에서 성능은 기본적이면서도 매우 중요한 부분을 차지하고 있습니다.
예를 들어 핀터레스트는 페이지 로드 시간을 40% 감소시켜서 검색엔진을 통해 유입된 트래픽 및 가입자 전환율이 ",웹 개발
https://surfit.io/link/9RVnB,indexedDB에 대해 알아보자!,"indexedDB는 많은 양의 구조화된 데이터를 저장할 때 유용하다. localStoage와 달리, JS가 인식할 수 있는 자료형과 객체를 저장할 수 있다.: 키, 값 형태로 데이터가 저장되며 문자열 타입이 아니어도 된다.: 특이한 점은 비동기적으로 작동한다는 점이다.

(2) indexedDB 패턴

❓ indexedDB는 localStoage보다 절차가",웹 개발
https://surfit.io/link/qyWg2,리액트(React) CORS 해결하기 (feat. 프록시(Proxy) 구축),"일반적으로 브라우저는 보안 문제로 인해 동일 출처 정책(SOP, Same Origin Policy)을 따릅니다. 
두 URL의 프로토콜, 호스트, 포트가 모두 같아야 동일한 출처로 볼 수 있는데, 
예를 들어 a-service.com 호스트에게 받은 페이지에서 b-service.com 호스트로 데이터를 요청할 수 없습니다. 
출처가 다른 호스트로 데이터를 ",웹 개발
https://surfit.io/link/p1DRL,Rollup.js - 플러그인으로 완성도를 높이다,"rollup 에 날개를 달아줄 플러그인들을 살펴보고 나아가 요즘 핫한 typescript 까지 적용해보도록 하겠습니다.

들어가기 전에
사실 이전에 구성했던 프로젝트가 번들링이 잘 되고는 있었지만, 빌드 시에 경고 메세지가 출력되고 있었습니다.
$ yarn build

(!) Unresolved dependencies
https://rollupjs.org/",웹 개발
https://surfit.io/link/GAOa2,[ETC] HTTP 톺아보기,"HTTP, HyperText Transfer Protocol은 인터넷에서 하이퍼텍스트(HyperText)를 전송(Transfer)하기 위한 통신 규약(Protocol)입니다. 이번 포스트에서 HTTP가 무엇인지 살펴보도록 하겠습니다.HTTP는 W3(World Wide Web)에서 정보를 주고 받을 수 있는 프로토콜로, 클라이언트와 서버 사이에 이루어지는 요",웹 개발
https://surfit.io/link/Xe41k,마이리얼트립 웹사이트 성능 측정 및 최적화 Part 2. 렌더링,"렌더링: 컴퓨터 프로그램을 사용하여 모델로부터 영상을 만들어내는 과정렌더링의 정의를 웹사이트에 대입하면 브라우저가 HTML 문서로부터 사용자가 인지하고 상호작용할 수 있는 화면을 만들어내는 과정이 됩니다.CSS는 시각을 통해 화면의 구조를 인지할 수 있도록 돕습니다. UI 요소의 위치와 여백, 크기, 색상 등을 지정합니다. 그리고 상호작용은 버튼을 누르거나",웹 개발
https://surfit.io/link/Bljmp,마이리얼트립 웹사이트 성능 측정 및 최적화 Part 1. 리소스 로딩,네트워크 대역폭 제한네트워크 탭에서 옵션을 선택해 원하는 속도로 시뮬레이션할 수 있습니다. 성능 측정 시 Fast 3G를 기준으로 진행했습니다.2. 캐시 비활성화Disable cache 옵션으로 리소스 캐시를 비활성화해 웹사이트 첫 방문과 동일한 환경을 유지할 수 있습니다.3. 타임라인 측정네트워크 탭에서는 시간의 흐름에 따른 리소스 로딩 정보를 분석할 수,웹 개발
https://surfit.io/link/9R4vJ,C++ 코드를 웹으로 포팅하는 Emscripten 알아보기 (feat. WebGL),"내가 작성한 C++ 코드를 손쉽게 웹으로 포팅할 수 있다...?
라는 말은 거짓말 같아 보이는데 여기 진짜 쉽게 할 수 있는 엄청난 프로젝트가 있습니다!
바로 Emscripten이라고 하는 프로젝트입니다!
emscripten은 LLVM 기반으로 돌아갑니다.
여기서 LLVM은 이미 안드로이드 ndk를 다루신 분들이라면 익숙하실텐데요.
더욱 다양한 아키텍쳐 환",웹 개발
https://surfit.io/link/Jlr9V,"Rollup.js - 번들링, 파일을 하나로 합쳐보자","번들링은, 파일을 하나로 묶는 것을 말합니다.
그럼 왜 굳이 파일을 하나로 묶어야 할까요? 바로 HTTP 통신의 특성 때문입니다.

단발성으로 리소스를 요청하는 HTTP 특성상, 요청할 파일이 많으면 그만큼 요청을 많이 보내야해서 비효율적입니다. 그래서 번들링해서 파일을 하나로 묶으면 요청 횟수가 적어지니 효율적이겠죠.
그만큼 프론트엔드에서 번들링은 정말 ",웹 개발
https://surfit.io/link/Z8ZlD,linear-gradient 속성에 transition 적용하기,"CSS linear-gradient 속성은 기본적으로 백그라운드 컬러를 지정하기 위한 속성이다. 시작점, 종료점에 지정할 2개의 색상이 기본적으로 필요하며 중간 지점에 들어갈 컬러는 더 많이 추가할 수도 있다. 색이 변화하는 각도도 지정할 수 있는데, 예를 들어 to left 값은 좌에서 우로 컬러가 변화한다. 
background-image: linear",웹 개발
https://surfit.io/link/xr1mP,평생 무료인 모니터링 도구 10분만에 만들기,"서버를 운영하다보면 예상치 못한 서버 다운이나 응답 속도 저하를 반드시 겪게 됩니다. 원인은 둘째 치구요. 근데 문제는 서버 장애를 원천 차단할 방법이 사실상 없기 때문에, 우리 개발자들이 24시간 눈을 뜨고 지켜볼 수 밖에 없겠습니다.


울지 마시구요.. 그래도 개발자들은 어떻게든 (반)자동화를 하며 버텨온 사람들입니다.
근데 정말 슬프게도 서버 장애를",웹 개발
https://surfit.io/link/P1mAN,HTML이 당신의 생각보다 더 중요한 이유,"HTML 코드 대충 작성해도 지금 화면에 원하는 대로 잘만 나오는데 왜 신경 쓰나요?
저는 프론트엔드 개발자가 되고 싶은데 HTML은 퍼블리셔가 하는 일 아닌가요?
<div> 쓰면 다 해결되지 않나요?
어떤 이유로든 위와 같은 생각을 가지고 있을수 있지만, HTML은 당신의 생각보다 더 중요합니다. 왜냐하면 더 많은 사람이 제대로 렌더링 보이는 웹 사이트를",웹 개발
https://surfit.io/link/VDA04,CSS 역사로 알아보는 CSS가 어려워진 이유,"CSS는 지난 20여간 꾸준히 발전해왔습니다. 그 과정에서 여러 가지 시행착오를 겪었지만 한번 만들어진 스펙은 되돌릴수가 없죠. 그 시행착오의 결과물을 지금 현재 우리가 쓰고 있습니다.
처음에 의도는 좋게 설계를 했지만 웹 산업이 너무 급격하게 발전을 하면서 이미 만들어져 있는 스펙이 못 따라오거나 설계가 못 따라오는 시기가 존재하고 그 안에서 어떻게든 방",웹 개발
https://surfit.io/link/glr4L,드래그로 회전 가능한 정육면체 만들기,"JS와 CSS를 사용하여 기존에 만들던 것과는 다른 무언가를 만들어보고 싶었다. 3d로 무언가를 구현해보면 좋겠다는 생각이 들었는데, 처음엔 구체를 만들어볼까 했으나 표면이 꽉 채워진 구체는 현실적으로 구현하기가 어려울 것 같아서 무난하고 전체적으로 균형잡힌 정육면체를 제작해보기 했다.
1. 정육면체 구현
https://codepen.io/RAREBEEF/",웹 개발
https://surfit.io/link/WkBar,Tailwind CSS의 설치와 활용,"Tailwind CSS는 유틸리티 퍼스트(Utility-first)를 지향하는 CSS 프레임워크다. CSS를 작성하는 방법론 중 하나인 BEM은 마크업을 컴포넌트 단위로 구분하고 상태에 따라 스타일을 변경하는 식으로 재활용할 수 있도록 한다.
&lt;button className=""button button--success""&gt;
	&lt;span clas",웹 개발
https://surfit.io/link/glrVJ,스토리북으로 인터랙션 테스트하기,"다양한 환경에서 사용자의 인터랙션(Interaction, 상호작용)에 따라 기대하던 대로 반응하는지 테스트하는 것은 어렵다. 그 이유로 보통 아래 두 가지 문제가 있다.
브라우저, OS, 네트워크 등 다양한 환경적 변수에 따라 다른 결과물이 나올 수 있다. 다행히도 요즘 많이 사용되는 브라우저만 대응하여 개발한다면 몹시 어려운 문제는 아니다.
사용자의 인터",웹 개발
https://surfit.io/link/WkaaQ,Svelte Rxjs Vite AdorableCSS,"기존의 프레임워크들을 javascript의 라이브러리 형태를 하고 있기 때문에 javascript의 문법과 함수를 기본적으로 사용하고 있습니다. 그래서 hook이라던가 reactive나 class와 같은 javascript 체계안에서의 boilerplate가 존재하게 됩니다. 이러한 부분들이 프레임워크를 배우는데 러닝커브를 만드는 원인이 됩니다. 
하지만 ",웹 개발
https://surfit.io/link/N7L28,"Canvas, Web Audio API를 사용한 오디오 파형 시각화","오디오 파형(waveform)은 오디오, 영상 편집 툴 및 일부 오디오 플레이어에서 접할 수 있다. 업무에서 개발한 앱에서 오디오 재생 기능이 필요하여 wavesurfer.js를 사용하고 있었다. 그런데 Safari 브라우저에서 알 수 없는 버그로 인해 기능을 하지 않았고, 커스터마이징 지원을 위해 플러그인과 API 사용이 다소 복잡하다는 불편함을 느끼고 ",웹 개발
https://surfit.io/link/yRyDX,"터치와 클릭, 우리 깐부잖아.","터치와 클릭을 사용하지 않는 하루를 상상해보자. 과연 어떨까? 필자는 두 동작 없는 하루를 이제는 상상할 수 없다. 사용자일 때는 무의식적으로 사용해서 이 두 동작의 관계에 대해 깊게 생각해 본 적이 없었다. 프론트엔드 개발자가 되고 터치와 클릭의 차이점 때문에 발생하는 문제를 맞닥뜨린 이후에서야 두 동작의 관계에 대해서 생각해보게 되었다.
이 글로 이제 ",웹 개발
https://surfit.io/link/Q6pPp,프론트엔드는 성능 개선을 위해 무엇을 해야 할까?,"웹 사이트에서 성능은 아주 중요한 부분이다. 구글 리서치 자료에 따르면 모바일 웹 사이트의 로딩 시간이 3초 이상일 때 32%, 5초 이상은 90%, 6초 이상은 106% 마지막으로 10초가 넘으면 123%의 이탈률이 발생한다고 한다. 고객의 이탈률은 매출과 연관 되는데 Amazon은 페이지 로드 시간이 100ms 추가될 때마다 매출의 1%가 손실된다는 사",웹 개발
https://surfit.io/link/YADQR,"Review 2021 프런트엔드, 그리고 2022","2021년 프런트엔드 개발 생태계에서 발생한 몇몇 이벤트들을 되돌아보고 올해 2022년에는 어떤 관전 포인트가 있을지 이야기해보려고 해요.
계기
작년 회고에 나만의 2021 프런트엔드 관전 포인트라는 섹션을 썼었는데 타율이 꽤 높은 것 같아 아예 별도 포스팅으로 작성해봤어요.
이런 글은 빠르게 발전하는 생태계 속에서 하루 하루 고군분투 하는 평범한 개발자 ",웹 개발
https://surfit.io/link/yRx0k,"프론트엔드 역사와 미래, 업무 분야 ... 그리고 잘하는 프론트엔드 개발자란?","아날로그의 책처럼 일련의 순서대로 된 것이 아닌 가상의 공간에서 텍스트에 새로운 문서에 대한 링크가 존재하는 개념의 하이퍼텍스트가 태어났습니다. HTML의 첫글자인 H가 바로 이 Hypertext이죠. 
웹은 인터넷을 통해서 이 하이퍼텍스트라는 문서를 모든 사람이 쉽게 만들고 또 공유하기 위해 태어났습니다.
이제 누구나 쉽게 HTML(Hypertext Ma",웹 개발
https://surfit.io/link/N76yo,REST API 취약점 탐지 자동화,"퍼징1(fuzzing) 또는 퍼즈 테스팅(fuzz testing)은 자동으로 버그를 찾는 소프트웨어 테스팅 기법 중 하나로 프로그램에 예상치 않은 데이터를 무작위로 입력해 본 후 프로그램 내에 버그가 있는지 확인하는 테스팅 기법[1]입니다. 보안 연구 분야에서 가장 인기 있는 주제 중 하나이며 Google[2, 3]이나 Microsoft[4, 5]와 같은 ",웹 개발
https://surfit.io/link/dPyzp,Bootstrap을 공부해보다,"HTML부터 해야 한다고해서, “HTML은 쉬우니까 Skip 합시다""라고 했다. 그러자 친구가 말하길 “HTML에서 쉬운것만해서 그렇다”라는 뼈있는 것 같지만, 전혀 와 닿지 않는 말을 했다.
잘 만든 프론트엔드는 예술에 가깝다. 그것이 “Art”인지 “The Art”인지는 둘째치고, 기술적인 난이도 뿐만 아니라 사용자를 고려한 UX까지 결합되어 있기 때문",웹 개발
https://surfit.io/link/Kb6po,Svelte + TS + SCSS + α,"전처리를 해주는 svelte-preprocess가 Svelte 공식 지원 라이브러리로 편입되면서, Svelte가 TypeScript를 공식 지원하게 되었습니다. 이번 포스트에서는 Rollup, Webpack 번들러에서 svelte-preprocess를 사용해서 Svelte에 TypeScript와 SCSS, autoprefixer, alias 가능을 적용한 ",웹 개발
https://surfit.io/link/8qRP9,Grid System과 CSS Grid,"Grid System은 1970년대 편집디자인으로 부터 나온 용어입니다. 편집 디자인이란 구성요소들을 잘 배치해서 시각적으로 뛰어난 결과물을 만들어내는 것입니다. 즉 어떻게 배치를 하느냐에 따라서 디자인의 퀄리티가 달라지겠죠.
Grid System의 본질은 각 요소들의 오와 열을 맞추는 것입니다. 사람들은 뭔가 안정되어 있고 정돈되어 있는 것을 보고 심리적",웹 개발
https://surfit.io/link/p18eL,CSRF(Cross-Site Request Forgery) 공격과 방어,"Spring Security를 사용하면 종종 CSRF(Cross-Site Request Forgery) 설정을 비활성화시키는 코드를 발견할 수 있습니다. 
보안 관련된 설정을 잘 모르고 비활성화하는 것은 위험하다고 생각됩니다. 
CSRF가 무엇인지, 어째서 비활성화시키는지 정리해보았습니다.

CSRF 보안 비활성화 설정Permalink

    @Overr",웹 개발
https://surfit.io/link/qyddj,생소한 HTML 요소 정리,"noscript는 자바스크립트를 지원하지 않을 경우에, 대신 제공할 폴백 콘텐츠를 정의할 때 사용한다.
라고 대략적으로는 알고 있었지만 직접 사용하거나 본적이 없어서 생소했다. 유즈 케이스를 살펴보자.

fallback 이란 '대체'를 뜻한다.

리다이렉트
 &lt;noscript&gt;
   &lt;meta http-equiv=""Refresh"" conte",웹 개발
https://surfit.io/link/bbZMe,GitHub Codespace 환경 개인화하기,"GitHub Codespaces를 사용하면 쉽게 프로젝트에 맞는 환경을 웹이나 로컬의 VS Code로 실행해서 개발할 수 있다. 프로젝트 개발환경의 필요한 설정은 프로젝트의 Codespaces 설정으로 할 수 있지만 실제로 개발하려고 보면 개인에게 최적화된 환경이 필요하다.

특히 터미널을 많이 사용하는 경우는 로컬에 사용해서 하던 환경을 Codespace",웹 개발
https://surfit.io/link/N78Bz,비율에 따라 줄어드는 SVG 이미지 구현하기 with CSS 고군분투,"이미지를 감싸는 컨테이너에 위와 같은 css를 줌으로써 전체 높이를 padding-top을 통해 조절하며,
calc(200 / 400 * 100%)를 통해 400 * 200 비율로 계산하도록 조정한다.


img {position: absolute;top: 0;left: 0;bottom: 0;right: 0;margin: auto;height: 100%;}",웹 개발
https://surfit.io/link/nlnoN,공개된 GitHub Codespaces 살펴보기,"원래 GitHub에는 간단한 수정을 위해 파일에서 수정 버튼을 눌러서 바로 수정 후 커밋하거나 Pull Request(이하 PR)를 보내는 방법을 제공할 수 있다. 굳이 로컬에 git clone을 하지 않아도 기여할 수 있는 간편한 방법이다.

이번에 Codespaces가 공개되면서 웹에 기반을 둔 에디터도 같이 공개되었다. GitHub.com의 저장소에서",웹 개발
https://surfit.io/link/N7Vjg,스토리북을 이용한 컴포넌트 제작,"안녕하세요. 사람인HR IT연구소 UI개발2팀 정영환입니다.

지난 등용문S 개발기에 이어 Vue로 프로젝트를 진행하였습니다. 그 당시와 달리 작년 9월에 릴리즈한 Vue3로 개발하면서 storybook을 활용했다는 차이가 있겠네요. Vue3에 대한 이야기는 안수미 연구원님께서 정리한 Vue, 원피스로 떠나는 여정에 담았으니 이 글은 storybook에 집",웹 개발
https://surfit.io/link/xrNXA,Postman Mock Server로 팀 프로젝트의 개발 속도와 갈등을 개선하기,"Mock Server는 개발 효율을 저해시키는 요소 중에 개발 병목현상과 불명확한 커뮤니케이션을 해결할 수 있는 좋은 솔루션입니다.
여기 백엔드 개발자 A와 프론트엔드 개발자 B가 같이 개발을 하는 개발 프로젝트가 있습니다. 프론트엔드 개발자 B는 개발자 A가 API를 만들어주면 만들어진 API에 대한 프론트엔드 기능을 구현을 하는 형식으로 개발을 진행합니",웹 개발
https://surfit.io/link/RvD2B,CSS 레이아웃 분할과 Flexbox,"레이아웃의 기본은 분할! 선긋기, 자르기, 그리고 Flexbox!
그리고 다음과 같은 규칙을 머리속에 기억해두고 종이를 꺼내들고 네모를 그린뒤에 적당히 선을 한번 그어 보면서 이미지를 그려봅시다.

선은 처음부터 끝까지 그어야 합니다. 그래서 완전히 2개의 영역으로 구분이 되도록 하세요.
같은 방향의 선은 몇번이고 그을 수 있지만 다른 방향의 선은 안됩니다",웹 개발
https://surfit.io/link/zMeWO,"웹 렌더링 방식 (SSR, CSR, SSG) 알아보기","초창기에는 모든 웹 페이지가 정적인 페이지였다. 대부분의 로직은 서버에서 수행되었고, 브라우저는 서버로부터 전달받은 정적인 HTML과 CSS를 단순히 렌더링하는 방식으로 동작했다. 즉, 우리가 웹 사이트에 접속하면 브라우저는 서버에 간단한 HTTP 요청을 전송하고, 서버로부터 전달 받은 HTML을 렌더링하는 방식인 것이다. 화면에 어떠한 변화를 주려고 화면",웹 개발
https://surfit.io/link/P189x,location.href vs location.assign vs location.replace 차이점,"read-only 속성을 가진 window.location 은 document의 현재 location 정보를 담은 Location 객체를 리턴해준다.
window.location은 read-only Location 객체임에도 불구하고 DOMString을 할당할 수 있다. 이 말인즉슨 대부분의 경우 location이 마치 string인 것처럼 사용할 수 있다",웹 개발
https://surfit.io/link/EmO4e,브라우저 렌더링 과정을 알아보자!,"브라우저란 웹 페이지, 이미지, 비디오 등의 컨텐츠를 수신하고 전송, 그리고 유저에게 표현해주는 소프트웨어이다. 더 풀어서 설명해보자면 브라우저는 유저가 선택한 내용을 서버로 요청해 서버로부터 데이터를 받고, 자체적인 렌더링 엔진을 사용해 이를 사용자가 보기 쉽게 텍스트나 이미지, 비디오 등으로 변환한다. 이렇게 변환된 데이터는 HTML 코드로 작성되어 있",웹 개발
https://surfit.io/link/vRQOZ,"ESLint, Prettier Setting, 헤매지 말고 정확히 알고 설정하자.","우선 ESLint와 Prettier의 차이를 정확하게 알아보자. 대부분 개발자들은 eslint만 사용하지 않고 prettier를 함께 사용한다.
둘 다 코드 컨벤션을 잡아주는 녀석인데, 그럼 하나만 쓰면 되지 왜 둘을 같이 사용하는 걸까? 분명 다른 차이가 있으니 같이 사용하는 것임이 분명하다.(난 지금까지 prettier가 코드 파일 저장할 때 알아서 컨",웹 개발
https://surfit.io/link/WkZam,The State of CSS 2021 results are here!,"매해 새롭게 바뀌어가는 CSS, JS 생태계의 변화를 쫓아가기란 쉽지 않습니다. 늘 새로운 게 나오고 또 새로운 것은 항상 '이게 정말 쓸만한가?' 라는 물음이 동반됩니다. 그래서 수많은 개발자들에게 설문을 통해 올해 최신기술에 대한 동향과 선호도를 조사하는 프로젝트가 바로 stateofjs, stateofcss입니다.
최초 2016년 stateofjs로 ",웹 개발
https://surfit.io/link/JlGnq,Chrome Devtools - Console + Console API,"콘솔은 크게 두가지의 목적으로 사용한다. 첫번째로는 로그 메시지를 확인하는 용도, 두번째로는 자바스크립트를 실행하는 용도이다. 
로그 메시지 확인하기
자바스크립트가 제대로 작동하고 있는지 확인하기 위해서 종종 콘솔을 활용한다. console.log(data)와 같은 코드를 이용해서 data의 형식을 알아낸다거나, console.log(""1"") 와 같은 코드",웹 개발
https://surfit.io/link/dPjO8,프론트엔드 성능 최적화,"사이트에 들어왔는데 로딩이 느리다거나,
검색을 했는데 이미지를 불러오는 것이 너무 느려 제대로 이용할 수 없다면
이 사이트는 무용지물이 될 것이다.
(좌) memegle 사이트 홈페이지 / (우) memegle 사이트 search 페이지
요구사항 엿보기
우리에게 주어진 요구사항은 아래와 같다. 
잘 모르는 내용이 있어도, 성능 최적화를 진행하면서 알아보도록",웹 개발
https://surfit.io/link/ozlrj,React UI 상태를 URL에 저장해야 하는 방법과 이유,"화면을 몇 번 클릭한 후에 원하는 정보가 있는 상태가 되었는데, 실수로 탭을 닫은 적이 있지 않은가? (또는 Windows 업데이트를 한 적이 있지 않은가?)    
똑같은 지루한 과정을 거치지 않고 이 상태로 돌아갈 방법이 있다면 좋을 것이다. 아니면 그 상태를 공유해서 팀원이 당신과 동일한 작업을 할 수 있다.    
이 문제는 현재 모바일 앱에서 앱을",웹 개발
https://surfit.io/link/ozl8V,A Study of WebRTC Security,"WebRTC는 별도의 플러그인 설치 없이 브라우저에서 실시간 통신을 가능하게 하는 웹 애플리케이션 최신 기술이다. 하지만, 오픈소스인 WebRTC는 잠재적으로 보안 관련 우려를 야기할 수 있다. 해당 글에서는 WebRTC의 보안에 대해서 자세히 논의한다.WebRTC는 플러그인 설치 없이 실시간으로 미디어를 전송할 수 있는 오픈소스 웹 기반 기술이다. Web",웹 개발
https://surfit.io/link/JlG2q,DOM(Document Object Model),"1. DOM(Document Object Model)Permalink


  MDN Web Docs
The Document Object Model (DOM) is a programming interface for web documents. 
It represents the page so that programs can change the document s",웹 개발
https://surfit.io/link/WkEj8,Virtual DOM,"DOM도 마찬가지로 메모리에 생성되고, 메모리 상에서 조작하는데 가상 DOM은 왜 필요하지?


1. HTML Document Rendering ProcessPermalink

가상 DOM을 사용하는 이유에 대해 설명하려면 실제 HTML 문서를 브라우저 화면에 보여주기까지 과정을 이해할 필요가 있습니다. 
크롬이나 사파리에서 사용하는 HTML, CSS 웹 ",웹 개발
https://surfit.io/link/p1jn6,리액트에서 도넛 차트를 만들어보자!,"stroke-dasharray 속성은 도형 둘레의 dash와 gap을 정의하는 패턴으로, 도형 둘레의 stroke의 길이와 각각의 stroke 사이 공백의 패턴을 정의합니다. 예시를 통해 알아보겠습니다.
stroke-dasharray 속성이 적용되지 않은 기본 &lt;line&gt;은 다음과 같습니다.
&lt;svg viexBox=""0 0 100 100""&",웹 개발
https://surfit.io/link/YA6W4,Webpack 기초 간단 정리 - 응용편,"바벨은 자바스크립트 트랜스파일러(Transpiler)이다. '트랜스파일링'이란 어떤 특정 언어로 작성된 소스 코드를 다른 소스 코드로 변환하는 것을 말한다. 즉 바벨을 이용하여 기존 작성한 코드를 자바스크립트 코드로 변환할 수 있다.
리액트로 코드를 작성하기 위해 바벨이 필요한 이유는 브라우저가 이해하는건 오직 '자바스크립트'이기 때문이다. 브라우저는 리액",웹 개발
https://surfit.io/link/LLrd9,Lighthouse의 User Flow,"Core Web Vital은 페이지 로드에 국한되어 있고, 캐시가 비어있는 상황만 따지지는 않는다. 게다가, Cumulative Layout Shift(CLS) 같은 지표는 페이지가 열려있는 시간 동안 계속 측정이 가능하다.
Lighthouse는 새로운 모드인 User Flow API를 통해 페이지의 생애를 테스트할 수 있게 해줄 것이다. Puppeteer",웹 개발
https://surfit.io/link/7LxB6,CSS 공부 어떻게 해야 하나요? - 이론편 (feat. figma),"css에서 상위 20% 스펙이 전체 css 코드의 80%를 차지한다.
실제로 실전에서 자주 쓰이는 css는 몇개 되지 않습니다.

그래서 이번 글에서는 제가 쓰고 있는 현재의 Best Practice를 공유하려고 합니다.
(물론 이 방법이 Best한가에 대한 기준은 순전히 제 주관적이니 판단은 여러분의 몫입니다.)
제가 쌓아온 Best Practice를 근",웹 개발
https://surfit.io/link/6Q4Ml,삽질하기 싫으면 꼭 읽어봐야 할 Canvas 트러블 슈팅,"devicePixelRatio(이하 DPR)에 대해 알아야 한다.  Canvas 크기와 화면에 표시(디스플레이) 되는 크기는 다르며, 디스플레이 크기는 DPR의 영향을 받는다. DPR는 웹 브라우저에서 전역변수 window.devicePixelRatio로 확인해볼 수 있는데, CSS 픽셀을 구성하는데 필요한 물리적 픽셀 수를 의미한다. 예를 들어 DPR의 ",웹 개발
https://surfit.io/link/aW8yb,if(kakao) after talk 후기 - 요즘 웹 프론트는 디자니어와 CSS 협업 어떻게 해요?,"디자이너가 한 디자인 작업물을 최대한 문제없이 빠르게 개발로 옮기기 위한 여러 가지 고민들, 문제점. 그렇게 해서 탄생한 자체 개발 라이브러리, 플러그인 개발에 대한 뒷이야기를 공유합니다. 즉석 Q&amp;A 환영합니다. 그리고 각자만의 디자이너와 FE간의 협업 문화, 고민 상담, 꿀팁 공유 등 디자인을 만들어내는 이야기를 함께 이야기해봐요.

if(kak",웹 개발
https://surfit.io/link/ML4XG,웹사이트 최적화 방법 - 이미지 파트,"FrontEnd
            
        
        
            웹사이트 최적화 방법 - 이미지 파트
        
        
            이미지 최적화로 웹 성능을 향상시키는 방법
        
        
            2021-11-22 09:29
        
    

    

    
",웹 개발
https://surfit.io/link/4bBlg,자동화된 UI 회귀테스트 도입하기,"개발자만이 수행하는 Unit-test, Intergrated-test 외에 사용자와 상호작용하는 UX/UI에 관한 테스트의 자동화를 이야기합니다. 전체적인 논의 또는 문맥상의 이해를 위한 인용을 포함하나 설명하지는 않습니다.
사장님향 주문접수채널 (iOS, Android, Windows) App은 배달의민족 App (iOS, Android)에서 발생된 주문",웹 개발
https://surfit.io/link/2vq9d,Mustache.js 로 이메일 템플릿 구성하기 (TypeScript),"이메일 안에서는 CSS나 JS 파일 로드가 안되기 때문에 HTML 코드만으로 해결이 되어야 하는데요.위에서 언급한 HTML 코드를 단순 문자열로만 진행할 경우 다음의 문제점들이 있습니다.
html 코드에서 오타가 발생하는걸 찾을수가 없다.
html 코드가 결국 문자열이기 때문에 &lt;/div&gt; 태그가 1개 부족해도, 혹은 attribute 가 오타가",웹 개발
https://surfit.io/link/zM9Ep,우선순위 힌트로 리소스 로딩 최적화하기,"브라우저가 웹 페이지를 파싱하고 이미지, 스크립트 또는 CSS 같은 리소스를 검색하고 다운로드하기 시작하면 최적의 순서로 리소스를 다운로드하기 위해 각 리소스에 가져오기 우선순위를 할당한다. 이런 우선순위는 리소스의 종류와 문서의 위치에 따라 달라질 수 있다. 예를 들어, 뷰포트 내 이미지는 우선순위가 높음일 수 있지만 초기에 로드된 &lt;link&gt;",웹 개발
https://surfit.io/link/yRD6P,성능 최적화 - feat. 'Shall We Trip' 프로젝트,"사용자가 처음 애플리케이션을 사용할 때도 좋은 성능을 제공하고 싶었기 때문에 network 탭의 Disable cache 버튼을 체크해서 캐시를 사용하지 않는 환경에서 테스트를 진행하였다
성능 최적화 적용 이전 화면

Lighthouse 결과

FOUT(Flash of unstyled text) 현상에 의해 심각한 레이아웃 변화가 발생하고, boxicon도",웹 개발
https://surfit.io/link/jlDVq,SVG viewBox를 알아보자,"SVG란 Scalable Vector Graphics의 약자로 확장 가능한 벡터 그래픽, 다시 말해 크기를 확대하거나 축소할 수 있는, 수학적 함수를 이용해 도형이나 선을 그려서 표현한 그래픽이라고 할 수 있다. 여기서 수학적 함수를 이용해 도형이나 선을 그려서 표현한이라는 의미는 우리가 수학 시간에 배웠던 좌표평선 위의 그려져 있는 그래프 정도로 이해할 ",웹 개발
https://surfit.io/link/Z8bLZ,Code Splitting,"코드 분할(Code Splitting)은 SPA의 성능을 향상시키는 방법입니다. 싱글 페이지 애플리케이션(Single Page Application)은 초기 실행시에 필요한 리소스를 모두 다운로드한후 해당화면에 필요한 스크립트를 실행시키는 특징이 있습니다. 때문에 초기 다운로드 비용이 매우 비싸고 , 로딩속도가 지연될수 있기 때문에 필요한 시점에 분할된 리",웹 개발
https://surfit.io/link/qyrp2,Sanitizer API를 이용해 안전하게 DOM 조작하기,"웹 애플리케이션은 사용자로부터 다양한 문자열을 입력받지만, 그 입력을 항상 믿을 수 있는 건 아닙니다. 사용자의 입력을 그대로 HTML에 표현하는 경우를 생각해봅시다. 만약 여러분이 보안에 충분한 주의를 기울이지 않는다면, 악의를 가진 사용자들로부터 교차 사이트 스크립팅(XSS, cross-site scripting) 공격을 쉽게 받을 수 있겠죠.

이러한",웹 개발
https://surfit.io/link/4bnov,웹 브라우저의 동작원리를 알아보자,"웹 트래픽 분석사이트  StatCounter의 브라우저 통계 따르면 최근 1년간 Chrome 브라우저의 점유율이 65%안팎으로 확인된다.
나는 이 크롬 브라우저를 주로 사용하는데 동작 원리를 제대로 알고있지 않은 것 같아 이 글로 웹 브라우저의 동작원리에 대해 정리를 해보고자한다. 
웹 브라우저와 웹 서버의 통신과정
브라우저의 주요 기능은 사용자가 자원을 ",웹 개발
https://surfit.io/link/yRra0,cypress를 써보자!,"프로젝트를 쭉 담당하면서 단위테스트만으로는 부족하다고 생각될 때가 왔다.
저번주에 운영환경을 체크하는 로직을 라우터 페이지에 넣어버리는 실수로 인해 리얼환경에서 잘 동작하는지 반드시 확인해야 할 필요가 생겼다. 또한 QA 과정(혹은 단위테스트)에서 발견이 어려웠던 이슈들이 속속들이 나오고 있었다.
따라서 새 서비스 개발에 착수하기 전에 작년부터 해보고 싶었",웹 개발
https://surfit.io/link/EmAaJ,크롬 퍼포먼스 탭과 debugger 키워드로 효율적인 디버깅하기,"크롬 퍼포먼스 탭과 debugger 키워드를 활용하여 좀 더 효율적으로 디버깅을 하는 방법에 대해 공유해보려고 합니다.미리 짜여진 상황이 아니기 때문에 그동한 접하지 못했던 개념이나 코드를 마주칠 수 있는데, 크게 신경 쓰지 않고 문제를 해결하는 전반적인 과정에 대해 유심히 봐주시면 좋을 것 같습니다.회사 내 프로젝트와 관련되어 있는 이슈이다 보니 자세히 ",웹 개발
https://surfit.io/link/OoAvZ,당신의 컴포넌트는 안녕하신가요,"컴포넌트는 UI를 독립적이고, 재사용 가능한 부분으로 분리해주며 각각을 고립시켜 생각할 수 있게 해줍니다.

'독립적', '재사용 가능하도록 분리', '고립시켜 생각'이라는 말들이 나오는데 우리가 만드는 컴포넌트가 완벽히 이러한 특징을 가지느냐고 자신에게 반문해보면 아마 아닐 것이다.
사실 위의 설명은 컴포넌트의 최대 목표를 의미하는 말이 아닐까 생각한다.",웹 개발
https://surfit.io/link/qyr1G,CORS에서 이기는 방법,"CORS는 브라우저가 자원을 가져오는 방법에 대한 부분이기 때문에 어렵다. 이는 30여년 전 최초의 웹 브라우저에서 시작된 일련의 행위다. 그 이후로 기능을 추가하고, 기본 동작을 개선하고, 웹을 너무 많이 바꾸지 않는 선에서 과거의 실수를 덮어 나갔다.
어쨌든, 필자가 알고 있는 CORS에 대해서 모든 것을 적어두고 확인해볼 수 있도록 새로운 앱을 만들었",웹 개발
https://surfit.io/link/AZAjg,Webpack 기초 간단 정리✨ - 실전편,"웹팩 컨피그를 직접 작성해보며 이해도를 높이는 것이 이번 포스팅의 목적이다. 따라서 html, javascript, css, image 파일을 웹팩으로 번들링 하기 위해 필요한 최소한의 기본 설정만 진행해 볼 것이다.
폴더 구조
본격적으로 시작하기 앞서 우리가 만들 프로젝트의 폴더 구조를 살펴보자.
우리가 만들 초기 프로젝트 구조(as-is)와 빌드 후(t",웹 개발
https://surfit.io/link/7L9lq,Chart.js 시작하기,"리액트에서 Chart.js를 사용하려면 chart.js 뿐만 아니라 리액트에서 Chart.js를 렌더링하기 위해 필요한 react-chartjs-2도 설치를 해야 합니다. 사용하시는 패키지 매니저에 따라 아래와 같이 설치를 해주세요.

    &lt;yarn을 사용하는 경우&gt;
yarn add react-chartjs-2 chart.js

&lt;npm",웹 개발
https://surfit.io/link/dPb17,그림판 만들기,"바닐라자바스크립트로 프로젝트를 진행하면서 다양한 메서드들을 익히고 함수 작동 방식을 공부할 수 있다. 또 익숙한 그림판을 구현하면 더 재밌게 코딩할 수 있다고 생각했다!
⚙ 무엇을 구현하였나?
캔버스에 선이 그려지고 전체 채우기를 할 수 있다.
팔레트를 이용하여 다양한 색상을 사용할 수 있다.
brush의 두께를 조절할 수 있다. 
✅ 구현상황
1) ✏️ ",웹 개발
https://surfit.io/link/YAYbP,Rollup 기반 라이브러리 개발 환경 구성하기,"롤업은 기본적으로 ES6 빌드를 지원하는 번들러다

구글에서 제작한 번들러 비교 리포트에 따르면, 롤업은 빌드 결과물을 ES6 모듈 형태로 만들 수 있습니다. ES6 모듈로 빌드가 가능하다는 것은 사용하는 쪽에서 라이브러리 전체를 불러오는 게 아니라 필요한 부분만 콕 집어서 가져올 수 있다는 특징이 있죠. 즉 실제로 사용하지 않는 코드를 빌드 단에서 제거하",웹 개발
https://surfit.io/link/xrMDq,컴퓨터 네트워크 맛보기,"보내는 컴퓨터에서, 데이터는 맨 위의 응용계층(Application Layer)에서부터, 순차적으로 아래 계층으로 전달 됩니다. 각 계층에서는 데이터에 특정 목적을 가진 정보를 덧붙이는 작업을 수행합니다. 이렇게 덧붙여지는 정보를 헤더라고 하는데, 예를들면 ‘보내는 컴퓨터의 주소’, ‘목적지 컴퓨터의 주소’ 같이 통신에 필요한 정보들이 들어가는 것이죠. 이",웹 개발
https://surfit.io/link/1Yxnr,브라우저 동작원리를 알아야 하는 이유가 무엇인가요?,"해당 글은 React의 SSR인 Next.js 프레임워크에 의존하여 작성된 글입니다.그러나 전체적인 맥락과 핵심 내용을 이해하시는 데는 큰 문제는 없습니다.



프론트엔드 주니어 개발자가 꼭 알아야 하는 기본지식 중 하나로 많이 소개되고 있는 '브라우저 동작 원리'취업이나, 이직 준비를 해봤다면 무조건 들여다봤을 내용인 만큼, 브라우저가 어떻게 동작하는지",웹 개발
https://surfit.io/link/bblyq,SEO 최적화를 위한 Core Web Vitals,"‘유저 친화적 UX’를 SEO 관점에서 깊게 파 보기현재 콴다 팀에서는 콴다 신규 유저 유입을 위해 SEO 작업이 활발히 진행 중입니다.수학 문제를 구글, 네이버에 검색해보세요. 높은 확률로 콴다의 풀이가 1페이지에 나올 것입니다.수많은 유저가 이렇게 상위 노출된 콴다 웹페이지에 접속하게 됩니다. 여기서 고품질의 풀이를 유저에게 제공하면, 많은 유저들이 콴",웹 개발
https://surfit.io/link/dPPmY,라이트하우스와 함께한 성능 개선 고군분투기,"웹 사이트의 성능은 시간과 리소스를 기준으로 평가할 수 있습니다. 적은 리소스를 사용하면서도 빠른 시간 내에 실행된다면 보다 좋은 성능이라고 말할 수 있겠죠..
제가 성능 개선을 위해 먼저 했던 일은 사이트가 이용하는 리소스를 최대한으로 줄이는 것이었습니다.
당시 렌더링에 따른 불필요한 API 콜이 발생하고 있었는데, useCallback 혹은 deboun",웹 개발
https://surfit.io/link/JllRz,2021년에 살펴볼 법한 브라우저 개발자 도구의 유용한 스타일 관련 기능,"작년 State of CSS 설문에 따르면 프론트엔드 개발자들이 Chrome 브라우저를 가장 높은 비율로 활용하고 있다는 것을 고려하여, Chrome 브라우저의 개발자 도구 위주로 소개한다.
또한 Chrome 브라우저의 개발자 도구뿐 아니라 Firefox, Edge 브라우저의 개발자 도구에서 다른 브라우저의 개발자 도구와 차별화된 기능도 살펴볼 것이다. 아",웹 개발
https://surfit.io/link/rMMg2,WebRTC 응용 서비스를 개발하는 2가지 방법,"WebRTC는 서버를 최대한 거치지 않고 P2P(Peer-to-Peer Network)로 브라우저나 단말 간에 데이터를 주고받는 기술의 웹 표준입니다. 웹에서 실시간 미디어 스트림을 송수신할 수 있는 유일한 표준이고 또 유일한 P2P 표준이기도 합니다.
또한 WebRTC는 표준임과 동시에 표준을 구현한 오픈소스 프로젝트의 이름이기도 합니다. 사실 프로젝트가",웹 개발
https://surfit.io/link/Rvvey,refresh token 도입기,"SSR 상에서 refresh token을 도입하면서 고민했던 것들을 정리한 글입니다.
SSR에서 로그인이 어떻게 이루어지는지 궁금하시면 여기를 참고해주세요!
🙌 도입 계기 - 2시간이 지나면 로그인이 풀린다!
현재 제작하고 있는 놀토 앱은 access token 유효기간인 2시간을 지나면 무조건 로그아웃되고 있었다. 이 현상은 반드시 고쳐져야 할 이슈였다.",웹 개발
https://surfit.io/link/xrrZA,"HTTP의 특성과 쿠키, 세션, 토큰","서버가 어떻게 클라이언트를 식별하는지에 대해 작성한 글입니다.
우리가 익히 알고 있던 쿠키, 세션, 토큰은 결국엔 HTTP의 특성으로부터 파생되어 생겨난 것이란 걸 알게 되었습니다. HTTP의 어떤 특성이 쿠키를 만들어냈는지, 세션과 토큰은 어떤 이유로 생겨났는지를 중심으로 글을 작성했습니다.
틀린 부분이 있다면 댓글로 알려주시면 감사하겠습니다!

웹의 동",웹 개발
https://surfit.io/link/Wk20r,웹 서비스 캐시 똑똑하게 다루기,"HTTP 캐시를 효율적으로 관리하려면 Cache-Control 헤더를 섬세하게 조절해야 합니다. 토스 프론트엔드 챕터에서 다양한 생명 주기를 가지는 캐시를 다루면서 알게 된 노하우를 테크 블로그로 공유합니다.



캐시의 생명 주기



HTTP에서 리소스(Resource)란 웹 브라우저가 HTTP 요청으로 가져올 수 있는 모든 종류의 파일을 말합니다. 대",웹 개발
https://surfit.io/link/7LLNO,LINE Web Timeline 이미지 얼굴 인식 기능 적용,"이미지의 가로세로 비율에 따라 정방형이나 직사각형 등의 형태로 이미지를 제공하고, 그리드 혹은 슬라이드 등의 조건에 따라서 이미지를 포함하는 박스의 형태가 달라집니다. 이번 글은 정해진 박스 형태 내에서 이미지의 특정 좌표가 우선적으로 노출될 수 있도록 표현하는 것에 중점을 두고 설명하겠습니다. 







구현 과정



@이상원“스펙을 구현하기 위해 ",웹 개발
https://surfit.io/link/OoojL,MSW로 API 모킹하기,"한 번의 API 모킹 작업으로 Node 환경(Jest), Browser 환경(Storybook, development)에 대응하고자 했습니다. MSW를 도입하기 전에는 테스트 환경에서 jest.mock()으로 모킹한 API를 스토리북에서 다시 모킹 했습니다. 동일한 API를 각 환경에 맞춰 두 번의 모킹 작업을 하는 것은 개발 생산성을 떨어뜨립니다. 모킹 ",웹 개발
https://surfit.io/link/P11RY,셀프서비스 디자인시스템 #2 – 개발자 편,"디자인시스템에서의 시스템은 ""복잡한 사회적 체계의 맥락에서 구조와 행동을 통제하는 규칙들의 집합체""에 가깝습니다.

이를 바탕으로 저희는 단순히 UI/UX 가이드라인이 정의된 UI 템플릿이 아닌,프로토콜과 같은 매우 강력한 규칙으로 시스템을 만들고 이를 바탕으로 디자인시스템을 만들었습니다.
생산성을 위한 디자인시스템 채택
2020년 1분기에 배민사장님광장(",웹 개발
https://surfit.io/link/yRRro,자바스크립트가 아닌 리소스 번들링 하기,"여러분이 웹앱을 만들고 있다고 가정해보자. 하지만 자바스크립트 모듈 외에 모듈 그래프에 포함되지 않는 웹 워커와 이미지, 스타일시트, 폰트, WebAssembly 모듈 등 리소스들도 처리해야 할 것이다.
이런 리소스를 HTML에서 바로 참조할 수는 있지만, 재사용 가능한 컴포넌트와 로직의 결합도가 높은 경우가 많다. 예를 들어, 자바스크립트 영역과 커스텀 ",웹 개발
https://surfit.io/link/00Wkz,CLASS101의 GraphQL 여정기,"“클래스101에서는 GraphQL을 어떻게 쓰고 있나요?”클래스101에서는 Typegraphql을 이용한 Code first 전략으로 스키마를 구현하고 있습니다. 그리고 Apollo를 이용해서 GraphQL을 운영하고 있습니다. 클래스101의 서비스를 만들었을 당시 어떤 고민을 통해서 Code first 방식을 택했는지, 그로 인해서 힘들었던 점은 무엇인지",웹 개발
https://surfit.io/link/3xjdE,“앱 언어가 섞여 나와요?!” — iOS 웹뷰에서 발생한 다국어 표시 오류 해결하기,"앱 스토어는 미국 계정으로, 아이폰 기기는 영어로 사용 중이고 리얼월드 앱 언어는 한국어로 설정해놓은 상태인데 이럴 때 리얼월드 앱의 메인페이지에서 언어가 섞여서 나옵니다.리얼월드 앱 내 웹뷰첨부된 사진을 보았더니 정말 영어와 한국어 두 가지의 언어가 섞여 나오네요정말 재밌는 버그입니다. 원인을 파악하기 위해 떠나보겠습니다🕵생각해보면 기기 언어와 앱 언어가",웹 개발
https://surfit.io/link/3OyNd,모노레포(Monorepo)를 도입하다,"모노레포의 구조와 Yarn Workspace 및 Lerna를 사용한 구축 방법 등 관련 문서들을 찾아보며 저희가 설정했던 부분에 대해 짧게 공유드리고자 합니다.Monorepo, Yarn workspace, Lerna등 자세한 설명은 참고했던 글과 공식 문서를 하단에 남겨두겠습니다.모노레포 폴더 구조스터디를 한 후, 최종적으로 저희가 정한 서비스의 대략적인 ",웹 개발
https://surfit.io/link/1Y6XB,TCP/IP,"TCP는 Transmission Control Protocol의 약어로서 인터넷상의 데이터를 주고받는 과정을 제어하는 통신 표준을 의미합니다. 이 프로토콜은 데이터를 교환하는 기기 간 데이터의 무결성(정확성)과 전달의 신뢰성을 보장하기 때문에 거의 모든 애플리케이션 수준의 프로토콜(FTP, SSH, HTTP 등)에서 사용하고 있습니다.
IP
Internet",웹 개발
https://surfit.io/link/yRMJo,크롬 익스텐션에서 데이터를 어떻게 다룰 것인가?,"이 프로젝트에 가장 주요한 기능은 크롬 익스텐션과 프로덕트 사이에 데이터를 주고받는 것인데요 프로덕트 내부에 입력된 데이터를 익스텐션으로 전달하여 저장하고, 익스텐션에 저장된 데이터를 프로덕트의 입력폼에 주입해야 합니다. 크롬 익스텐션에서는 message passing 기술을 기반으로 브라우저에 띄워진 프로덕트와 익스텐션 간 혹은 익스텐션 내부에서도 통신하",웹 개발
https://surfit.io/link/mxyYO,브라우저의 사용자 에이전트는 왜 이렇게 복잡하게 생겼을까?,"웹 개발을 하다보면 자주 마주치게 되는 속성이 있습니다. 바로 사용자 에이전트(UA, User Agent) 스트링입니다. 사실 정확히 이야기하자면, UA는 속성이라기보다는 사용자의 신분을 대신할 수 있는 소프트웨어를 말합니다. 웹과 관련된 맥락에서는 일반적으로 브라우저 종류나 버전 번호, 호스트 운영체제 등의 정보를 말하죠.

JavaScript를 이용해 ",웹 개발
https://surfit.io/link/3jOP4,Conomi App ReactNative -> Native 전환과 관련된 이야기,"Facebook 은 2010년 초반에 Native App 개발 대신 공통개발을 위해 HTML5에 투자하였지만 속도 문제가 있었고 결국 다시 Native App 으로 전환하였습니다.마크 저커버그는 이 결정이 큰 실수 였다고 Tech Crunch 와의 인터뷰에서도 얘기를 했었는데, 지금까지도 적당히 performance 타협을 하더라도 개발비용을 낮출수 있는 ",웹 개발
https://surfit.io/link/aW2e7,우리 Axios에게 다시 한 번 기회를 주세요!,"Promise based HTTP client for the browser and node.jsAxios는 브라우저 환경이나 Node 환경에서 사용할 수 있는 HTTP 클라이언트입니다. Promise 기반으로 작성되어 있어, 비동기 작업을 추가하거나 수정하기 좋고, async/await를 사용하면 코드를 좀더 읽기 쉽게 작성할 수 있습니다.Axios 인스턴",웹 개발
https://surfit.io/link/KRgpB,Mocking으로 생산성까지 챙기는 FE 개발,"안녕하세요. 카카오엔터프라이즈 검색플랫폼프론트파트의 Lawrence.net입니다.



프론트엔드 개발 업무의 효율성을 높이기 위한 방법의 하나로 고민해 본 Mocking에 대해 설명하고 이를 적용했던 사례에 대해 공유하고자 합니다. 



먼저, 프론트엔드 개발 과정에서 프론트엔드 개발자들이 겪고 있는 문제점에 대해서 이야기하고, 이에 대한 해결 방안으로",웹 개발
https://surfit.io/link/3X0R0,알쓸신CSS (알아두면 언젠가 쓸 수도 있는 새로운 CSS 속성),"아직 많은 브라우저에서 지원하고 있지는 않지만, 적어도 하나 이상의 브라우저에서 테스트해 볼 수 있는 CSS 속성 중 6개를 가볍게 훑어보겠습니다.

순서는 아래와 같습니다.

gap
  subgrid
  ::marker
  :is, :where pseudo-classes
  :root &amp; var()
  @supports
gap

gap은 grid,",웹 개발
https://surfit.io/link/Kr4gk,프론트엔드 개발 ReasonML이라 좋았던 점,"ReasonML은 강력한 정적 타입 시스템을 장착한 함수형 언어인 OCaml에 뿌리를 둔 ReScript 컴파일러에 의해 자바스크립트 코드로 변환되고, 이는 브라우저나 Node.js 기반에서 실행됩니다.이 포스팅에서는 ReasonML 로 프로젝트를 진행하며 느낀 장점을 이야기합니다. 아마 제가 기존까지 사용했던 자바스크립트와 타입스크립트 환경과의 비교 과정",웹 개발
https://surfit.io/link/KvBgb,WAI-ARIA란?,"들어가며
회사에서 들었던 웹 접근성을 고려한 콘텐츠 제작 가이드 강의에서 웹 접근성 지침 준수는 모든 웹사이트의 의무사항이라고 들었습니다. 웹 접근성 마크를 취득해야 하는 프로젝트가 아니고서야 접근성 개선 작업은 많은 시간과 노력이 필요하기 때문에 굳이 작업하지는 않습니다. 작년에 진행한 프로젝트에서 웹 접근성 작업을 어떻게 해야 할지 고민하다 WAI-AR",웹 개발
https://surfit.io/link/3G49k,HTTP/2 프로토콜 NGINX 적용하기,"HTTP/2를 알아보기 전에, 그 이전 프로토콜인 HTTP/1.x를 먼저 알아보자. 대부분의 서버(NGINX, apache, SpringBoot …등)는 기본설정으로 HTTP/1.1 이 적용되어 있다.
HTTP/1.x
HTTP/1.0
HTTP/1.0에서는 기본적으로 단기 커넥션(Short-lived connections)을 제공한다. 요청마다 커넥션을 매번",웹 개발
https://surfit.io/link/KPLbx,HTML Canvas를 활용하여 인터랙티브 콘텐츠 만들기,"그리기 컨텍스트란 캔버스에 그림을 그리는 데에 필요한 칠하기 색상, 채우기 색상, 변환(Transform) 등의 맥락(Context)을 저장하고, 그림을 그릴 수 있도록 여러 메소드를 제공해주는 객체입니다. 자세한 건 직접 써보면 이해가 될 거예요. 아래 코드에서는 캔버스 요소를 받아와서 그로부터 2D 그리기 컨텍스트를 가져옵니다.캔버스 요소를 만드는 HT",웹 개발
https://surfit.io/link/59ox0,"매출 손실을 줄여주는 외부링크 관제 Bot, 'URL Checker' 개발기","안녕하세요, 뱅크샐러드 Engineering Foundation의 Front End Team 소속 Web Engineer 이소영입니다.
뱅크샐러드는 사용자의 데이터를 기반으로 가장 최적의 금융 상품을 추천하기 위해 여러 금융사와 제휴하여 다양한 상품을 확보해나가고 있습니다.
웹팀은 추천된 금융 상품에 대한 자세한 내용을 바로 확인하고 가입할 수 있도록 제휴",웹 개발
https://surfit.io/link/5lENL,"화상 회의 서비스를 위한, WebRTC 소개","최근 ""게더타운"" 이라는 메타버스 서비스가 인기이다. 모 회사에서 신입사원 연수를 온라인으로 진행하였는데, ""게더타운"" 서비스에서 아바타로 첫 출근을 했다고 한다. https://www.youtube.com/watch?v=e0EKrESr0UE""게더타운""은 가상의 공간에서 만나서 대화 및 업무 또는 교육 등 다양한 목적을 지원해주는 온라인 메타버스 플랫폼이다",웹 개발
https://surfit.io/link/3qpxY,사용자 디바이스 식별하기(Identify user device),"현재 리뉴얼 중인 시스템의 모바일 기능을 추가하는데, 사용자의 디바이스 식별을 어디에서 수행할지 고민이 되었습니다.

브라우저에서 판단하여 경로를 다르게 호출한다.
  브라우저는 일단 호출하고 서버의 필터(filter) 혹은 인터셉터(interceptor)에서 경로를 라우팅(routing)해준다.
아무래도 서버에서 사용자 디바이스를 식별하고 적절한 서비스를",웹 개발
https://surfit.io/link/50PbD,10분 만에 훑어보는 TCP와 UDP,"HTTP/3부터는 더 이상 TCP가 아니라 UDP 위에서 동작한다는 사실은 왠만한 개발자분들이라면 이미 잘 알고 있는 사실일 것입니다. 사용하는 프로토콜 자체가 바뀐만큼 꽤나 파격적인 변화인데요, 그런만큼 웹 개발을 하시는 분들이라면 두 프로토콜 사이의 차이점을 물어보는 것이 면접에서도 충분히 나올 만한 질문인 듯 합니다.

다만 네트워크에 깊게 들어가다보",웹 개발
https://surfit.io/link/KYpyg,CSR 앱에서 SSR + CSR 환경으로 이주하기,"❗ CSR에 SSR을 적용하는데 어려움을 겪는 분들을 위해 작성했습니다. 혹시 틀린 부분이 있다면 말씀해주세요!
❗ SSR과 refresh token에 대한 사전 지식이 있으면 글을 이해하기 조금 더 편합니다.
❗ 웹서버와 WAS가 무엇인지 궁금하다면 여기를 참고해주세요!
최근 진행하고 있는 프로젝트가 CSR 환경에 SSR을 도입한 경험을 공유하고자 한다.",웹 개발
https://surfit.io/link/KPaG2,너의 주소는? IP,"IP는 Internet Protocol의 약자입니다. 프로토콜이 어떤 정보의 교환을 위한 규약 또는 체계를 의미하기 때문에 IP란 결국 인터넷 상에서 서로 데이터를 주고받을 때 필요한 규약이라고 볼 수 있죠.
우리가 유튜브 사이트에 들어가는 과정은 인터넷을 통해 이루어집니다. 좀 더 들여다보면 어떤 URL에 접근하고자 요청을 보내는 컴퓨터와 그 HTTP 요",웹 개발
https://surfit.io/link/wVVgy,웹 성능 최적화를 위한 Webpack Bundle Size 줄이기,"Webpack Bundle Analizer를 이용하면 Build된 Bundle 파일의 상태를 아래처럼 시각화 하여 볼 수 있다.


우선 Chunk 파일을 어떻게 분리할지 Webpack에서 설정을 해주지 않으면, 기본 설정인 페이지 별로 Chunk 파일이 분리 되도록 되어있다. 하지만 이러한 방식은, 각 페이지에서 동일하게 사용되는 코드가 중복으로 들어가게",웹 개발
https://surfit.io/link/3LopW,CORS란?,"CORS는 Cross-Origin Resource Sharing의 약자입니다. 교차 출처 리소스 공유로 번역될 수 있는데, 브라우저에서 다른 출처의 리소스를 공유하는 방법입니다.URL 구조다른 출처의 출처가 무엇인지 살펴봐야 하는데, 출처가 무엇인지 알기 위해서 먼저 URL의 구조를 살펴보아야 합니다. URL 구조는 아래 그림과 같습니다.프로토콜의 HTTP",웹 개발
https://surfit.io/link/5elrr,ReactNative와 함께하는 서비스 개발부터 배포까지,"ReactNative의 존재 이유이자 최강 장점인 크로스플랫폼 동시 개발을 위해서가 가장 큰 이유였습니다. 서비스를 위해선 당연하게 Android와 iOS를 모두 지원해야 했는데요, 당시 올디브에는 iOS 앱 개발자가 없었기 때문에 multiple OS 개발이 가능한 플랫폼을 검토 대상에 두었습니다. 또한 한벌의 코드를 작성하고 실행하면, Android와 ",웹 개발
https://surfit.io/link/wVVo4,Critical Rendering Path 최적화,브라우저가 페이지의 초기 출력을 위해 실행해야 하는 순서를 Critical Rendering Path(CRP)라고 합니다.DOM 트리 구축CSSOM 트리 구축JavaScript 실행렌더 트리 구축레이아웃 생성페인팅Critical Rendering Path는 위의 6단계로 구성됩니다. 단계별 자세한 설명은 [Browser] 브라우저 렌더링를 참고 바랍니다.이,웹 개발
https://surfit.io/link/50p2G,브라우저 렌더링,"렌더링 과정을 이해하면 웹페이지의 렌더링 최적화에 도움이 될 수 있겠죠? 렌더링 최적화 방법은 [Browser] Critical Rendering Path 최적화에서 다룰 예정입니다.브라우저의 렌더링 과정을 이야기하기 전에 브라우저의 구조를 잠시 살펴보겠습니다.User Interface: 주소 표시줄, 이전/다음 버튼, 북마크 메뉴 등. 요청한 페이지를 보",웹 개발
https://surfit.io/link/374Rq,Production Environment에서 SourceMap 보안 이슈 해결,"Build 후 Production 환경에 업로드 시 Source map File이 함께 올라가는 이슈가 있었다.
원래 Production 환경에 소스코드를 배포할 때, Webpack Build를 통해 기존 코드를 Uglify하게 만들어 업로드를 한다.
그러나 Source Map 파일이 Production 환경에 같이 올라가면, Source Map 파일을 통",웹 개발
https://surfit.io/link/3OdPZ,국제화(i18n) 자동화 가이드,"글로벌을 무대로 서비스하는 웹 애플리케이션은 국제화(i18n)가 필수다. 이를 위하여 국제화 라이브러리를 사용하거나 직접 구현하기도 한다. 이 글은 국제화 지원을 위한 개발과 번역 과정에서 이른바 ""복붙""이나 반복적인 수작업으로 인해 고통받는 모든 프런트엔드 개발자를 위하여 작성하였다. 이 자동화 가이드를 따른다면 여러분은 단 한 줄의 스크립트 실행만으로 ",웹 개발
https://surfit.io/link/wk711,"Preload의 개념, 그리고 올바른 사용법","웹 사이트를 방문하면, 필요한 리소스 자원을 서버에 요청할 때 여러 자원을 동시에 요청하게 되고 서버에서는 요청 순서에 상관없이 준비가 되는대로 응답을 하게 된다.
이때, 특정 리소스를 빠르게 로딩하도록 우선순위를 부여하는 방법이 바로 Pre Load를 지정하는 방식이다.
Head 태그에 빠르게 로딩시킬 파일을 Pre Load로 지정하게 되면, 페이지 요청",웹 개발
https://surfit.io/link/374bG,브라우저 Web Worker 다루기 with 오피스 문서 텍스트 추출 및 암호해제,"카카오 사내 기술 세미나 Techtalk 아홉 번째 이야기입니다.











안녕하세요. 톡플랫폼개발팀 bishop.cho입니다. 현재 메일클라개발셀에서 프론트엔드 업무 개발을 담당하고 있습니다. 기존에는 자바스크립트로 동작하는 오피스 에디터 및 뷰어 개발을 했던 경험이 있습니다.



여기에서는, 토이 프로젝트로 텍스트 추출 라이브러리 개발 및 ",웹 개발
https://surfit.io/link/KgAXy,웹 개발을 위한 나의 VSCode 세팅: 프론트+PHP,"VSCode를 많이들 사용하게 되면서 나도 VSCode로 갈아탈만 하지 않을까 생각하게 됐다.

개인적으로는 PhpStorm이 가장 좋다고 생각한다. PHP 지원 때문만이 아니다. HTML, CSS, js 지원이 강력하기 때문이다.

VSCode를 쓰려는 이유는 무료라서다. 나에게도 좋지만 내가 가르칠 사람들에게도 좋을 테니까 말이다.

필수: PHP In",웹 개발
https://surfit.io/link/KEZ8E,Reflow와 Repaint,화면을 다시 그리는 과정은 크게 Reflow(Layout이라고도 함)와 Repaint(Redraw라고도 함) 두 개로 나눌 수 있습니다.Repaint는 화면에 변화가 있을 때 화면을 그리는 과정입니다.화면의 구조가 변경되었을 때에는 Reflow 과정을 거쳐 화면 구조를 다시 계산한 후 Repaint 과정을 통해 화면을 다시 그립니다. 즉 화면의 구조가 변경,웹 개발
https://surfit.io/link/KPgZl,나만의 웹서버 구현해보기!,"웹 서버를 이야기하기 위해선 먼저 네트워크와 클라이언트-서버에 대해 알고 넘어가야 한다. 아래에서 간단하게 클라이언트-서버 모델을 살펴보자.
현대의 모든 네트워크 애플리케이션은 클라이언트-서버에 기초하고 있다.
애플리케이션은 한개의 서버 프로세스와 한 개 이상의 클라이언트 프로세스로 구성된다.
서버는 일부 리소스를 관리하고, 이 리소스를 조작해서 클라이언트",웹 개발
https://surfit.io/link/KEZx2,WeakRefs와 Finalizers 위주로 정리해본 ES2021,ECMAScript 2021 최종 스펙이 공개되었어요. 바로 쓸만한 것도 있고 언어를 조금 더 깊게 활용할 수 있는 기능들도 생겼습니다. 매해 이렇게 달라지고 개선되는 것을 보면서 좋기도 하지만 점점 이것도 무뎌지는진 건지 아니면 개선점이 와닿지 않는 건지 예전만큼 관심이나 파급효과가 적어진 것 같아요. 스펙을 보자마자 조만간 정리해야지 했지만 많은 시간이,웹 개발
https://surfit.io/link/3A9MP,자바스크립트 검색엔진 최적화(SEO) 가이드 총 정리,"자바스크립트 사용으로 인해 사이트의 랭킹이나 사용자 경험이 손상되지 않도록 하기 위해, 필수적으로 알아야 할 모든 것을 다룹니다.

What is Javascript SEO?
'자바스크립트 SEO'는 JS 기반의 웹사이트로 만들어진 테크니컬 SEO의 한 분야입니다.
검색 엔진이 완전히 크롤링, 렌더링하고 인덱싱 하기 쉽습니다.
오래된 브라우저를 포함하여 많",웹 개발
https://surfit.io/link/worVa,실제 웹사이트에서 Web Vitals 디버깅하기,"구글은 현재 Web Vitals를  측정하고 디버깅하는 두 가지 범주의 도구를 제공하고 있다.

실험실 도구(Lab tools): 다양한 조건(예를 들어 느린 네트워크나 저가 휴대폰)을 흉내 내는 시뮬레이션 된 환경에서 페이지를 로드하는 Lighthouse 같은 도구를 말한다.
현장 도구(Field tools): 실제 사용자로부터 Chrome이 수집한 데이",웹 개발
https://surfit.io/link/KykJm,XSS와 XSRF,"사이트 간 스크립팅(XSS)는 웹 애플리케이션에서 많이 나타나는 웹 취약점 공격 중 하나입니다. 웹 사이트 관리자가 아닌 다른 사람이 웹 페이지에 악성 스크립트를 삽입할 수 있는 점을 노린 공격입니다. 주로 게시판에 악성 스크립트가 담긴 글을 올리는 형태로 이루어집니다.XSS의 공격 유형은 표준으로 정해져 있지는 않지만, 비 지속적인 공격(Non-persi",웹 개발
https://surfit.io/link/Kvg66,다크모드의 의의와 웹환경에서의 구현,"어두운 컬러 계열의 배경, 밝은 컬러 계열의 텍스트 UI테마를 다크모드라 일컫습니다.
다크모드의 장점은 다음과 같습니다.
시인성(대상이 눈에 쉽게 보이는 정도)이 높아진다.
화면 전반적으로 밝은 빛이 줄고, 이미지 등의 컨텐츠와의 색 대비가 높아져, 사용자 주변의 조명 확보가 어려운 상황에서도 내용을 더 쉽게 볼 수 있게 해줍니다. 찾고자 하는 글자나 이미",웹 개발
https://surfit.io/link/3LdgV,웹 애플리케이션의 성능 고려하기,"사전적으로 성능은 기계 따위가 지닌 성질이나 기능을 뜻한다. 언뜻 봐도 포괄적이다. 이해를 돕기 위해 웹 앱의 맥락에서 성능이라 칭할 만한 요소 몇 가지를 추려 보자.
콘텐츠를 받아오는 이벤트 혹은 그에 따른 서버의 응답이 안정적으로 실행되는가?
사용자의 이목을 끌 수 있는 콘텐츠가 충분히 렌더링 되는가?
콘텐츠를 받아오는 중이거나 받아온 후에도 여전히 사",웹 개발
https://surfit.io/link/wkxJ8,You don't know polyfill,"Babel은  ES6+ 코드를 ES5로 변환하는 도구이다. 이 문장만 읽으면 Babel이 polyfill과 동일한 개념이라고 오해할 수 있지만, Babel이 곧 polyfill을 의미하는 것은 아니다. ES5에 존재하지 않는 ES6의 메서드나 생성자는 지원하지 않기 때문이다.
예를 들어 Promise, Object.assign, Array.from 등은 E",웹 개발
https://surfit.io/link/KR7m6,코로나 시대에서의 WebRTC,"코로나 시대에서 WebRTC를 가장 많이 사용하고 있다. 우리는 거의 매일 화상회를 하며, 만날 수 없는 가족들과 영상통화를 한다. 화상회의 또는 영상통화에서 가장 많이 사용하는 기술이 바로 WebRTC 이다. 대표적인 화상 회의 서비스는 Zoom 과 구글Meet 이며, 대표적인 영상통화 서비스는 페이스북 메신저 이다. 구글Meet, Zoom, 페이스북 모",웹 개발
https://surfit.io/link/wda8A,DOM(Document Object Model) Element를 다뤄보자,"웹 개발을 할 때 웹 콘텐츠의 내용과 구조를 변경하기 위해서 자연스럽게 DOM element 를 다루게 된다. 이때 가장 편하고 쉬운 방법은 innerHTML을 사용하는 것이었다.
하지만 지난 글에서는 XSS*에 대한 내용과 함께 innerHTML을 사용하는 것은 XSS에 취약하다는 이야기를 하였다.
그래서 이번 글에서는 Vanilla JavaScript에",웹 개발
https://surfit.io/link/3jPjl,"[아무튼 Sass #1] 시작하기: Sass 개념, 컴파일러 설치","프롤로그

""CSS 인생은 전처리기를 도입하기 전과 후로 나뉜다""
......이런 말은 없지만, Sass를 배우면 CSS 작성이 짱짱 편해집니다.
신입 퍼블리셔부터 스타일시트 관리를 하는 개발자까지,
Sass에 대해 한번 정도 슥- 읽어두면 도움이 많이 될 거에요!

그래서 최대한 쉽고 편하게 익힐 수 있도록 시리즈물(?!)로 글을 써봅니다.
분량이 얼마나",웹 개발
https://surfit.io/link/3GdGd,HTML <form> 잘 쓰는 법,"누군가에게는 당연한 내용일 수 있지만, form에 대해 잘 모르는 사람에게 도움이 되었으면 한다.

form은 사용자로부터 값을 입력을 받는 양식을 만들기 위해서 사용한다.
&lt;form&gt;
  &lt;label for=""name""&gt;닉네임 :&lt;/label&gt;
  &lt;input type=""text"" name=""name"" id=""name",웹 개발
https://surfit.io/link/KynJo,Playwright로 E2E 테스트 작성하기,"목차
Playwright는 무엇인가?

주요 개념
브라우저
컨텍스트
페이지와 프레임
선택자
자동 대기

TOAST UI 캘린더에 playwright 적용해보기
결론
Playwright는 무엇인가?
하나의 API로 모든 최신 브라우저(크로미움, 파이어폭스, 웹킷)에서 빠르고, 안정적인 자동화를 지원하는 MS에서 만든 자동화 도구다. 안타깝게도 레거시 Edge",웹 개발
https://surfit.io/link/wWY4b,웹브라우저에서 동작하는 녹화앱 만들기,"웹브라우저에서 제공하는 API를 사용하여 간단하게( 100줄 이내의 자바스크립트 코드) 녹화 기능을 구현하는 방법을 소개합니다.예제를 통해서 아래의 이미지와 같은 페이지를 작성합니다.카메라에 찍히는 화면을 실시간으로 확인카메라에 찍히는 화면을 녹화 (녹화 시작, 녹화 종료)녹화된 영상 미리보기녹화된 영상을 다운로드결과물이 궁금하시면 아래의 링크를 클릭해 주",웹 개발
https://surfit.io/link/wZDQb,SVG 아이콘 백그라운드 이미지로 활용하기,"얘는 벡터 그래픽이라 다양한 크기로 표현할 수 있고, 코드이기 때문에 색상값을 필요할 때마다 달리 줄 수도 있습니다.
SVG를 백그라운드 이미지로 넣으면 이미지 파일 없이도 멋진 아이콘을 보여줄 수 있습니다.

그럼 이렇게 보여지게 됩니다 :)
이 스킨에서도 SVG를 활용해 아이콘을 표시하고 있어요!




SVG 준비하기
SVG란?
SVG(Scalable",웹 개발
https://surfit.io/link/3OM7r,node modules splitting,"library를 어떻게 build하는지에 따라 초기 페이지 로딩 속도가 크게 좌우될 수 있습니다.
이 글에서는 webpack의 splitChunk 옵션을 수정하여 node module을 여러 개의 bundle file로 나눌 수 있는 방법에 대해 소개합니다.

사용되는 모든 코드는 이 저장소에서 확인하실 수 있습니다.

cacheGroups
주요하게 수정할",웹 개발
https://surfit.io/link/KRjen,Styled-components Typescript 적용하기 (+Media query),"타입스크립트를 styled-components 와 제대로 사용해보도록 하겠습니다.
초기설정테마설정테마로 사용할 폰트, 색상, 레이아웃 등을 선언해줍니다.
src/styles/theme.ts12345678910const color = {  white: ""white"",  black: ""black"",};export const theme = {  color,};e",웹 개발
https://surfit.io/link/wWqpQ,"버튼에 타입을 쓰는 이유 (button type=""button"")","도대체 타입은 왜 달려있는가! 그 이유를 한번 찾아보았습니다 -


button의 type에는 3가지 값을 지정해 줄 수 있는데 각각 submit, reset, button입니다.만약 아무런 값도 지정하지 않았다면 기본값은 submit이 됩니다.
그러니까 &lt;button&gt;&lt;/button&gt; === &lt;button type=""submit",웹 개발
https://surfit.io/link/5lRpo,Wasm 간단 사용기,"대부분의 웹 프론트 개발자가 wasm 에 흥미를 느끼는 이유는 빠른 성능 때문일 거라고 생각합니다. 저 또한 그러한데요. 그래서 wasm 를 어떻게 만들어야 할까? 어떻게 적용해야 할까? 하는 생각을 어렴풋이 하고 있었습니다.어떻게든 한번 만들어 봐야 감이 올 거 같아서, wasm 을 컴파일할 수 있는 언어를 먼저 배워야겠다고 생각했죠. 그 와중에 Rust",웹 개발
https://surfit.io/link/KYbrj,Babel,"바벨은 ES6+ 버전 이상의 자바스크립트나 JSX, 타입스크립트 코드를 하위 버전의 자바스크립트 코드로 변환 시켜 IE나 다른 브라우저에서 동작할 수 있도록 하는 역할을 합니다. 공식 홈페이지에서는 이러한 바벨을 컴파일러라고 소개하지만, 엄밀히 말하면 컴파일러는 아닙니다. 컴파일러는 사람이 작성한 코드를 컴퓨터가 이해할 수 있도록 머신 코드로 바꿔주는 프로",웹 개발
https://surfit.io/link/KyjQB,JPEG vs. PNG: 적절한 이미지 포맷 선택하기 (2) - PNG편,"PNG 역시 웹에서 널리 사용되는 이미지 포맷 중 하나입니다. JPEG와 마찬가지로 픽셀로 이루어진 비트맵 그래픽이기도 하고요.



이름은 Portable Network Graphics의 약자로, 말그대로 ‘인터넷’에서 표현될 이미지를 염두에 두고 개발되었습니다.따라서 RGB가 아닌 색 공간(CMYK 등)은 지원하지 않습니다.


PNG 역시 24비트 이",웹 개발
https://surfit.io/link/wm4vo,웹 서비스가 사용자를 판별하는 법,"Google, Amazon, Facebook 등과 같은 가장 인기있는 웹사이트들이 WebGL fingerprinting을 하고 있다는 점이었습니다. 사실 어찌보면 이런 큰 규모의 서비스들은 당연히 할 것 같긴 하네요.ㅎㅎFingerprinting 하는 이유  일반적으로 웹 기반 서비스를 운영한다고 할 때, 인증을 원하는 주체는 사용자입니다. 그렇기 때문에 ",웹 개발
https://surfit.io/link/3qNE1,JPEG vs. PNG: 적절한 이미지 포맷 선택하기 (1) - JPEG편,"이미지는 웹페이지에서 많은 부분을 차지하는 리소스입니다. 따라서 용량이 적을 수록 당연히 좋죠.그래서 이미지를 표시할 때 적절한 포맷을 택하는 것이 여러모로 중요합니다.웹에서 사용하는 주 이미지 포맷은 JPEG와 PNG일 텐데, 그럼 둘 중에 뭘로 저장하는 게 좋을까요?


저는 기존까지 이렇게 알고 있었는데요,
JPEG → 복잡한 이미지나 사진 
PNG ",웹 개발
https://surfit.io/link/5lRG6,Rollup.js 환경설정,"Rollup.js은 webpack이나 parcel과 같이 크고 복잡한 코드의 모듈(파일)을 라이브러리나 어플리케이션으로 만들어주는 번들러입니다.
Config
rollup.js에는 많은 플러그인과 옵션을 설정할 수 있습니다. es(ES module) 형식과 cjs(Common JS)형식을 지원하는 rollup.config.js 는 다음과 같이 구성할 수 있습",웹 개발
https://surfit.io/link/3LXZz,"CSS-in-JS, 무엇이 다른가요?","Table of Contents
CSS in JS?
Critical CSS와 CSS-in-JS
Performance
Atomic CSS
마무리
References
CSS in JS?

      
  

  https://css-tricks.com/a-thorough-analysis-of-css-in-js
CSS-in-JS는 단어 그대로 JavaScript",웹 개발
https://surfit.io/link/3GR2d,기술부채가 쌓여있는 상황에서 서비스 성능 임팩트 있게 개선하기,"레거시 코드들은 1년이 지날 즈음부터 변화에 대한 비용이 급증하게 됩니다. 코드 작성자가 퇴사하거나 퇴사하지 않았더라도 기억이 나지 않는 경우가 많기 때문이죠. Class101의 서비스는 많은 부분이 유기적으로 의존하고 있는, 아직은 Monolithic에 가까운 상태였고 이렇게 엉켜있는 로직들을 모두 건드리는 것은 불가능했습니다.
그래서 일단은 지표에 집중",웹 개발
https://surfit.io/link/KyjXX,브라우저에서 미디어 권한을 다루는 간단 tip,"웹사이트 서핑을 하다 보면 브라우저가 어떤 권한을 요청할 때가 있습니다. 비대면 회의 방식으로 인해 예전보다 더 많은 사람들이 사용하고 있는 Google Meet과 같은 서비스에 처음 접근하게 되면 브라우저는 해당 서비스에서 사용하게 될 미디어와 관련된 권한을 묻습니다. 때에 따라 그 권한은 마이크, 비디오 혹은 둘 다로 달라집니다. 사용자는 이 질문에 권",웹 개발
https://surfit.io/link/50qVo,JWT(JSON Web Token)에 대해 알아보자,"JWT 는 유저를 인증하고 식별하기 위한 토큰(Token)기반 인증이다. 토큰은 세션과는 달리 서버가 아닌 클라이언트에 저장되기 때문에 메모리나 스토리지 등을 통해 세션을 관리했던 서버의 부담을 덜 수 있다. JWT 가 가지는 핵심적인 특징이 있다면, 토큰 자체에 사용자의 권한 정보나 서비스를 사용하기 위한 정보가 포함된다는 것이다. 데이터가 많아지면 토큰",웹 개발
https://surfit.io/link/wn1PN,"Webpack 5, 무엇이 달라졌을까?","이 글은 webpack5 Release 글을 정리한 글이며, 원글의 몇 가지 내용은 포함되지 않았습니다. 모든 변경사항을 알고 싶으신 분은 원글의 내용을 참고해주세요. v4에서 v5 migration에 대한 가이드는 이 글에 정리되어 있습니다.
Breaking Changes의 의미
webpack 내부 아키텍처를 업데이트하고 향후 추가될 기능을 위한 기반을 ",웹 개발
https://surfit.io/link/wJNYV,모킹 통합관리와 cypress의 모킹 on/off 기능,"모킹 데이터는 테스트를 실행하기 위해 실제 데이터가 아닌 개발자가 필요에 의해서 만든 데이터를 말한다. 그렇다면 모킹 데이터를 사용하는 목적은 무엇일까? 
e2e 테스트 환경에서 실제 데이터가 유동적으로 변경돼서 기댓값을 비교하기 어려운 경우 
UI 테스트 환경에서 실제 데이터로 다양한 데이터 표현을 확인하기 어려운 경우 
이렇게 테스트 코드마다 모킹 데이",웹 개발
https://surfit.io/link/K2bej,Airbnb의 Server-Driven UI,"Server-Driven UI (SDUI) 는 말 그대로 화면에 보여지는 UI 렌더링을 클라이언트가 아닌 서버위주로 진행한다는 의미입니다. 이러한 것은 예전부터 니즈는 많았습니다. 특히나 Web은 그 특성 상 배포 결과가 바로 반영될 수 있기 때문에 앱 서비스에서 이러한 요구사항이 많았죠. 빠르게 UI를 변경시키고 싶은데, 그렇게 하려면 새로 버전 업데이트",웹 개발
https://surfit.io/link/K2y6p,"개발자 여러분, 디자인시스템 지금 바로 도입하세요!","먼저, 디자인을 하는 단계에서부터 '비슷하지만 다른' 디자인을 생산하는 일이 완전히 사라졌습니다. 디자인 단계에서부터 컴포넌트 기반으로 작업하기 때문에 디자이너와 소통이 원활합니다.
이후 프로세스도 좋아집니다. 디자인 시스템이 없다면, 개발자가 스스로 '이건 재사용 할 수 있게 만들어야겠다' 하고 판단해서 컴포넌트를 만듭니다. 반복된다면 디자이너에게 '이건",웹 개발
https://surfit.io/link/3qvEp,OAuth 개념 및 동작 방식 이해하기,"1. OAuth란?

웹 서핑을 하다 보면 Google과 Facebook 및 Twitter 등의 외부 소셜 계정을 기반으로 간편히 회원가입 및 로그인할 수 있는 웹 어플리케이션을 쉽게 찾아볼 수 있습니다. 클릭 한 번으로 간편하게 로그인할 수 있을 뿐만 아니라, 연동되는 외부 웹 어플리케이션에서 Facebook 및 Twitter 등이 제공하는 기능을 간편하",웹 개발
https://surfit.io/link/KQMzo,Headless UI Library란?,"UI를 컴포넌트로 만들기 전에 다음 세 가지를 먼저 고민하자.
UI가 내포하고 있는 상태는 무엇인지
상태를 관리하기 위한 적절한 자료구조는 무엇인지
컴포넌트를 사용하는 인터페이스는 어떻게 노출할 것인지



      
  

달력은 꽤 흔하게 볼 수 있는 사용자 인터페이스다. 담당하고 있는 제품에 달력을 만들어야 한다면 보통 처음부터 만들기 전에 사용하기",웹 개발
https://surfit.io/link/59bk7,선언적으로 에러 상황 제어하기,"API에서 내려오는 status code 말고 다른 값이 필요하다. 에러를 구체화하기 위한 errorCode도 좋고 의도한 에러인지 아닌지에 대한 flag 값도 좋다.
export function isExpectedError&lt;T&gt;(res: unknown): res is ExpectedError {
  if (typeof res !== 'objec",웹 개발
https://surfit.io/link/3NXDP,Lighthouse 사용법,"Lighthouse는 구글에서 개발한, 웹 페이지의 품질을 개선할 수 있는 오픈 소스 형태의 자동화 도구이다. 어떤 웹 페이지든 (그것이 공개되었든, 인증이 필요하든) 사용할 수 있다.

Lighthouse is an open-source, automated tool for improving the quality of web pages.

📈 Lightho",웹 개발
https://surfit.io/link/wJ6oN,"클래스101의 디자인 시스템, One Product System","이 글은 클래스101 프론트엔드 챕터의 주간 미팅에서 새로운 디자인 시스템을 소개하고, 앞으로의 개발 방향을 설명하기 위해 작성했습니다.
디자인 시스템을 도입한다는 것은 본질적으로는 디자인에 제한을 둔다는 것입니다. 디자인 시스템을 도입하면 컴포넌트를 입맛대로 변형할 수 없습니다. 예를 들어, Button 컴포넌트는 sm, md, lg, xl의 4가지 크기",웹 개발
https://surfit.io/link/w6xGM,웹 호스팅,"콘텐츠 리소스를 저장, 중개, 관리하는 일을 통틀어 웹 호스팅이라 한다.
필요한 하드웨어나 소프트웨어를 직접 관리하기 어렵다면,호스팅 서비스나 호스팅 업체가 필요할 것이다.
호스팅 업체는 서버와 웹 사이트 관리 프로그램을 대여해주고다양한 등급의 보안, 리포트, 사용 편의를 제공한다.
웹이 빠르게 대세가 되면서,모든 사람이 웹 사이트를 원했지만,냉난방 장치가",웹 개발
https://surfit.io/link/KQMVn,엔터프라이즈 프론트엔드 애플리케이션 아키텍쳐,"소프트웨어의 수명과 복잡도는 대개 비례 관계입니다. 아무리 정교하고 아름답게 코드를 작성해도, 시간이 지날수록 코드베이스는 복잡해지기 마련입니다. 그래서 우리는 이런 문제들을 마법같이 해결해 줄 방법들을 찾아다닙니다. 이 글에는 클래스101에서 수십 명의 개발자가 하나의 애플리케이션을 함께 만들어 갈 때 발생하는 문제들을 해결하기 위한 우리의 고민을 담았습",웹 개발
https://surfit.io/link/3APl7,WebAssembly 개발기,"WebAssembly는 2015년부터 개발된 기술로 2017년에 처음 발표되었습니다. 현재는 W3C WebAssembly Working group과 Community Group 서 웹 표준으로 개발 되고 있습니다.



IE11을 제외한 최신 브라우저에서 대부분 사용 가능하며 기존 JS로 개발되던 패러다임을 떠나, C, C++, Rust를 사용한 효과적이면",웹 개발
https://surfit.io/link/3x9Wj,Chromium이 발표한 RenderingNG가 무엇인가?,"RenderingNG는 Chromium의 차세대 렌더링 아키텍쳐다. RenderingNG의 가장 큰 목적은 크로스 브라우저 이슈를 최대한 없애고 안정적인 렌더링 성능을 구현하는 것이다.
어느 순간 짜잔하고 ""우리가 새로운 걸 가져왔어. 한번 써볼래?""는 아니다. Chromium 기반의 브라우저를 사용하고 있는 지난 8년에 걸쳐서 차곡차곡 개선하고 적용해 온",웹 개발
https://surfit.io/link/KQY76,"웹 사이트 성능 최적화, 새로운 경험","페이지를 동작할 수 있을때까지 4초를 넘어가게 되면 사용자는 적지 않은 불쾌감을 느끼게 되며, 더욱 심각한 건 사이트에 대한 불신이 생길 수도 있습니다. 특히, 한번 이탈한 사용자는 언제 돌아올지 알 수 없습니다. 불쾌하더라도 정말 보고싶은 콘텐츠나 사용하고 싶은 서비스가 있기 전까진 말이죠.(좋은 서비스를 만드는 건 다른 얘기입니다!!)



사람인 모바",웹 개발
https://surfit.io/link/KbMQe,메시지 큐를 이용한 비동기처리 및 에러 처리,"비동기 방식은 요청을 보낸 후 비즈니스 로직이 처리가 완료되지 않은 상태에서 다음 로직을 진행한다.


서버로 전달된 요청은 나중에 처리되며 나중에 클라이언트로 응답이 전달된다. (응답을 전달하지 않을 때도 있다.)


동기식 방식과 비동기식 방식의 가장 큰 차이점은 동기식 방식은 응답이 올 때까지 클라이언트가 대기하는 것이고, 비동기식 방식은 요청만 보내",웹 개발
https://surfit.io/link/5loVk,"시계를 만들자 (HTML, CSS, JS)","결과물 확인 링크
전체 코드 링크

Udemy 강의를 듣던 중 relaxer app이라는 프로그램이 작동하는 원리를 보고 이 원리를 이용하면 시계를 만들 수 있지 않을까 생각했다.
relaxer app 링크

✔ 원 만들기
index.html
&lt;div class=""container""&gt;
  &lt;div id=""circle1"" class=""circ",웹 개발
https://surfit.io/link/3Nzx8,구글설문지 제출시 결과를 DB로 자동 수집하기,"취합되는 설문 제출 결과들을 엑셀이 아니라 데이터베이스에 바로 저장할 수 있다면 이를 이용한 자동화 시스템을 보다 수월하게 구축할 수 있을 것입니다.
이 글에서는 특별히 구글 설문지 양식이 제출될 때의 이벤트를 이용해 설문지 응답결과를 api 호출을 통해 DB에 자동으로 적재하는 방법에 대해 소개합니다.
Google Apps Script
제가 소개하고자 하",웹 개발
https://surfit.io/link/3AV1g,모바일 UI･UX 디자인 시 고려해야 할 가이드라인 48가지,"본 포스팅은 최철호님의 모바일 UI･UX 디자인 시 고려해야 할 가이드라인을 정리한 글입니다. 요약의 목적으로 작성했습니다.


이 가이드는 바이블이 아닙니다. 절대적인 원칙은 없으므로 무조건적으로 지킬 필요는 없습니다. 단지 모바일에서 최적의 UX 디자인을 하기 위해서 고려해야 할 사항이 어떤 것인지 참고만 하시고 디자인하시면 됩니다.

모바일 앱과 웹 ",웹 개발
https://surfit.io/link/KbWWo,HTTPS에 대해 알아야 할 것들,"SSL 인증서를 구매해서 서버에 설치하면 끝나는것이 아니라, 좀 더 HTTPS 프로토콜과 작동방식으로 이해하면 어떻게 우리 사이트에 신뢰성을 주는지, 그리고 제대로 알고 적절한 설정을 하여야만 문제 발생을 없애고 신뢰성을 높일 수 있어 리서치하고 조사한 내용을 공유합니다.
HTTPS 현황
좀 지난 자료지만, Measuring HTTPS Adoption on",웹 개발
https://surfit.io/link/3q7VO,웹소켓에 대해 알아보자,"웹 개발을 처음 배우기 시작했다면 서버와 클라이언트의 통신은 모두 HTTP 프로토콜만 이용해서 이루어진다고 생각할 수 있습니다.
하지만 웹 개발을 하면서 채팅, 게임, 주식 차트 등의 실시간 통신이 필요한 서비스를 구현하려 하면 HTTP 프로토콜이 아닌 웹소켓 프로토콜을 사용하는 것이 좋다는 이야기를 흔히 찾아볼 수 있습니다.
저도 채팅을 구현하며 웹소켓에",웹 개발
https://surfit.io/link/KrE0b,초보 웹 개발자를 위한 학습 안내서,"많은 회사가 개발자가 부족하다고 하는데, 신입 개발자는 취업이 어려운 게 현실입니다. 아무래도 예전보다 개발자에게 원하는 요구사항이 많아졌고, 경력 있는(?) 신입이나 특별한 교육이 필요 없는 개발자를 찾기 때문인 것 같습니다.

예전에라떼는 Git이나 GitHub 같은 버전 관리 시스템도 없고 JavaScript는 마우스 오버 시 버튼의 이미지 바꾸는 정",웹 개발
https://surfit.io/link/w8ZdZ,CORS(Cross Origin Resource Sharing) 서버 구현,"Vue.js 프레임워크를 사용한 웹 어플리케이션과 Spring boot 프레임워크 서버를 통해 CORS에 대한 테스트를 진행해보겠습니다. 
front-end 프로젝트는 새롭게 만들었고, back-end 프로젝트는 지난 HandlerMethodArgumentResolver 인터페이스 포스트에서 사용한 프로젝트를 확장하여 사용하였습니다. 
새로 추가되거나 변경",웹 개발
https://surfit.io/link/3jkB9,React에서 선언적으로 비동기 다루기,"Suspense와 ErrorBoundary를 사용하여 비동기 컴포넌트를 보다 효율적으로 처리하는 컴포넌트를 소개합니다.
Table of Contents
명령형으로 처리하기

선언형으로 처리하기
Suspense
ErrorBoundary


비동기 컴포넌트 Wrapper
AsyncBoundary


우리에게 익숙한 명령형으로 비동기 처리와 에러 처리하는 부분에",웹 개발
https://surfit.io/link/wJ4bL,"Svg로 Rounded rect형태의 progress bar 만들기 (feat. animation, path)","svg는 형태를 만들고, 그 안을 fill로 채울 수 있다. prgress bar에서의 100%를 향해 채워지는 형태로 생각해보았다.
현재 svg에는 색상을 나눌 수 있는 속성은 따로 없다. 대신 그라데이션 효과를 사용하면(linear gradient) fill에 2가지 이상의 색상을 줄 수 있다. 그라데이션은 2가지 이상의 색상을 정의하고, 색상의 pos",웹 개발
https://surfit.io/link/3LB8W,Github packages 활용,"여러 프로젝트에서 반복적으로 사용되는 공통모듈이 있다면 Don’t repeat your code 원칙에 따라 npm 모듈로 빌드해서 배포하고 싶을 것이다. npmjs 를 통해 패키지를 만들고 배포할 수 있지만 npmjs 는 비공개 레포의 패키지 지원에 대해서는 유료 플랜을 제공하고 있다.
이에 따른 대안으로 Github pagkages 가 좋은 대안이 될 ",웹 개발
https://surfit.io/link/wWWp8,그림으로 쉽게 보는 TCP,현재 우리는 데이터를 패킷(Packet)이라는 작은 조각으로 쪼갠 뒤 주고받고 있습니다. 원래 패킷은 우체국의 소포를 의미하는 말인데 데이터를 전송하기 쉽게 쪼갠 모습이 화물을 적당한 크기로 분할한 소포와 비슷해 붙여진 이름입니다. 아무튼 이렇게 패킷으로 쪼개는 이유는 만약 무거운 데이터를 통으로 보낸다면 가는 도중 회선에 문제가 생길 때 다시 전송하기 위,웹 개발
https://surfit.io/link/wZQnR,TypeScript로 NPM 모듈을 만들어 배포하기,"이 글에서 우리는 JavaScript 개발자와 TypeScript 개발자 양쪽 모두가 사용 할 수 있는 TypeScript 모듈을 만들어 볼 것입니다.

대부분의 npm 모듈은 Type 정의를 포함하고 있지 않기 때문에, TypeScript 개발자들은 보통 npm i @types/&lt;module_name&gt; -D의 추가적인 명령으로 npm 모듈을 사",웹 개발
https://surfit.io/link/K2jDd,클라이언트의 사용자 중심 예외 처리,"웹 클라이언트 환경에서 에러가 발생한다면 어떤 상황에서 발생할까? 어떤 종류의 에러가 발생할까?
네트워크 에러
서버 API로부터 받는 에러
사용자 브라우저 환경 에러
…
여러 가지 에러를 만날 수 있다. 하지만 이 에러들은 일단 두 가지로 분류할 수 있다.
언제 어떻게 발생할 지 알고 있는, 예상 가능한 에러 (Expected Error)
언제 어떻게 발생",웹 개발
https://surfit.io/link/3q2GD,HTTP Keep-Alive,"HTTP 통신은 비연결성 특징으로 인해 매번 연결을 생성해야 하므로 네트워크 측면에서 불필요한 비용이 필요하게 됩니다. 
이를 개선하기 위한 방법으로 'Keep-Alive' 기능을 사용합니다.

Keep-Alive 기능Permalink
3-Way Handshake를 통해 연결된 세션을 없애지 않고 계속 사용하는 방식입니다. 
서버는 클라이언트와 맺은 연결을",웹 개발
https://surfit.io/link/KgA4P,LINE에서 하루 만에 정적 웹 페이지 개발해서 배포하는 방법,"정적 웹 페이지의 구조는 단순하지만 만드는 과정은 전혀 단순하지 않습니다. 개발 환경을 설정하고 디자인을 구현하는 마크업 작업을 해야 하고 필요한 인터렉션이 있다면 JavaScript 작업도 추가로 필요합니다. 이와 같은 과정을 거쳐 프런트엔드 영역에서 소스 코드를 작성하고 나면 작성한 소스 코드를 그대로 배포하면 되느냐, 그렇지 않습니다. HTML과 CS",웹 개발
https://surfit.io/link/KrkG6,CSS 개선을 위한 10가지 방법,"CSS를 위한 10가지 팁 — 스타일을 잘 쓸 수 있도록 도움이 되는 모법 사례를 준비해보았습니다.


그저 웹사이트의 스타일 규칙들을 추가만하면 끝납니다.
CSS 파일이 많이 필요로 하지 않는 작은 사이트에는 단순히 규칙 추가만 하면 되기도 합니다.

가장 먼저 CSS 프레임워크가 필요한지 안한지 결정하세요.여러 프레임워크들을 대신할 많은 대안이 있습니다",웹 개발
https://surfit.io/link/50xvz,Offscreencanvas 적용기,"canvas를 처리하는 로직을 이름처럼 화면 밖(off screen)에서 처리할 수 있도록 하는 API입니다. 이 API를 이용하면,, DOM 엘리먼트인 canvas를 떼어내서(detach) Web Worker에서 처리함으로써 Main thread에서 동작하던 캔버스 코드를 Worker thread에서 실행해서 성능을 향상시킬 수 있습니다.







4",웹 개발
https://surfit.io/link/5zAn1,Semantic Web에 대해 더 깊이 알아보기,"SEO에 유리해지려면 그 중 하나의 전략으로 웹페이지를 Semantic하게 적용하는 방법이 있다. 오늘은 기존 페이지에서 Semantic Tag를 사용하면서 기준을 조금 더 명확하고 구체적으로 블로그에 정의해보려고 한다.
특히 Semantic Tag를 실제로 적용해보면서 고민했던 것과 팁을 함께 내용에 적어두었다. Semantic Tag에 대한 정의는 많지",웹 개발
https://surfit.io/link/3GQok,번들링도 미니멀리즘이 필요하다: Tree Shaking,"쓰지 않는 코드를 제거하여 파일의 크기를 줄일 수 있다면 어떨까요?





Tree Shaking이란
그런 역할을 가능하게 하는 게 Webpack4부터 제공하는 트리 셰이킹(Tree Shaking)입니다. 이름에서도 알 수 있듯 쓰지 않는 코드들을 DOM트리로부터 제거하는 기능입니다. 나무로 따지면 가지치기라고도 볼 수 있겠네요.
webpack에서는 번들",웹 개발
https://surfit.io/link/K241P,CSS 변수와 웹사이트 테마,"동적 테마는 요점 쉽게 찾을수 눈에 보이는 즐거움만이 다가 아니다. 하루 종일 화면을 보고 있다가 저녁이면 다크모드로 변화하는 것이 눈을 덜 피로하게 하는 것 같다.
구현하는 방법 중에 하나로 CSS 변수(CSS Variable)를 사용하는 글을 여러번 보았는데 한 번 정리해 봐야겠다.

      
    
  
    
    dark-theme
CSS",웹 개발
https://surfit.io/link/KvAkD,웹 퍼포먼스 개선을 위한 Lighthouse CI 도입기,"웹페이지의 퍼포먼스를 지속적으로 개선하기 위해서는 측정할수 있는, 수치화된 지표가 필요합니다.



이 지표로 저희 팀에서는 Web Vitals 를 따르고 있습니다.



Web Vitals란 구글에서 제안하는, 더 나은 웹페이지를 개발하기 위한 가이드라인으로, 아래에서 설명할 세가지 핵심 지표들을 포함하고 있습니다.



LCP(Largest Conten",웹 개발
https://surfit.io/link/w4ZBP,웹팩 빌드 속도 개선하기,"얼마전 부쩍 프로덕트에 빌드속도가 느려지는 일이 있었다. 평소 5분정도면 넉넉히 끝나던게 20분 가까이 소요되기 시작했다.
이는 많은 삶의질의 하락을 가져왔고 이를 개선하는 과정을 기록으로 남겨두려 한다.

TL; DR
vue-cli의 report-json 옵션을 활성화 했을때
  webpack-bundle-analyzer의 소요시간이 너무 길다면,
  w",웹 개발
https://surfit.io/link/wmAVe,주니어 FE 개발자 오픈소스 성장기,"‘Techtalk’에서 발표했던 오픈소스 활동 소개와 오픈소스 활동을 통해 개발자로서 성장했던 이야기를 공유하고자 합니다.























저는 다양한 오픈소스 활동을 하고 있습니다. 아래 이미지는 Github 커밋 기록인데요, 카카오에 입사한 2019년을 시작으로 지금까지 꾸준히 활동하고 있습니다. 현재는 Rome과 ESLint라",웹 개발
https://surfit.io/link/KRPdl,당신이 모르는 자바스크립트의 메모리 누수의 비밀,"크롬 개발자도구로 하는 디버깅과 해결책을 찾아서!
인터뷰하는 동안 다음과 같은 질문을 받아 본 적이 있는가? 웹 페이지가 멈추는 경우, 원인이 뭐라고 생각하는가? 원인을 찾아서 해결할 방법이 없을까?
이 질문은 난도가 있는 질문으로 페이지 성능 최적화 문제와 많이 연결된다. 필자는 면접 때 이 질문에 어떻게 대답했는지 아직도 기억이 난다.
먼저 네트워크 요",웹 개발
https://surfit.io/link/KEbYZ,"프레임워크의 선택, React vs Angular #Front-End개발","저는 이번에 신규 프로젝트의 Front-End(FE) 개발을 혼자 진행하게 되었습니다. 혼자 개발을 하다 보면 자칫 외로운 싸움이 될 수 있는데, 혼자 개발하면서 고민한 부분들을 이렇게 정리하고 공유하면 재미있을 것 같다는 생각이 들어서 포스팅을 작성하게 되었습니다. 앞으로 제가 진행하고 있는 신규 프로젝트 개발 과정을 차례대로 소개할까 합니다.
혼자 프로",웹 개발
https://surfit.io/link/3LBbD,"Webpack 3 에서 Webpack 5 으로, ― 티도리 프레임워크","현재 티도리 프레임워크는 Webpack 3 를 기반으로 동작하고 있다. 최근 Webpack 5 로 업그레이드하는 작업을 진행하고 있는데, 그 와중에 당연히 시행착오도 여럿 발생하고 있어 내가 했던 삽질을 바탕으로 웹팩을 업그레이드하기 위해 겪어야 할 과정을 공유하고자 한다. 본론으로 가기 전에 먼저 이야기 하자면, 꼭 필요한게 아니라면 웹팩 업그레이드는 권",웹 개발
https://surfit.io/link/31kbE,focus blur 효과로 돋보기 놀이하기,"이번 시간에는 focus blur 효과를 이용해 돋보기 놀이를 해보자!





1) html

전체를 감싸는 부모를 만들기 위해 &lt;section class=""wrap""&gt;을 선언한다.
section의 자식으로 box1, box2, circle을 생성한다.
circle은 미리보기에 있는 돋보기 역할을 한다.
두 box클래스는 같은 이미지와 자식을 ",웹 개발
https://surfit.io/link/59z9r,[Webpack] 웹팩 개념 알아보기,"웹팩에 대해 들어본 적은 있지만 제대로 공부한 적은 없어서 이번에 개념부터 차근차근 공부하며 정리해봤습니다!
웹팩이란 무엇인지, 왜 사용하는지부터 시작해서 어떠한 장점이 있는지 전반적인 개념에 대해 알아보고 정리했습니다 🤔

1. Webpack 등장 배경 ✨
1-1. 페이지 로딩 속도 저하 🚶‍♀️

웹 사이트를 개발할 때 JS, CSS, IMG 등 수많은",웹 개발
https://surfit.io/link/59e7q,쿠키(Cookie)와 세션(Session),"웹 서버 개발에 기본적인 개념인 쿠키(Cookie)와 세션(Session)에 대해서 정리해보도록 하겠습니다. 
쿠키와 세션에 대해 정리하기 전에 우선 HTTP(Hyper Text Transfer Protocol) 통신의 stateless 특징이 무엇인지 알아보겠습니다.

HTTP 통신의 stateless 특징Permalink
쿠키와 세션을 사용하게 된 배경",웹 개발
https://surfit.io/link/wovr0,셰이더로 하프톤(Halftone) 만들어보기,"GLSL을 통해 Halftone 효과를 구현한 이미지 입니다.
개요
위 이미지에 보이는 하프톤 효과를 셰이더를 통해 구현해봅시다.
기본적으로 threejs를 사용합니다.
이번에 배울 내용은
셰이더의 전반적인 이해
fract, floor 함수에 대해서
1. Setup
https://github.com/KimByungChan/threejs-playground
",웹 개발
https://surfit.io/link/50XxE,CSS flexbox 톺아보기 - 2. 자식 요소 속성,"이번 포스트에서는 자식 요소에 적용하는 속성에 대해 알아보겠습니다.


자식 요소 속성
order
자식 요소 간 순서를 정의하는 속성입니다. 기본값은 0이며 z-index와 동일하게 값이 작아질수록 최상단에 위치합니다.
li {     order: 0; /*default*/ }




flex-grow
부모 요소에 여분의 공간이 있을 때, 자식 요소의 너비",웹 개발
https://surfit.io/link/wJRzq,CSS flexbox 톺아보기 - 1. 부모 요소 속성,"Flexbox는 브라우저의 크기 혹은 요소의 크기가 동적이거나 명시되지 않은 경우에 문서 내의 공간에 대한 배치, 정렬 및 분산을 효율적으로 작업할 수 있게 돕는 CSS 모듈입니다. 단순하게 말하자면 반응형 웹과 같이 레이아웃의 유연성이 요구되는 상황에서 필요한 모듈이라고 볼 수 있죠.
인터넷 익스플로러 11부터 사용이 가능하기 때문에 이전 버전을 지원하기",웹 개발
https://surfit.io/link/wm1XO,네이버와 카카오의 QR 체크인 페이지 비교해보기,"코로나 19가 국내에 창궐한 지도 어느덧 1년이 넘었습니다. 이러한 시대적 상황에 맞추어, 지난 1년 동안 우리나라에서도 코로나 19와 관련한 여러 서비스가 만들어졌습니다.

그중에서도 현재까지 유용하게 쓰이고 있는 서비스가 있습니다. 사람이 여러 명 모이는 장소라면 어디를 가더라도 무조건 사용해야 하는 서비스, 바로 QR 체크인입니다.

QR 체크인

전",웹 개발
https://surfit.io/link/50XWo,JWT 원리와 장단점,"JWT를 이용하여 로그인을 구현하는 것은 부트캠프 1주차에 이미 해 본 경험이 있다. 하지만 흐름을 정확히 이해하지 못한 채 구현했다는 생각이 들었다. 위에서 말한 조건에 부합하지 못했던 것이다. 그래서 나는 공부를 해야만 하는 이유를 만들기로 했다.매주 가지는 지식공유 시간에 JWT를 주제로 발표해보겠다 자원한 것이다.
목차

비교

사용자가 이미 회원가",웹 개발
https://surfit.io/link/woov9,웹 동작 과정과 React의 탄생,"우리가 웹을 공부할 때 가장 먼저 배우는 것, HTML CSS Javascript 입니다. 기본 틀(마크업)은 HTML로 만들고, CSS로 옷(스타일)을 입히며 Javascript로 웹에 활기(동적으로 제어)를 불어넣어 줍니다. 

위의 그림은 이 셋이 어떻게 뭉쳐서 웹 페이지를 구성하는지 보여줍니다. 순서대로 차근차근 짚어볼게요!

웹 페이지가 렌더링 되",웹 개발
https://surfit.io/link/Ky7N0,IndexedDB 를 활용한 풀필먼트 시스템 고도화,"현재 브랜디에서 헬피셀러들에게 제공하고 있는 풀필먼트 시스템 내, IndexedDB 가 적용된 부분을 일부 소개하고 추가로 적용하면 좋을 부분이 있는지 검토해봤습니다.


IndexedDB 란
  풀필먼트 시스템에 적용된 IndexedDB
  추가 적용에 대한 검토
  마무리
1. IndexedDB 란

IndexedDB에 대한 소개는 MDN(링크)에 잘 ",웹 개발
https://surfit.io/link/wWp6A,웹은 어떻게 동작할까? - 1. 사용자가 웹페이지를 보기까지,"이번에 SPA을 공부하면서 내가 웹 페이지의 동작 원리에 대해서
제대로 모르고 있다는 생각이 많이 들어 한번 총 정리를 해보려 한다.
😵 내가 오해하고 있던 부분
클라이언트는 서버로부터 html 파일만 가져온다?
오해하고 있던 부분이었다.
위 이미지는 로또 발급 페이지에 접근하면 가져오는 파일들의 목록들이다.
로또 발급 페이지는 index.html을 가져오",웹 개발
https://surfit.io/link/3xGvg,CSS 변수 합성의 강력함,"많은 프런트엔드 개발자들이 CSS가 얼마나 강력한지 간과할 때가 있다. 필자 역시 CSS만으로도 특정 작업을 처리할 수 있다는 것을 떠올리기 전에 항상 다른 것을 먼저 고려하던 사람들 중 한 명이었다.
그리고 몇 주 전 블로그의 테마를 변경하는 동안, CSS 변수 합성의 강력함을 발견했다.
필자가 발견한 패턴은 HSLA 색상에 대한 CSS 일부 값을 변수에",웹 개발
https://surfit.io/link/Kp7D6,웹 개발 작업을 더 쉽고 효과적으로 만들어주는 유용한 도구들!,"프런트 엔드 SEO에서 모바일에 이르기까지 웹 사이트에서 확인해야 할 중요한 사항들 체크리스트!


이 도구를 사용하여 Google, Facebook 또는 Twitter에서 볼 때 웹 사이트의 제목, 설명 및 이미지는 방문자가 보는 방식과 동일하게 표시
Unminify
JavaScript, CSS, HTML, XML 및 JSON 코드를 압축 해제 (압축 해",웹 개발
https://surfit.io/link/w8pMZ,프론트엔드 개발자라면 알고 있어야 할 브라우저의 동작 과정,"프론트엔드 개발자에게 있어 브라우저는 거의 모든 것과도 같습니다. 브라우저를 통해 개발을 하고, 브라우저를 통해 테스트와 배포를 진행하며, 최종 사용자들은 브라우저를 통해 웹 어플리케이션에 접속할 수 있습니다. 그만큼 프론트엔드 개발자에게 있어 브라우저는 뗄레야 뗄 수 없는 관계입니다.

나의 밥줄이기도 하다

하지만 그렇다고 해서 프론트엔드 개발자가 브라",웹 개발
https://surfit.io/link/3jaqR,프론트엔드 개발자 면접 정리,"1달동안의 구직을 마치고, 프론트엔드 개발자로 취업을 했다.
그동안 내가 수많은 블로그 글을 보며 도움을 얻은 것 처럼, 내 글 또한 취업을 준비하는 누군가에게 도움이 되길 바라는 마음으로 글을 작성해본다. 

참고로, 나의 경우 D3.js를 사용해서 진행한 프로젝트가 있었기에 D3.js 관련 질문이 좀 있으며, 리액트를 사용하는 회사에만 지원했다.
기술 ",웹 개발
https://surfit.io/link/3BGB1,requestIdleCallback으로 초기 렌더링 시간 14% 단축하기,"최근 웹 바이탈이 대두되면서 LINE 증권 프런트 엔드에서도 성능 개선에 힘쓰기 시작했습니다. 약 2주 정도 개선 작업을 진행한 뒤 개발 환경에서 계측한 결과, Lighthouse 성능 점수가 기존보다 30점가량 상승했습니다. 성능을 개선하기 위해 다양한 방안을 실시했는데요. 이번 글에서는 그중에서도 흥미로웠던 사례로 requestIdleCallback을 ",웹 개발
https://surfit.io/link/wJvEV,CSS Paint API로 동적 배경을 만드는 방법,"현대의 웹 애플리케이션은 많은 이미지가 사용되며 다운로드되는 용량의 대부분을 차지한다. 이를 최적화하면 웹페이지의 성능을 효과적으로 향상시킬 수 있다. 기하학적 모양의 배경 이미지를 사용하는 경우, CSS Paint API를 사용하여 프로그래밍 방식으로 이를 대체할 경우 효과적으로 웹페이지의 성능을 향상시킬 수 있다.
이 튜토리얼에서 CSS Paint AP",웹 개발
https://surfit.io/link/37RvD,"프로모션용 웹앱 빌더, 만다오","만다오(Mandao)는 웹프론트개발그룹에서 즐겨하는 카트라이더 러쉬 플러스의 대표 캐릭터인 다오에서 이름을 따왔으며 만들어다오라는 뜻을 가지고 있습니다.

프로모션용 웹앱 빌더가 무엇인가요?

배달의민족, 비마트 등 우아한형제들 서비스에서는 매일 다양한 프로모션이 진행됩니다. 쿠폰을 다운받거나 동영상을 시청하고 메뉴를 좌우로 스와이프하는 등 다양한 기능과 ",웹 개발
https://surfit.io/link/wdA6E,프론트엔드 꿀 라이브러리 정리,"다만, 아래 게시글을 참고하기 위해서는 HTML, CSS, JS를 충분히 사용한 경험이 있어야 한다.
거창한 경험이 필요한건 아닌데,
CSS - 선택자 우선순위와 덮어쓰기
JS - 변수/함수 활용
이 정도 지식은 있어야 자유자재로 사용할 수 있고 라이브러리에 지배당하지 않을 수 있다.
Materialize
이 라이브러리만 사용해도 https://materi",웹 개발
https://surfit.io/link/KQgrY,프론트엔드 개발자에게 UX는? 연기에 몰입해서 나오는 배우들의 애드립,"피플웨어 책 초반에 이런내용이 나온다.

.. 우리가 아는 프로젝트 대다수에서 그 어떤 기술적인 난관보다 사회적인 복잡도가 훨씬 더 컸다는 사실이 분명해 졌다. 그러면서, 불가피하게, 우리는 아주 속상한 결론에 도달했다. 다분히 사회학이 기술보다 더 중요하다는 사실을 오랫동안 느낌으로 알아왔으면서도 정작 우리 중 누구도 그렇게 관리하려 시도하지 않는다는 사",웹 개발
https://surfit.io/link/59k00,SEO를 위한 노오오력!🔥,"SEO(Search Engine Optimization)는 검색어 최적화로써, 사이트가 검색자에게 적절하게 노출되도록 하는 것을 말합니다. 사이트를 검색어 최상단에 위치시키는 것, 사용자의 니즈에 맞춰 사이트를 노출시키는 것, 검색어에 관련된 사이트를 표시하는 것 또한 SEO라고할 수 있습니다.
이번 포스팅에서는 on-site-seo를 읽고, 평소에 제가 ",웹 개발
https://surfit.io/link/5z8o1,코딩 플레이그라운드 만들며 맛보는 요즘 FE 개발 환경 Part 1,개발을 하다 보면 특정 환경에서 빠르게 코드를 작성하고 그 결과를 확인해보고 싶을 때가 있어요. 라이브러리나 프레임웍 혹은 언어를 공부할 때나 아이디어를 빠르게 실험하거나 프로토타입 해보고 싶을 때 그렇지요. 바닐라 자바스크립트로 충분한 환경이라면 디렉터리 하나 만들고 js 파일 하나 html 파일 하나 만들어서 에디터를 열고 브라우저를 열어서 html 파,웹 개발
https://surfit.io/link/wJBXX,시니어 개발자처럼 VSCode 사용하기,"VSCode는 인기있는 코드 에디터 중 하나이며, VSCode에 익숙해지며 생산성을 엄청나게 끌어올릴 수 있습니다. 이 글에서 소개하는 팁들이 도움이 되었으면 좋겠습니다.

다음과 같은 기능들을 소개할 것입니다.

멀티 커서
  Symbol 이름 바꾸기
  행 이동
  사용자 정의 스니펫 설정


멀티 커서

가끔 여러 군데에서 동시에 타이핑을 해야 할 수",웹 개발
https://surfit.io/link/3G822,시니어 프론트엔드 개발자처럼 크롬 개발자도구 사용하기,"자, 우리가 어떤 이유든 개발용 브라우저로 크롬을 선택했다고 치자. 그러면 디버깅을 위해 개발자 모드를 열게될 것이다.





console 패널을 열어 결과물을 확인하거나, element 패널을 열어 DOM요소에 대한 CSS코드를 확인하기도 한다.



여러분은 정말 크롬 개발자도구를 이해하고 있는가? 개발자도구는 개발 생산성을 높여주는 매우 강력하지만",웹 개발
https://surfit.io/link/wo8Ja,CSS 개발자 지정 속성으로 색상 만들기,"프로젝트에서 사용할 색상을 구성할 때 도움이 되는 기본 도구가 변수입니다.
그동안 프론트엔드 개발자들은 전처리기preprocessor 변수(옮긴이)를 사용해서 프로젝트에서 사용하는 색상을 구성했습니다. 최근에는 많은 개발자가 색상 변수를 구성할 때 CSS 개발자 지정 속성CSS Custom Properties 방법을 선호합니다. 전처리기 변수 방식보다 가장",웹 개발
https://surfit.io/link/Kg9ZL,데이터로 매력적인 랜딩 페이지 만들기 (Using Google analytics A/B Test),"지난 8월과 10월 지인들의 요청으로 mash-up 이라는 이름의 IT 개발 동아리 소개 페이지와 let us go 라는 iOS 컨퍼런스 소개 페이지를 만든 적이 있었습니다. 이는 실제 개발하는데 2일이 채 걸리지 않는 가벼운 프로젝트였었습니다.
하지만.
개발 외에 UX를 고려하거나 기획을 정하는 과정에서는 동아리(컨퍼런스)에 대해 알게 하고 모집하게 한다",웹 개발
https://surfit.io/link/wo8gM,overflow auto는 틀렸다?! 브라우저 스크롤바 잘 숨기는 법,"웹 페이지 개발을 하면서 컨텐츠를 보여줄 때 가늠이 되지 않는다면, 컨테이너 요소에 overflow: auto 를 설정하여 컨텐츠가 길어질 경우 스크롤을 생기게 하여 유연하게 대응이 가능하다.
그런데 사용 중인 OS 또는 브라우저 종류에 따라 이 스크롤 바가 화면에 표시되는 방식에 있어서 차이가 존재하기 때문에 간혹 골칫거리로 작용한다. 
스크롤 바의 wi",웹 개발
https://surfit.io/link/KRzPG,"Front-End 면접 질문 대비 Part3 (CORS, http, browser(최신버전 추가))","오늘은 웹 개발을 하는데 있어서 필수적으로 알아야될 개념에 대해서 알아보겠습니다.
교차 출처 리소스 공유(Cross-Origin Resource Sharing, CORS)
아마 프론트 엔드를 개발하시는 분들이라면 한 번씩을 다 CORS에 대해서 보셨을꺼라고 생각합니다. 😫

➡️ 여기서 교차 출처란 다른 출처를 의미합니다. 즉 다른 출처로 자원을 요청하면 ",웹 개발
https://surfit.io/link/wo8Mj,2021년 Chrome의 새로운 변화 - Schemeful same-site을 대응하자,"이전에는 같은 도메인의 HTTP 사이트와 HTTPS 사이트를 same-site로 취급했습니다. same-site로 취급하기 때문에 Cookie의 SameSite 속성을 Strict 또는 Lax로 설정하면 사이트 간의 Cookie를 보낼 수 있습니다.



하지만 Schemeful same-site가 적용된 후에는 HTTP 사이트와 HTTPS 사이트를 cro",웹 개발
https://surfit.io/link/5eBvY,WebOTP API를 활용한 SMS 본인인증 기능 구현하기,"오늘날 전세계 대부분의 사람들은 휴대전화를 갖고 있습니다. 그래서 일반적으로 개발자들은 고유한 사용자들을 식별할 수 있는 방법으로 전화번호를 사용합니다.

전화번호를 확인하는 방법에는 여러가지가 있겠지만, 임의로 생성된 일회용 비밀번호(OTP, One Time Password)를 싣은 SMS 메시지를 발송하는 것이 일반적인 방법들 중 하나입니다. 사용자는 ",웹 개발
https://surfit.io/link/KpgW0,시각적 회귀 테스트 (Visual Regression Test),"시각적 회귀 테스트란?
작년 많은 프론트엔드 컨퍼런스에서, 시각적 회귀테스트 관련 세션들이 유독 많이들 등장했다. 이는 유닛테스트, 통합테스트 등등으로 해결되지 않았던 UI의 안정성 확보를 위해 좋은 서비스를 유저들에게 전달하기 위해서 제일 말단에 있는 테스트인 시각적 회귀테스트를 진행함으로써 렌더링된 UI 이미지들을 캡쳐하고 또 비교함으로써 프로덕을 안정",웹 개발
https://surfit.io/link/wngDJ,WebRTC는 어떻게 실시간으로 데이터를 교환할 수 있을까?,"최근에 합류한 스타트업에서는 WebRTC를 활용한 반려동물 모니터링 웹뷰 어플리케이션을 만들고 있습니다.

하지만 안타깝게도 저는 반려동물이 없기 때문에(…) 집에 있는 인어킹 인형이 포효하는 영상을 찍어보았습니다

사실 저 역시도 WebRTC에 대해서 아는 것이 전혀 없는 상태에서 시작한 프로젝트였습니다. 그치만 프론트엔드 쪽 업무를 할 줄 아는 사람이 ",웹 개발
https://surfit.io/link/3MBkX,Netlify 로 정적 웹 사이트 배포하기,정적 웹 사이트 (js/html/css만 존재하는 형태)로 서비스 제공이 필요할 때 가장 편하게 구축할 수 있는 방법으로 Netlify가 있습니다.  빌드/배포/호스팅까지 정적 웹 사이트를 제공하기 위한 모든 기능을 쉽고 편하게 제공하다보니 많은 분들이 사용하고 계시는데요.  GithubAction이나 TravisCI와 같이 별도의 CI 서비스를 구축할 필,웹 개발
https://surfit.io/link/wDvLy,Semantic Tag는 SEO에 영향을 미칠까?,"SEO란
대부분의 사람들은 자신이 만든 웹에 방문자가 많길 원할 것이다.
많은 방문자를 모으려면 접근하기 쉬워야 할 것이고,
따라서 검색을 했을 때 위에 표시될 수록 많은 사용자가 몰릴 것이다.
검색엔진에 검색이 잘 되도록 할 때 필요한 것이 SEO이다.
SEO란 검색엔진 최적화(search engine optimization)를 말한다.

검색엔진이 얼마",웹 개발
https://surfit.io/link/woQM1,스케치의 컬러와 크롬의 컬러가 다른 이슈,"디자이너가 스케치에서 작업해준 컬러를 크롬에 적용했는데, 컬러 코드가 동일한데도 색상이 눈에 띄게 다르다.왜 그런 걸까?해결책:프로그램마다 사용하는 컬러 스페이스가 다르기 때문이었다.(좀 찾아보니 컬러 스페이스는 색 공간, 색 영역, 컬러 프로필, 컬러 프로파일, 디스플레이 프로필 같은 용어로 쓰인다. 여기선 통일해서 컬러 스페이스라고 표기했다)크롬을 포한",웹 개발
https://surfit.io/link/wZdgQ,웹 개발자를 위한 Web Protocols 정리,"웹에서 웹 페이지를 정의하고 접근하기 위해 URL 을 사용한다.
URL 의 일반적인 형식은

  protocol://computer_name:port/document_name?parameters


여기서 각 단위의 역할을 살펴보자.

protocol : 문서를 접근하기 위해 사용하는 프로토콜 이름
  computer_name : 문서가 있는 컴퓨터의 도메",웹 개발
https://surfit.io/link/w8BA1,프런트엔드 개발자가 알아야하는 HTTP 프로토콜 Part 1,최근 프런트엔드 개발 관련 수업을 진행할 일이 많아지면서 자연스럽게 비전공자 분들께 HTTP 프로토콜에 대해서 설명할 일이 많아졌습니다. 아무래도 데이터 통신이나 네트워크를 아직 살펴보지 못한 분들에게는 프로토콜이라는 용어부터 어려울 것 같은데요. 그래서 너무 개념적으로 깊지도 않게 딱 프런트엔드 개발할 때 알고 있으면 좋을만한 수준으로 HTTP 프로토콜을,웹 개발
https://surfit.io/link/59Mk0,DOM의 알아두면 좋을 사실들 / 몰랐던 사실들,"우리는 dom의 메서드나 속성에 대해서 잘알지 못하거나 애매하게 알고있다. react나 vue angular 혹은 이전엔 jquery의 도움을 받아 웹 개발을 했었기 때문이다. 때문에 dom에 대해 면밀히 파악해 볼겸 ""DOM을 깨우치다"" 를 읽어보며 헷갈릴만한 부분들을 정리해본다.
1. Node? Element..?같은말인가..?!
여러가지의 노드들로 구",웹 개발
https://surfit.io/link/KQ0pX,주니어 개발자가 Figma로 로고 디자인 해본 썰.txt,"지난 일 주일동안 퇴근 후에 시간을 내서 틈틈이 개인 프로젝트를 하나 했습니다. 별건 아니고 기존에 개인 브랜딩 용도로 사용하고 있던 로고를 Figma를 이용해 새로 제작한 것이었는데요. 사실 작년에 작성했던 2019년 회고글에서도 잠깐 언급했었지만, 디자인 툴을 배워보고 싶다는 생각은 예전부터 있었습니다. 다만 그럴만한 충분한 동기와 시간이 없어서 좀 우",웹 개발
https://surfit.io/link/w8B41,웹 스토리지 : 무엇을 써야할까요?,"최근에 로컬 스토리지를 사용하려고 찾아봤더니 이제는 로컬 스토리지를 사용하지 않는것이 좋다는 Google Chrome 팀 개발자의 글을 발견했습니다.

요즘 트렌드는 이렇구나 다시 한 번 느끼면서 글을 번역해 봤습니다.




브라우저에 데이터를 저장하는 방법은 많습니다. 이중에 무엇을 사용해야 할까요? 인터넷 연결은 불안정하며 언제든 끊어질 수 있습니다.",웹 개발
https://surfit.io/link/3LkWz,Vanilla JS에서 SPA 라우팅 시스템 구현하기,"vanilla js를 제외하고 vue, react, angular와 같은 프레임워크를 사용할 땐 우리는 vue-route, react-router와 같은 Third Party 라이브러리를 많이 사용한다.그렇기 때문에 어떤 프로젝트를 하더라도 SPA (Single Page Application)에서 라우팅을 구현할 일이 없다. 그러므로 인해 라우팅을 구현해 ",웹 개발
https://surfit.io/link/wnadA,이제 React.js 를 버릴 때가 왔다,Single Page Application 소위 SPA 라고 불리는 웹 사이트를 만들기 위한 기술의 사실상의 de facto standard 가 React 라는 걸 부정할 수 없을것이다. React “대항마”로 나온 라이브러리들 조차도 React 의 직간적적인 영향을 많이 받았음을 느낄 수 있다. React 가 초기에 다른 라이브러리들과 근본적으로 달랐던 ,웹 개발
https://surfit.io/link/wJDEL,PixiJS와 Depth map으로 3D 이미지 만들기,"PixiJS 라이브러리와 Depth map(깊이 정보 이미지)을 사용해 3D 이미지를 만들어 봅니다.
이 포스트에서 사용된 이미지 출처는 각 이미지 하단에 표기했으며,
핵심 코드는 Red Stapler의 Create 3D Photo from Image JavaScript Tutorial을 참고했습니다.",웹 개발
https://surfit.io/link/wWoOZ,DOM 101,"DOM은 Document Object Model의 약자로, HTML과 CSS 등을 바탕으로 Node와 Node Tree를 생성하고 Event를 컨트롤하는 등의 작업을 JavaScript 등을 이용해 처리할 수 있게 해줍니다.
DOM은 크게 아래와 같은 부분으로 나눌 수 있습니다.
Events
Nodes
Ranges
Traversal
Sets
이 글은 WHA",웹 개발
https://surfit.io/link/KQyz4,"어서와, SSR은 처음이지 - 개발 편","어서 와, SSR은 처음이지? - 개발 편은 Node.js 기반의 SSR 개발과 운영을 통해 겪은 경험기 총 3편 중 두 번째 글로, 17년간 잔존해 왔던 레거시 시스템 내에서 네이버 모바일 블로그 서비스를 어떻게 SSR로 전환했는지와 대한민국의 거의 모든 사람들이 사용하는 모바일 블로그 서비스의 트래픽에 대응하기 위해 SSR 구축을 어떻게 준비하고 개발했",웹 개발
https://surfit.io/link/KRQ4k,Svelte로 만드는 Todo List - 2,"이전 글 Svelte로 만드는 Todo List - 1에서 내용이 이어집니다.


레이아웃



우선 레이아웃을 위처럼 만드려고 생각하고 있습니다. 간단하긴 하지만, 구현해야 할 스펙을 정리해보고 가도록 하죠.

간단한 네비게이션 바와 반응형 레이아웃
  할 일을 입력받는 인풋 박스
  추가하기 버튼
  남은 일이 몇 개인지 알려주기
  각 아이템은 체크와",웹 개발
https://surfit.io/link/3xqyj,Svelte로 만드는 Todo List - 1,"흔히 프론트엔드 프레임워크(+ 라이브러리) 3대장으로 일컫어지는 것들이 있죠. 프론트엔드 생태계에 큰 관심은 없더라도 한 번쯤은 들어봤을 이름들인데요, 바로 Angular, React, 그리고 Vue 입니다. 저는 Vue를 주력으로 사용하고 있고, React와 Angular를 겉핥기 수준으로 하는 정도입니다.

낯선 이름의 등장, Svelte

그러다가 작",웹 개발
https://surfit.io/link/3XN98,라이트하우스 6.0에서 바뀐 성능 지표변화,"지난 번역 글에서 라이트하우스의 향상된 기능들이 업데이트될 것이라고 소개하였다.
그리고 최근 5월에 이르러 라이트하우스 6.0이 정식으로 릴리즈되었고 최신 크롬 84에도 적용될 예정이다. 바로 써보고 싶은 사람은 크롬 나이틀리 빌드(카나리아)를 다운로드하자.
라이트하우스의 간단 소개
라이트하우스는 웹페이지의 성능 측정과 개선을 위한 도구로, 크롬 개발자 도",웹 개발
https://surfit.io/link/3NO0P,Web Share API로 공유 기능 쉽게 구현하기,"네이티브 다이얼로그를 웹에서도 쓰자! 거 좋은 거 있음 같이 씁시다

최근에 회사에서 진행한 프로젝트에서 Web Share API를 활용하게 될 기회가 있어서, 이에 대해 한 번 짚고 넘어가고자 포스트를 써봅니다.

사실 순수하게 사용하는 방법만 소개하자면 꽤 간단한 글인데, 그것만 설명하면 좀 심심하니까(…) 오늘은 API의 등장 배경과 사용 예시, 주의",웹 개발
https://surfit.io/link/3NPQ7,CSS 팁: 팝업창을 멋지게 만드는 너무 간단한 방법,"CSS가 발전하면서 다른 매체에서는 가능한데 웹 페이지에선 불가능해서 어쩔 수 없이 못 쓰던 기능도 쓸 수 있게 되었다. 하지만 현직에 계시는 분들은 오래 전 CSS에 익숙하다보니 좋은 기능이 있어도 모르고 지나치기가 쉬운 듯 하다. 오늘 소개할 backdrop-filter가 좋은 예이다.



웹 개발자/디자이너라면 로그인이나 배너 등 팝업창을 다루어 보",웹 개발
https://surfit.io/link/Kb8gv,웹 개발을 시작하기에 알아야하는 가장 기초적인 지식,"오랜만이군..2월부터 디자이너를 위한 웹 개발 스터디를 진행하기로 했다. (자의다) 아무래도 스터디 시간 내에 설명할 수 있는 분량에는 조금 한계가 있어서, Medium에 시리즈로 글을 올려볼까 생각한다.
일단 첫번째 글은 웹 개발을 시작하기에 알아야하는 가장 기초적인 지식, 즉 Web 101이겠다.

Front-End? Back-End?
웹 Front-E",웹 개발
https://surfit.io/link/3NLbl,Resize Observer - 요소의 크기 변화 관찰,"Resize Observer는 설정한 요소의 크기 변화를 관찰하며,
크기 변화를 제어할 경우 발생할 수 있는 무한 콜백 루프나 순환 종속성(Circular dependency) 등의 다양한 문제 없이 사용할 수 있습니다.",웹 개발
https://surfit.io/link/3q1Np,Variable fonts (가변 폰트),"UI 개발자가 알던 기존의 가변 폰트는 em, rem 단위를 사용하여 브라우저 비율에 따라 글자 크기가 늘어나거나 줄어드는 폰트였는데요, 여기서 말하는 가변 폰트는 다른 의미를 가지게 됩니다.
가변 폰트는 Adobe, Apple, Google, Microsoft 가 협력하여 폰트의 너비, 두께, 스타일마다 별도의 다른 파일을 사용하는 기존 폰트 대신 다양한",웹 개발
https://surfit.io/link/wDr6j,Svelte(스벨트) - 새로운 개념의 프론트엔드 프레임워크,"시작하기에 앞서 개인적인 생각을 정리하면,문법이 심플하고 몇 개의 개념만 잘 넘어가면 학습하기 어렵지 않습니다.주변에서 ‘Vue보다 쉽다’라는 말이 나오는데 기존 프레임워크의 Store 개념까지 알고 있다면 빠르게 학습할 수 있다고 봅니다.후발 주자답게 잘 정리된 공식 문서와 여러 튜토리얼 그리고 예제도 준비되어 있고 최근 눈에 띄게 성장하고 있으니 눈여겨",웹 개발
https://surfit.io/link/wnROb,CSS Grid 완벽 가이드,"CSS Grid(그리드)는 2차원(행과 열)의 레이아웃 시스템을 제공합니다.Flexible Box도 훌륭하지만 비교적 단순한 1차원 레이아웃을 위하며, 좀 더 복잡한 레이아웃을 위해 우리는 CSS Grid를 사용할 수 있습니다.CSS Grid는 예전부터 핵(Hack)으로 불린 다양한 레이아웃 대체 방식들을 해결하기 위해 만들어진 특별한 CSS 모듈입니다.C",웹 개발
https://surfit.io/link/wmPBy,CSS Logical Properties and Values,"이 글의 주요 예제 및 도식은 Elad Shechte의 아티클과​ Rachel Andrew의 아티클에서 차용하였습니다.
배경

과거에 CSS는 세계인들이 가장 많이 사용하는 언어의 흐름 방식(horizontal-tb, LTR, 텍스트는 왼쪽에서 오른쪽으로 흐르고, 문단은 위에서 아래로 흐르는 방식)에 맞춰서 만들어졌다. 그렇기 때문에 CSS 속성에서 top",웹 개발
https://surfit.io/link/KPpbN,CSS Containment Module,"HTML과 CSS를 사용하여 웹 페이지를 제작할 때 중요하게 생각해야 하는 것은 무엇일까요?
최종적으로는 디자인 가이드나 기획서 등 산출물을 바탕으로 동일한 화면을 출력하는 것일 텐데요
이 과정에서 좀 더 최적화된 웹 페이지를 만들어내는 것 또한 중요한 과제일 것입니다.
1. 소개
웹페이지에서는 종종 불필요한 작업이 일어납니다.
예를 들면 문서의 한 곳에서",웹 개발
https://surfit.io/link/wm76y,전체화면 스크롤 웹 사이트 플러그인 fullPage.js,"제가 블로그를 시작한 이유 중 하나가 바로 개인 포트폴리오를 정리하기 위함입니다. 사실 이 전에도 문서로 만든 개인 포트폴리오가 있긴 했는데, 일단 퀄리티가 허접했고(...) PDF와 같은 문서 파일로 정리하다보니 다른 사람들에게 포트폴리오를 보여주기가 번거로웠습니다. 그래서 예전부터 공개적으로 올릴 수 있을 수준의 개인 포트폴리오를 새로 만들 계획을 어느",웹 개발
https://surfit.io/link/3alqb,웹 개발자를 위한 7가지 실용적인 디자인 팁,"대부분의 웹 개발자들은 그들이 좋든 싫든 필연적으로 디자인적인 결정을 내려야 할 상황에 마주치곤 합니다. 아마도 여러분이 일하고 있는 회사에서는 전문적인 디자이너가 없어서, 여러분이 직접 새로운 기능을 위한 UI를 만들어내야 할 수도 있습니다. 또는 여러분의 개인 프로젝트를 부트스트랩을 이용해 만든 평범한 사이트보다 더 근사하게 만들고 싶을 수도 있습니다.",웹 개발
https://surfit.io/link/KvWDl,주니어 개발자가 반응형 레이아웃 리팩토링한 썰.txt,"저는 이전에 VR 솔루션을 서비스로 제공하는 스타트업에서 프론트엔드 개발자로 근무한 경험이 있습니다.

그 때 제가 담당한 주요 프로젝트 중 하나가 버전 업그레이드이었습니다. 그 내용은 기존에 Angular와 PHP 기반의 웹 어플리케이션을 Vue와 Node.js로 이동하는 것이었습니다. 무겁고, 레거시 코드가 많아서 유지보수가 까다로웠기 때문입니다.

오",웹 개발
https://surfit.io/link/w6QM0,한눈에 보는 HTML 요소(Elements & Attributes) 총정리,"HTML5 기준으로 작성합니다.
모든 브라우저에서 사용할 수 있어야 합니다.(IE 지원 불가는 별도 표시)
Deprecated(더 이상 사용되지 않는) 요소나 속성은 제외합니다.
의미론적(Semantic)인 내용 위주로 작성합니다.
표시적 의미(화면에 표시되는 방식)로 사용되지 않음을 전제하므로 그에 대한 내용은 생략합니다.
빈 태그(Empty Tags)는",웹 개발
https://surfit.io/link/w8qWz,나의 버건디 팔면체 : Three.js를 사용한 3D 그래픽스 입문기,"자바스크립트를 이용한 손쉬운 3D 그래픽스 프로그래밍 입문을 도와주는 라이브러리 three.js 사용기.
프론트엔드 프로그래머로서 요즘 나의 가장 큰 관심사는 기술적으로도 훌륭한 동시에 보는 사람이 감탄할만한 아름다운 사이트를 만드는 것이다. 그런터라 지난 주에 미국의 Stripe라는 회사의 여러 랜딩 페이지를 보면서 약간의 질투를 동반하는 경이로움을 느꼈",웹 개발
https://surfit.io/link/K2vZd,잘 알려지지 않은 유용한 CSS 속성들,"pointer-events, object-fit, will-change 등 상대적으로 덜 알려졌지만 알아두면 언젠가 유용하게 써먹을 CSS 속성을 소개합니다.들어가며
웹 개발자로 일하다 보면 CSS 의 세계는 참 무궁무진하다는 사실을 자주 느낀다. 매일같이 다루는 몇 가지 속성만으로도 대부분의 상황을 충분히 커버할 수 있지만, 오히려 그래서인지 여러 흔치 ",웹 개발
https://surfit.io/link/wWmb3,"최신 브라우저의 내부 살펴보기 1 - CPU, GPU, 메모리 그리고 다중 프로세스 아키텍처","이 시리즈는 Chrome을 중심으로 최신 브라우저를 들여다봅니다. Chrome이 속도뿐만 아니라 안정성을 위해 어떤 아키텍처를 사용하는지 설명하는 것에서 시작해, 웹 페이지가 어떤 단계를 거쳐 화면에 그려지는지 설명합니다. 이와 더불어 성능 향상을 위해 웹 개발자가 고려하면 좋을 사항도 다룹니다.",웹 개발
https://surfit.io/link/50Ol3,HTML5 입력 양식: 어디쯤 왔을까?,"HTML5는 새로운 입력 양식 13종을 선보이면서 웹 디자이너와 개발자가 양식에 추가할 수 있는 필드의 수를 크게 늘렸다. 새로운 유형 모두는 브라우저에서 지원해야 하며, 아직은 사용자층이 더디게 늘고 있다. 2019년 현재 필드 유형의 상황은 어떨까? 사용할 만한 것이 있을까? 아니면 여전히 피해야 할까?",웹 개발
https://surfit.io/link/w8yqK,웹 폰트 사용과 최적화의 최근 동향,"2018년 6월 8일부터 9일까지 Webconf.asia 2018이 열렸습니다. Webconf.asia는 웹 분야의 전문가들이 최신 기술과 노하우, 철학 등을 공유해 더 높은 수준의 웹을 만들 수 있게 도움을 주는 것이 목적인 콘퍼런스입니다. Webconf.asia 2018의 세션에서 ""Fontastic Web Performance"" 세션은 웹 폰트 최적화",웹 개발
https://surfit.io/link/Q64vn,월간 크롬 이슈 리포트 2022년 1월호,"프런트엔드 개발의 가장 큰 디펜던시인 크롬 브라우저의 주요 이슈를 Chrome Platform Status의 Roadmap과 한 달간 blink-dev 활동 요약을 기준으로 정리하여 공유한다.
M은 Milestone을 의미하며, M93은 93버전을 의미한다.
 웹 플랫폼 관련 이슈 위주로 다루며, 서비스에 영향이 크다고 판단되는 부분은 목차에 📌 를 표시한",웹 개발
https://surfit.io/link/llOXo,브라우저 뷰포트 (layout 와 visual viewport) 간단 정리하기,"브라우저 에서 Viewport 는 화면 크기를 이야기하며, 메뉴바, 탭영역 등을 제외한 순수 화면 영역이다.Viewport 의 영역은 디바이스 크기와, 각각의 브라우저 마다 계산되는 영역이 달라 같은 웹페이지라도 환경에 따라, 매우 다양해진다.Viewport 는 화면이 크기이기 때문에, viewport 보다 웹 문서가 클 경우 스크롤이 생성되며, 이를 가지",웹 개발
https://surfit.io/link/5znaX,"리소스 우선순위 - preload, preconnect, prefetch","Critical Rendering Path 최적화에서 이야기한 리소스 우선순위를 지정할 수 있는 link 태그의 preload와 preconnect, prefetch에 대해 이야기하도록 하겠습니다.현재 페이지에서 사용될 것이 확실한 리소스들을 preload해야 합니다. preload는 브라우저에게 현재 페이지에서 필요한 리소스를 빠르게 가져오게 합니다.&l",웹 개발
https://surfit.io/link/glrk7,"2022년, FE Techs","React 는 여전히 친절한 우리의 이웃이다.현업에서 내가 느끼는 그러니까 동료 개발자들과 이야기하면서 생각해 본 점들을 정리해보고자 한다. 이 글에는 꽤 많은 주관이 섞여 있는 데, 당연히 동료들과 이야기를 하면서 얻어낸 인사이트이기 때문이다.예전에 jQuery 가 가졌던 위상을 지금은 React 가 가지고 있다고 해도 딱히 과언은 아닐 거라 생각한다. ",웹 개발
https://surfit.io/link/rMydZ,카카오웹툰은 하드웨어 가속과 IntersectionObserver를 어떻게 사용했을까?,"웹 특성상 앱과 같은 성능을 기대하기는 힘들기 때문에 한번에 적은 요소를 렌더링 하거나 lazy load 기술을 도입하는 방식의 성능 개선이 필요했습니다.
특히 카카오웹툰 앱은 스크롤 위치에 따라 배경 이미지가 따로 움직여 입체감을 느끼게 하는 패럴랙스가 많은데요. 아쉽지만 웹에서는 최적화가 쉽지 않아 이벤트 페이지를 제외하고는 전부 제거했습니다.
본 글에",웹 개발
https://surfit.io/link/3x8vY,Svelte 소개,"Svelte라는 단어는 날씬한, 호리호리한이라는 뜻입니다. 단어의 뜻답게 적은 코드와 작은 용량이 장점입니다. Svelte는 가상돔(Virtual DOM)을 사용하지 않습니다. 가상돔을 사용하지 않기 때문에 돔(DOM)의 변경을 찾기 위한 런타임(Runtime)이 필요하지 않습니다.지금부터 Svelte 공식 문서에서 소개하는 Svelte의 3가지 특징을 이",웹 개발
https://surfit.io/link/GAJZd,ngrok - 포트포워딩 없이 외부에 로컬서버 공개하기,"개발을 하다 보면, 로컬에서 개발 중인 버전을 배포하지 않고 외부에 공개해야할 일이 존재한다. 이를테면 현재 개발중인 기능에 대해 논의해야하는 상황이거나, 모바일에서 테스트하기 위한 상황 등이 있을 것 이다. 또한 Webhook 을 테스트하기 위해 수정사항이 발생할 때 마다 배포하는 것은 고역일 것이다.
물론 현재 개발 중인 장소가 자택이라면, 공유기 설정",웹 개발
https://surfit.io/link/Q6Jap,제품 운영 잘하기,"타입스크립트 코드를 컴파일하고 나면 이를 웹팩이 하나의 파일로 합치는 빌드 과정이 있는데요. 두 개 프로세스를 따로 실행하는 방식을 사용하고 있었습니다.
이런 방식에는 몇 가지 문제가 보였는데요. 컴파일 오류를 발견하더라도 뒤이어 실행되는 웹팩 메시지에 가려져 오류 메시지를 제대로 볼 수 없었습니다. 매번 프로세스를 두 개씩 실행해야 하는 것도 약간 번거로",웹 개발
https://surfit.io/link/qyrvO,웹에서 다크모드 지원하기,"보통 밝은 바탕, 어두운 글자를 제공하는 일반적인 UI와는 반대로 어두운 바탕, 밝은 글씨를 기본으로 보여주는 UI를 다크모드라고 합니다. 다크모드를 지원하는 가장 큰 이유는 눈의 피로감을 덜어주기 위해서입니다. 이런 이유로 글자가 많거나 컨텐츠 소모시간이 긴 애플리케이션은 대부분 다크모드를 지원하고 있습니다.
하지만 다크모드는 밝은 조명 아래에서는 크게 ",웹 개발
https://surfit.io/link/GAJO0,setSelectionRange로 검색창 커서 옮기기,"검색창에 텍스트가 있으면 클릭시 커서가 제일 뒤로 오도록 해주세요.

기획팀으로 부터 요구사항미션이 들어왔습니다. 구현된 결과물은 카카오웹툰 검색 페이지에서 긴 제목의 작품을 검색하고, 다시 input창에 포커스를 해보면 커서가 제일 뒤로 가는 것을 볼 수 있습니다.

	
처음에는 단순히 scrollTo(x, 0) 을 이용해서 가능하다고 생각했는데, 막상 ",웹 개발
https://surfit.io/link/vRRnb,새로운 CSS 기능적인 의사 클래스 :is()와 :where(),"CSS를 작성할 때 여러 요소에 동일한 스타일을 적용하기 위해 종종 긴 선택자 목록들을 작성해야 했다. 예를 들어, 제목 요소 안에 있는 &lt;b&gt; 태그의 색상을 변경하려면 다음과 같이 작성했다.
h1 &gt; b, h2 &gt; b, h3 &gt; b, h4 &gt; b, h5 &gt; b, h6 &gt; b {
  color: hotpink;
}",웹 개발
https://surfit.io/link/00WPG,Cookie 톺아보기,"쿠키를 통해 사용자 인증이 이루어 질 수 있고, 쿠키를 통해 사용자 인증이 이루어질 경우 쿠키가 탈취 되었을 때 큰 피해가 발생 할 수 있기 때문에 쿠키를 사용하기 전에 쿠키가 무엇인지 이해하고 주의하며 사용하는 것이 중요합니다.쿠키는 HTTP 쿠키, 웹 쿠키 또는 브라우저 쿠키라고 불리웁니다. 쿠키는 서버가 사용자의 웹 브라우저에 전송하는 작은 데이터 조",웹 개발
https://surfit.io/link/wJbzz,사이더(CIDR) 란 무엇인가?,"AWS, GCP, Azure 등 퍼블릭 클라우드 등을 사용할 때 네트워크 설정에서 VPC 및 Subnet 을 생성하여 네트워크를 구성하게 됩니다. 이 때 CIDR(Classless Inter-Domain Routing) 블록을 이용하여 10.10.1.0/24 등과 같이 표시하게 되는데 주니어 개발자 꼬꼬마 시절에는 AWS 콘솔에서 네트워크, 시큐리티그룹 등",웹 개발
https://surfit.io/link/3726q,비동기 처리 시 race condition 고려하기,"비동기 처리를 어렵게 하는 요소 중 하나인 race condition과 이에 대한 대안책을 함께 알아보겠습니다.
Race condition
경합 조건이라고도 하며 이것은 꽤 여러 군데에서 통용되는 개념입니다.

경합 조건은 시스템의 실질적인 동작이 다른 통제 불가능한 이벤트의 순서나 타이밍에 따라 달라지는 전자 장치, 소프트웨어 또는 기타 시스템의 조건이다",웹 개발
https://surfit.io/link/wWxbM,SOP(Same-origin policy) 란 무엇일까?,"Same-Origin-Policy(동일 출처 정책) SOP는 한 Origin에서 로드된 문서 또는 스크립트가 다른 Origin의 리소스와 상호 작용할 수 있는 방법을 제한하는 중요한 보안 메커니즘이다.


보안을 위협하는 문서를 격리하여, 보안 위협으로부터 보호할 수 있다.


한마디로 말해서 웹 브라우저에서 동작하는 프로그램은 로딩된 위치에 있는 리소스만",웹 개발
https://surfit.io/link/wm2ye,package-lock.json이란?,"package-lock.json은 왜 생성될까?

우리가 기존에 사용하는 package.json 만으로는 정보가 부족하기 때문입니다.

package.json 에서는 버전정보를 저장할 때 version range 를 사용합니다.

“내가 사용할 패키지의 버전은 1.2.7버전이다.” 라고 말하는 대신 “나는 1.2.7버전 이상의 패키지를 사용할거다.”처럼 말",웹 개발
https://surfit.io/link/wk7k7,Webpack,"보통 개발 분야에서 모듈이란 특정 기능을 수행할 수 있는 코드를 집약시켜놓은 것을 의미합니다. 
간단한 기능을 수행하는 모듈을 모아서 더 복잡한 기능을 수행하는 모듈을 만들 수도 있습니다.

모듈은 자신만의 고유한 영역(scope)를 가지고 있는 것이 특징인데, 이전 Javascript 세상엔 모듈이라는 개념이 없었다고 합니다. 
간단하게 예를 들어보겠습니",웹 개발
https://surfit.io/link/woklp,Cookies,"Cookie 생성

생성에는 두 가지 방식이 있음

Javascript를 이용하여 document.cookie를 호출
  Web server에서 Set-cookie response header를 설정하는 것
Web server에서 response header를 설정하기 위해서는 아래와 같이 코드를 구성해보자.

const express = require(""",웹 개발
https://surfit.io/link/374vd,Web Components  기반 마이크로 프론트앤드,Angular v6부터 Web Components에 대한 지원으로 @angular/elements 기능이 추가되어 Custom HTML Tag을 만들 수 있도록 지원한다. 본 글은 해당 사이트의 글을 Nx.dev 환경과 통합하여 개발하는 과정을 설명한다. Nx 환경은 mono repository 기반으로 multi application을 개발 할 수 있는 ,웹 개발
https://surfit.io/link/3Lxjq,Web Event 다루기,"웹 개발에서 프론트엔드 영역이 이토록 발전할 수 있었던 가장 주된 이유는 웹의 특성이 단순한 ‘페이지’에서 ‘애플리케이션’으로 진화했다는 사실일 겁니다. 그리고 이 말은 곧, 좋은 웹의 기준을 판단할 때 사용자의 행동에 따라 웹이 얼마나 자연스럽게 반응할 수 있는지가 중요함을 나타냅니다.
자연스러운 인터랙션을 위해서는 UI, UX, 성능 등 다양한 요소를 ",웹 개발
https://surfit.io/link/50pAd,말줄임 표시 하는 방법,"긴 문장이 정해진 영역을 넘어갈 경우, 어떻게 말줄임표(...)를 사용하여 생략할 수 있을까요?

css 말줄임 속성: text-overflow


이 속성은 overflow 속성으로 숨겨진 컨텐츠가 어떤 상태에 있는지 효과적으로 전달하기 위한 속성입니다.


  
    
  
    
      
        이 속성만으로 컨텐츠가 영역을 넘치도록(o",웹 개발
https://surfit.io/link/KQn8X,툴팁 적용하는 방법: title 및 커스텀 툴팁,"툴팁은 보통 어떤 영역의 공간이 부족하여, 부연설명을 위한 공간을 말합니다. 툴팁을 사용하면 페이지를 좀 더 가독성있게 보여줄 수 있고, 유저가 이해하기 쉬운 페이지로 만들어줍니다.

과한 툴팁은 유저에게 피로도를 주지만, 적절한 양의 툴팁은 유저에게 도움이 될 수 있습니다. 지금부터 바로 툴팁 적용하는 방법에 대해서 알아보겠습니다.


  title 태그",웹 개발
https://surfit.io/link/378bq,Vue 2.x버전에서 Swiperjs를 설치하고 사용해보자 (Feat. IE 11),"IE11을 지원해야 하는 프로젝트에서 Vuejs 2.x 버전을 사용할 경우 Swiper를 설치하는 방법과 Vuejs 내에서 Swiper를 적용할 때 참고해봐도 괜찮을 몇 가지 사례입니다.

브랜디에서는 반응형으로 제작된 서비스 및 컨텐츠들이 많은데, 다양한 슬라이더를 혼용해서 사용하고 있었기 때문에 작년 8월에 이 슬라이더들에 대한 통합 작업을 진행했습니다",웹 개발
https://surfit.io/link/wn18g,간단한 OAuth 2.0 클라이언트 만들기(feat. 깃허브),OAuth 는 기본적으로 서비스 제공자가 신뢰할 수 없는 타 어플리케이션에게 사용자의 아이디와 패스워드를 제공하지 않더라도 사용자의 특정 정보에 접근하거나 작업을 처리할 수 있도록 하는 방법이자 표준이다. 최근 일반적으로 웹사이트에 흔히 볼 수 있는 SNS 계정으로 로그인하는 것이 가장 대표적인 사용처라고 볼 수 있다. 내가 만든 서비스에 수동으로 회원가입,웹 개발
https://surfit.io/link/wm4GZ,throttle(쓰로틀링) 과 debounce(디바운싱)로 성능 향상 시키기,"스크롤 혹은 인풋 박스에서 너무 많은 이벤트를 호출하여 불필요한 메모리를 소모하여 퍼포먼스를 떨어뜨립니다. 이 문제를 해결하기 위한 방법으로 Throttling(쓰로틀링)과 debouncing(디바운싱)이 있습니다.
기본 개념쓰로틀링은 마지막 함수가 호출된 이후 지정한 시간이 지나기 전에 호출되지 않도록 하는 것입니다.디바운싱은 연속적인 함수호출중 마지막 ",웹 개발
https://surfit.io/link/wZLjR,Webview Inline Video Optimization,"일반적으로 웹 페이지라고 하면 데스크탑이나 모바일 디바이스에서 Chrome, Firefox와 같은 브라우저를 통해 열리는 페이지를 의미합니다. 하지만 애플리케이션에서 띄우는 WebView는 일반적인 브라우저에서 열리는 웹 페이지와는 조금 다릅니다. 모바일 디바이스에서 제공하는 브라우저는 크게 In-App Browser, External Browser의 2가",웹 개발
https://surfit.io/link/5lb7y,반응형 사이드바,"웹사이트 레이아웃에서 사이드바(sidebar)는 목차, 광고 배너, 인기/신규 게시물 목록, 연관/추천 상품 목록과 같이 보조적인 컨텐츠를 배치하기 위해서 사용합니다. 이번 포스트에서는 플렉스 박스(Flexbox)와 미디어 쿼리(Media Query)를 이용해서 화면의 너비에 알아서 반응하는 사이드바를 만들어보겠습니다.
웹페이지 마크업
예제로 목차 영역과 ",웹 개발
https://surfit.io/link/KR9O7,Generalist,"여러분들이 생각하는 프런트엔드 개발자의 역할이란 무엇인가? 다양한 생각이 있을 거라 생각하지만 많은 사람들의 뇌리에 스치는 건 역시 다음 문장일 것이다.HTML, CSS, JavaScript 를 활용하여 웹 애플리케이션을 만들어내는 개발자. 백엔드 개발자가 만들어준 API 를 바탕으로 여러 직군의 사람들과 협업하여 좋은 UI / UX를 만들어내는 걸 목표로",웹 개발
https://surfit.io/link/K27pW,Refresh Token과 Sliding Sessions를 활용한 JWT의 보안 전략,"사용자의 상태를 유지하지 않는 stateless한 서비스를 운영할 때는 보안 이슈가 문제가 됩니다. 이를 해결하기 위한 보안 솔루션 중 하나가 JSON Web Token입니다.

이를 이용해서 보안 정책을 세우는 경우 토큰 관리에 여러 전략을 이용 할 수 있습니다. JWT가 제공하는 기본적인 AccessToken 외에 RefreshToken을 도입한다거나 ",웹 개발
https://surfit.io/link/w8N7v,스티키 헤더 (sticky header),"CSS의 sticky position을 이용하여 항상 화면 상단에 항상 달라붙어 있는 헤더(header)를 만들어보겠습니다.

sticky position은 CSS에 비교적 최근에 추가된 포지셔닝 메커니즘인데요.
스크롤하지 않을 때는 static position처럼 동작하다가 스크롤할 때는 fixed position과 유사하게 동작합니다.
position ",웹 개발
https://surfit.io/link/KY47P,REST 및 베스트 프랙티스,"REST

REST는 웹의 창시자 중의 한 사람인 로이 필딩이 2000년에 발표한 논문에 의해서 처음 소개되었다.


현대의 아키텍처가 웹의 장점을 잘 활용하지 못하고 있다고 판단했기 때문에 웹의 장점을 최대한 활용할 수 있는 네트워크 기반의 아키텍처를 소개했는데 그것이바로 Representational Safe Transfer(REST) 이다.


RES",웹 개발
https://surfit.io/link/KbMO1,width 속성과 너비 결정 매커니즘,"width 속성은 엘리먼트의 너비를 제어하기 위해서 사용되는데요. 크게 절대값, 상대값, 키워드로 설정이 가능한데 이에 따른 너비가 어떻게 결정되는지 이해하는 것이 중요합니다.

px와 같은 절대 단위를 사용하여 width 속성값을 지정해주면 해당 엘리먼트는 항상 고정된 너비를 갖게 됩니다.
즉, 절대값으로 width 속성을 설정하면 가용 너비이나 컨텐트의",웹 개발
https://surfit.io/link/wkLO1,CSS 미디어 쿼리 prefers-color-scheme (다크 모드),"다크 모드(dark mode)는 야간에 눈을 편안하게 하고 작업의 집중도를 높을 수 있도록 시스템 전반에 어두운 색생 체계를 적용해주는 운영 체제의 기능입니다.
2018년에 macOS Mojave에 처음으로 소개된 다크 모드는 현재 Windows 10을 비롯하여 많은 운영 체제에서 지원하는데요.
이에 따라 점점 많은 애플리케이션과 웹사이트가 운영 체제의 다",웹 개발
https://surfit.io/link/wZoOQ,카드 뒤집기 애니메이션,"카드 뒤집기 애니메이션을 위해 총 4개의 div를 준비한다.
먼저 카드 앞면, 카드 뒷면 역할을 한 front, back 클래스 div가 필요하다.
그리고 이 카드 앞뒤 div를 감싸는 하나의 div(wrap)를 준비한다.
마지막으로 hover시, 이벤트 버벅거림을 막기위해 hover 감지용 부모(card)를 준비했다.
&lt;div class=""card""",웹 개발
https://surfit.io/link/3XRo2,프론트엔드에서의 Inversion of Control,"IoC(Inversion of Control), 제어 역전이란 무엇일까?
가장 간단히 설명하자면 용어 그대로 코드의 로직이 일반적인 제어 흐름이 아니라 역전된 것을 의미한다.
하지만 처음 IoC를 듣게 되면 일반적인 제어 흐름은 무엇인지,
그리고 그 흐름이 어떻게 역전되는 것인지 감이 오지 않을 것이다.
IoC를 이해하기 위해 택시를 타는 상황을 예로 들어",웹 개발
https://surfit.io/link/KY4Yg,자원을 수정하는 HTTP 메서드 - PUT vs PATCH,"개발자들 중에는 Put과 Patch의 차이를 크게 생각하지 않고 아무거나 선택하거나 혼용하여 API를 만드는 사람도 있다. 
정말로 두 메서드를 구별없이 사용해도 괜찮은 걸까!?
여기 지하철 노선 정보를 수정하는 자바스크립트 코드가 있다. 

지하철 노선(Line)은 이름(name), 첫 차 시간(startTime), 마지막 차 시간(endTime), 배차",웹 개발
https://surfit.io/link/37qYD,z-index가 동작하지않는 이유 4가지 (그리고 고치는 방법),"z-index는 요소들을 다른 레이어 위에 겹칠수 있게하는 css 속성입니다. 처음에는 보면 간단해보이지만 정말로 간단합니다.
z-index를 999999로 설정해도 원하는 데로 동작하지 않을 수 있는 비직관적인 이상한 규칙이 있습니다!
이 기사에서는 z-index가 작동하지않는 가장 흔한 이유 4가지와 해결 방법을 설명할 것입니다.
1. 같은 쌓임 맥락(",웹 개발
https://surfit.io/link/5zmoD,이벤트 핸들러를 대하는 개발자의 자세,이벤트 핸들러는 UI를 개발할 때면 항상 사용된다. 웹뿐만 아니라 네이티브 어플리케이션에서도 약간의 차이가 있을뿐 거의 동일한 추상이 사용된다. 자주 사용되는 만큼 중요하지만 사실 너무 자주 사용되다 보니 가볍게 생각하며 습관적으로 고민 없이 좋지 않은 코드를 만들곤 한다. 자주 사용된다는 건 코드의 양적인 비중도 크다는 것이고 그만큼 조금만 더 신경 쓴다,웹 개발
https://surfit.io/link/3qA7p,"개발자와 디자이너의 협업을 위한 LINE 디자인 시스템, LDS 소개","400여 명의 디자이너가 다수의 프로젝트를 동시다발적으로 진행할 때 어떤 문제점을 겪게 될까요? 또한 디자이너뿐 아니라 제품 제작에 가장 직접적으로 연결되어 있는 개발자에게는 어떤 이슈가 발생하게 될까요?



디자이너에게 발생한 이슈부터 살펴보겠습니다. 디자이너들은 어떤 버튼이 최종 버튼인지, 어떤 컬러를 써야 하는지, 어떤 폰트와 어떤 아이콘을 사용해야",웹 개발
https://surfit.io/link/wmmGL,삽질하기 싫으면 꼭 읽어봐야 할 Canvas 트러블 슈팅,"이 글에서는 Canvas 프로젝트에서 흔히 겪을 수 있는 문제들에 관해 설명한다.
안티 앨리어싱(Anti-Aliasing)
  앨리어싱은 컴퓨터 그래픽에서 해상도의 한계로 선 등이 우둘투둘하게 되는 현상을 의미하는 것으로, 위 그림처럼 결과물이 깨져 보이며 '계단 현상'이라 부르기도 한다.
안티 앨리어싱은 앨리어싱에 방지하는 뜻의 안티(Anti-)가 붙여져",웹 개발
https://surfit.io/link/wkoaa,CORS 😫,"주니어 프론트엔드 개발자에게 CORS는 어려운 문제 중에 하나라고 생각한다.
보안 관련된 어떤 이유때문에 에러를 낸다는것까진 알겠는데, 에러를 해결하는 방법이 막막하다.
풀스택 개발자로 개발자 커리어를 이어나가면서, 의외로 많은 개발자들이 (주니어 프론트엔드 개발자든, 아니든 상관없이) CORS에 대해 오해하고 있는 사람들도 보았다. 또 CORS에러를 해결",웹 개발
https://surfit.io/link/50lLo,"웹표준 - W3C와 WHATWG, HTML5.2와 HTML5.3 그리고 HTML Living Standard는 무엇인가?","W3C와 WHATWG는 다른 조직이다.

W3C는 2021년 4월 20일 현재 437개 회원사를 가진 조직이다. 웹의 창시자인 팀 버너스 리가 1994년에 만들었다. (참고: 한글 위키피디아 W3C )

WHATWG은 W3C가 의사결정이 느리다는 이유로 애플, 모질라 재단, 오페라 소프트웨어가 모여서 2004년에 만든 그룹이다. 지금은 애플, 모질라, 구글",웹 개발
https://surfit.io/link/KgeRP,CSS :not(selector) 가상 선택자의 한계 잘 알고 쓰기,":not(selector) 가상 선택자는 매력적인 놈이지만 아래 한계를 인지하고 사용해야 한다.


    중첩시킬 수 없다. :not(:not(...))
  
  
    아무 영향을 미치지 않는 놈이 생길 수도 있다. :not(*)
  
  
    아무 영향도 없지만 특정도(specificity)만 올리게 될 수 있다. #foo:not(#bar) 이 ",웹 개발
https://surfit.io/link/KEnjo,JWT는 어디에 저장해야할까? - localStorage vs cookie,"이번에 지하철 미션을 만들면서 JWT를 클래스 property에 저장했었는데
(지금 돌이켜보니... 왜 그랬을까... ㅋㅋㅋㅋ)
리뷰어 분께 해당 부분을 피드백 받으면서 어디에 JWT를 저장하는 것이 좋을까
에 대해 고민해보게 되었다.
🍙 기본 지식
1. JWT
Json Web Token의 약자로 모바일이나 웹의 사용자 인증을 위해 사용하는
암호화된 토큰을",웹 개발
https://surfit.io/link/3jjxl,AJAX 요청에 대한 CORS 허용하기,"Origin이란?
Origin은 아래와 같이 protocol, host, port 3개 부분으로 구성된다.2개의 Origin을 비교시 3개 부분 중 단 1개만 일치하지 않아도 서로 다른 Origin이 된다. 즉, http, https의 차이, 80, 8080의 차이만 나도 서로 다른 Origin이 된다.
브라우저에서 현재 페이지의 Origin 알아내기
브라",웹 개발
https://surfit.io/link/50y4E,🔐 https로 React 로컬 테스팅하기,"로컬에서 https://dev.example.com으로 테스팅하기
/etc/hosts에서 현재 ip와 가짜 url을 매핑해준다
mkcert로 가짜 url SSL 인증서를 생성한다
package.json에서 npm start 스크립트에 SSL 인증서 위치를 설정해준다
https://dev.example.com:3000 으로 접속한다
2021년 1월에 업데이트",웹 개발
https://surfit.io/link/5z0Lp,"자바스크립트 번들링의 핵(♚), Webpack","웹팩의 등장 배경. 모듈과 브라우져. IE는 잘가요~✋

포스트 모듈 시스템 시절

모듈 시스템이 없던 시절에서는 HTML 파일에 로직을 담당하는 함수가 담긴 스크립트 파일을 불러와서 사용해야 했다. 전역 공간에서 모든 함수가 노출될 수 있었다. 함수의 이름이 동일하다면 충돌이 이는 것은 당연했다. (브라우져의 콘솔에서도 함수를 사용할 수 있을정도로) 그래",웹 개발
https://surfit.io/link/KPMp6,"html, css 문제와 몰랐던 것들","저는 프론트엔드 개발 2년차이지만 html, css, javascript를 책이나 글로 공부해 본 적이 없었습니다. 최근에 시간을 가지고 모던 자바스크립트 deep dive 책을 하나씩 살펴보고 있습니다. 책에는 프론트엔드 면접 기출문제에서 보던 내용과 실제로 면접에서 받아보았던 내용들이 있습니다. 이 책을 보고 실제 면접에서 나올 수 있을만한 문제, 받아",웹 개발
https://surfit.io/link/3Ngxz,스크립트의 실행 시점을 조절하는 Async와 Defer 속성 - 재그지그의 개발 블로그,"동적인 웹 어플리케이션을 만들기 위해서는 JavaScript 파일을 불러오는 것이 필수적입니다. 하지만 복잡한 비즈니스 로직이 포함된 JavaScript 파일이라면 그 용량이 매우 클 것입니다. 따라서 스크립트 파일을 비동기 방식으로 불러오는 방식을 통해 로드 시간을 줄일 수 있습니다.

오늘은 이를 가능하게 만들어주는 &lt;script&gt; 태그의 속",웹 개발
https://surfit.io/link/5z8qD,JWT 개념 이해하기,"JWT(JSON Web Token)는 인증 토큰을 정의하는 방법에 대한 표준(RFC 7519)이다.(여러 서버 간에) 안전하게 인증 정보를 주고 받을 수 있도록, 인증 토큰을 생성하고 해석하는 방법을 규정한다.토큰은 JSON 포맷의 정보와 이 정보의 위변조를 막기 위해 서명한 값으로 구성돼있다.처음이라면 익숙하지 않아서 JWT를 사용하는 용도가 헷갈릴 수 ",웹 개발
https://surfit.io/link/KQb66,CORS,"Ajax에는 Same Origin Policy라는 원칙이 있습니다.

비단 Ajax뿐만 아니라, XMLHttpRequest객체는 기본적으로 동일 출처 정책(SOP, Same Origin Policy)의 제약을 받는다고 말하는게 더 정확한듯 합니다.

현재 브라우저에 보여지고 있는 HTML을 내려준 웹서버에게만 Ajax요청을 보낼 수 있습니다.

한 도메인의",웹 개발
https://surfit.io/link/w4W6b,"fetch, setTimeout은 표준 API일까?","얼마전 VanillaJS로 IE10까지 지원하는 작은 프로젝트를 진행했었다.
처음에는 웹팩과 바벨이 IE 지원에 대한 모든것을 해결해 줄것이라고 생각했다.
그래서 마음 편하게 코드를 짜고 있었는데...
작업 중간에 IE 테스트를 해보니 fetch가 동작하지 않았다.
분명 babel로 처리 했는데 왜안되지 싶은 마음에 https://babeljs.io/ 에서",웹 개발
https://surfit.io/link/wd9dA,browserslist 쾌속 가이드,언젠가부터 브라우저스리스트(browserslist)라는 것이 자주 눈에 띄더니 지금은 FE 개발 환경에서 뺄 수 없는 도구가 되었어요. 아마도 바벨(Babel)이라는 FE 계의 걸출한 스타 프로젝트에서 도입했기 때문일 거라고 생각합니다. 바벨을 사용하는 프로젝트들이 많다 보니 간접적으로 혹은 직접적으로 브라우저스리스트까지 사용하게 되는 것이죠. 사실 좋아요,웹 개발
https://surfit.io/link/KQkOY,iOS 개발자가 모바일 청첩장을 만들면 어떻게 될까?,"어쩌다보니 사랑에 빠지고 결혼을 하게 되었습니다. 그리고 또 어쩌다보니 모바일 청첩장을 깃헙 페이지를 통해 직접 만들게 되어버렸습니다. 아무래도 디자이너와 결혼하는 개발자의 숙명 같은 건가 봅니다. 



웹개발은 서툰 편이지만, 그래도 애플플랫폼 개발자로서 올해에 WebKit에 어떤 변화가 있었는지는 나름 팔로우 하고 있었습니다. 그래서 이번 기회에 그 ",웹 개발
https://surfit.io/link/3LQzq,"User-Agent Client Hints의 도입, UA 프리징을 대비하라","이 글에서는 클라이언트 입장에서 User-Agent Client Hints를 다룹니다.

지금까지 웹 서비스는 User-Agent HTTP 헤더에 포함된 User-Agent string에서 브라우저, OS, 사용자의 기기 정보 등 사용자 에이전트 정보를 얻을 수 있었습니다. User-Agent string을 이용하는 이유는 주로 다음과 같습니다.

특정 버",웹 개발
https://surfit.io/link/37XN6,WebRTC Library 다루기,"WebRTC는 웹 브라우저 상에서 실시간 커뮤니케이션을 가능하도록 설계된 API 및 스펙입니다.

구현체로는 Google Chrome 에 들어가는 libwebrtc가 있으며, 이 라이브러리에서 C++ 기반 API 및 모바일 (Android / iOS 등)에서 사용 가능한 API를 제공합니다.

libwebrtc는 Chrome 내의 다른 컴포넌트와 마찬가지로",웹 개발
https://surfit.io/link/woLPV,개선된 페이지 스택으로 LINE 증권의 웹 페이지 전환 처리하기,"들어가며



안녕하세요! sunderls입니다. 저는 2년 전에 페이지 스택을 주제로 ‘LINE MANGA: Page Stack을 이용해서 페이지 전환 처리하기‘라는 글을 썼고, 현재 LINE 증권에서도 같은 방식으로 프로젝트를 진행하고 있습니다. 그래서 이번 글에서는 페이지 스택이 어떻게 진화했는지, 어떤 과제를 안고 있는지 함께 알아보겠습니다. 


",웹 개발
https://surfit.io/link/3M0eM,백엔드 개발자의 웹 프론트엔드 개발기,"안녕하세요, 신사업부문 띠잉셀의 오지산입니다.
저희 셀은 영상으로 놀 수 있는 소셜 서비스, 띠잉(Thiiing)을 개발하고 있어요.

이전 글에서 띠잉 채팅 서버의 개발 과정이 언급되었는데요.
이번 글에서는 채팅 기능을 싣고 있는, 띠잉의 웹뷰 전반에 대한 이야기를 다뤄보려고 합니다.

현재 저희 셀에는 프론트엔드 개발자가 따로 있지 않아, 백엔드 개발자",웹 개발
https://surfit.io/link/Kg74P,"어서 와, SSR은 처음이지? - 도입 편","2019년 5월 29일 ""내 동영상 페이지""를 시작으로 Node.js 기반의 SSR(server-side rendering) 아키텍처가 네이버 모바일 블로그에 적용되고 있습니다.

어서 와, SSR은 처음이지?는 Node.js 기반의 SSR 개발과 운영을 통해 겪은 경험을 총 3편에 걸쳐 다룰 예정입니다.

어서 와. SSR은 처음이지? - 도입 편  
어",웹 개발
https://surfit.io/link/50z4o,"[js] alert, confirm, prompt의 특성","개요동기명령의 일시정지?webview구현 시의 어려운 점더욱 강력한 일시정지 기능결론개요top
오늘은 window.alert에 대해 잠시 설명드릴까합니다.
alert, prompt, confirm 등이 다 비슷한 동작을 하는데, 이 함수 3종은 매우 특수한 능력이 있습니다.
이 능력은 과거 ES3.1부터 부여된 예외적인 능력인데 바로 브라우저 전체를 올스탑",웹 개발
https://surfit.io/link/3MxzN,브라우저 싸움에 등 터지는 개발자들을 위한 HTTP쿠키와 톰캣 쿠키 프로세서 이야기,"무심코 프로젝트의 라이브러리를 버전 업하다가 예상치 못한 에러가 발생한 경험이 다들 있을 것입니다. 주로 이런 에러는 성가신 호환성 문제이거나 버전 별 버그가 원인이지만, 가끔은 버전과 세월을 따라 발전하는 기술 표준이 원인일 때도 있습니다. 변화하는 기술에 대한 정확한 지식이 없으면 애용하던 라이브러리 버전이 deprecate 될 때 어려움을 겪을 수밖에",웹 개발
https://surfit.io/link/Kp424,HTML IMG의 srcset과 sizes 속성,"일반적으로 반응형 웹에서 이미지를 지원하기 위해, ‘미디어쿼리’라고 부르는 CSS Media Rule(@media)에서 background-image 속성을 많이 사용하는데, 반응형 이미지를 처리하기 위해 뷰포트(Viewport)의 크기부터 사용자 화면의 해상도 등 많은 환경을 고려해야 합니다.하지만 우리는 HTML IMG의 srcset과 sizes를 통해",웹 개발
https://surfit.io/link/KPlWM,인피니티 스크롤에 대한 고찰,인피니티 스크롤이란?우리는 쉽게 인피니티 스크롤을 접할 수 있다. 인피니티 스크롤은 단어 그대로 끊임없는(무한) 마우스 스크롤를 의미한다. 이러한 기능은 대체적으로 스크린이 작은 모바일 환경에서 사용자 친화적이다.현재 이커머스회사에서 frontend 개발자로 업무를 진행하고 있는 Martin 입니다. 글을 읽으시고 궁금한 점은 댓글 혹은 메일(hoons01,웹 개발
https://surfit.io/link/31YRB,왜 다시 SSR인가 01,"프론트엔드 개발자가 아니더라도 웹 개발에 몸을 담고 있다면 한번쯤은 SPA 애플리케이션에 대해서 한번쯤 들어봤을 것이다. 요즘은 일부 회사들의 공고에도 보란듯이 SPA 애플리케이션 경험자라는 키워드가 나와있을 정도로 프론트엔드 개발자에게는 알아야하는 기본적인 소양이 되었다. 이참에 대체 SPA 애플리케이션이 무엇인지, 왜 SPA 애플리케이션이 나오게 되었는",웹 개발
https://surfit.io/link/KpM93,CSS를 배우는 방법,많은 사람이 다양한 CSS 강좌 중 어떤 강좌를 들어야 할지 추천해달라거나 CSS를 어떻게 배워야 할지 알려달라는 부탁을 한다. 또한 CSS를 어려워하는 사람도 많이 본다. 대체로 이런 사람은 낡은 사고방식으로 CSS라는 언어를 보기 때문에 문제를 겪는 경우다. CSS는 최근 몇 년 동안 많이 바뀌었기 때문에 지금은 지식을 새로 쌓기 아주 좋은 시기다. 자,웹 개발
